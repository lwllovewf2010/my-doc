Content-Type: multipart/related; start=<op.mhtml.1359616168468.43260f420874d4af@192.168.5.74>; boundary=----------e25euX8Ol7ukWO0i9gLjSV
Content-Location: http://www.iteye.com/news/22984/
Subject: =?utf-8?Q?=E5=85=8D=E8=B4=B9=E7=9A=84Android=20UI=E5=BA=93=E5=8F=8A=E7=BB=84=E4=BB=B6=E6=8E=A8=E8=8D=90=20-=20=E7=A7=BB=E5=8A=A8=E5=BC=80=E5=8F=91=20-=20ITeye=E8=B5=84=E8=AE=AF?=
MIME-Version: 1.0

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=default.htm
Content-Type: text/html; charset=utf-8; name=default.htm
Content-ID: <op.mhtml.1359616168468.43260f420874d4af@192.168.5.74>
Content-Location: http://www.iteye.com/news/22984/
Content-Transfer-Encoding: 8bit

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN" dir="ltr">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>免费的Android UI库及组件推荐 - 移动开发 - ITeye资讯</title>
    <meta name="description" content="短短数年时间Android平台就已经形成了一个庞大而活跃的开发者社区。许多社区开发的项目业已进入成熟阶段，甚至可以用于商业的软件生产中，且不用担心质量问题。 本文编译自androiduipatterns，意在分享一些免费、开源的Android UI库及组件资源。 一、UI组件库 1. GreenDroid   该项目可以实现下列的UI设计： 动作栏（Action Bar） 快捷动作（Quick Ac ..." />
    <meta name="keywords" content="Android, 库, 组件, UI设计模式,mobile,移动开发" />
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
    
    <link rel="search" type="application/opensearchdescription+xml" href="/open_search.xml" title="ITeye" />
    <link href="http://www.iteye.com/stylesheets/news.css?1359603811" media="screen" rel="stylesheet" type="text/css" />
    <script src="http://www.iteye.com/javascripts/application.js?1358214518" type="text/javascript"></script>
    <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535605-1']);
  _gaq.push(['_setDomainName', 'iteye.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>


      <link href="http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1348819953" media="screen" rel="stylesheet" type="text/css" />
  <script src="http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1325907333" type="text/javascript"></script>
<script src="http://www.iteye.com/javascripts/hotkey.js?1324994303" type="text/javascript"></script>
<script src="http://www.iteye.com/javascripts/weiboshare.js?1324994303" type="text/javascript"></script>
  </head>
  <body>
    <div id="page">
      <div id="header">
        <div class="clearfix"><div id="user_nav">
      <a href="/login" class="welcome" title="登录">您还未登录 !</a>
    <a href="/login">登录</a>
    <a href="/signup" class="nobg">注册</a>
  </div>
</div>
        <div class="clearfix">
          <div id="branding">
            <a href="http://www.iteye.com"><img alt="ITeye3.0" src="http://www.iteye.com/images/logo.gif?1324994303" title="ITeye-最棒的软件开发交流社区" /></a>
          </div>
          <div id="gg"><IFRAME SRC="/iframe_ggbd/760" SCROLLING=no WIDTH=728 HEIGHT=90 FRAMEBORDER=0></IFRAME></div>
        </div>
      </div>
      <div id="content" class="clearfix">
        <div id="main">
          



          


<div class="crumbs" style="margin:10px 0;">
  <a href="/news">资讯频道</a> <span class="arrow">&rarr;</span>
  <a href="/news/category/mobile">移动开发</a>
</div>

<div class="news_main">
  <div class="news">
    <div class="clearfix">
      <div class="news_digg">
        <div class='digg' id='d22984'><h3 class='digged'><span class='digg'>24顶</span><br/><span class='bury'>0踩</span></h3></div>
      </div>
      <div id="news_icon"><a href="/news/category/mobile" title="查看移动开发分类资讯" target="_blank"><img alt="移动开发" src="http://www.iteye.com/images/icon/whole_category/mobile.gif?1324994303" /></a></div>
      <div class="title">
        <h3>
          <img alt="翻译新闻" src="http://www.iteye.com/images/news/fy.gif?1324994303" />
          <a href='/news/22984' title="免费的Android UI库及组件推荐">免费的Android UI库及组件推荐</a>
          <span class="actions">
            
            
          </span>
        </h3>
        <div class="news_info" style="background-color: transparent;">
          <span class='date'>2011-10-08 18:11</span> by 资深编辑 <a href='http://luiang1018.iteye.com' target='_blank' title='luiang1018'>luiang1018</a>
          <span class="comment"><a href="#comments">评论(9)</a></span>
          <span class='view'>有17992人浏览</span>
          
        </div>
        <div class="news_tag">
                      <a href="/news/tag/Android"><span>Android</span></a>
                      <a href="/news/tag/%E5%BA%93"><span>库</span></a>
                      <a href="/news/tag/%E7%BB%84%E4%BB%B6"><span>组件</span></a>
                      <a href="/news/tag/UI%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"><span>UI设计模式</span></a>
                  </div>
      </div>
    </div>
        
    
        <script type="text/javascript">
      var hunters = ["\u003Ca href='/jobs/2506' target='_blank' style='color:#000;'\u003E\u003Cspan style='font-weight:bold;'\u003E\u5317\u4eac: \u003C/span\u003E \u3010\u5317\u4eac\u3011\u6e38\u620f\u516c\u53f8\u8bda\u9080php\u5f00\u53d1\u5de5\u7a0b\u5e08\u003C/a\u003E"]
      var hunter_id = Math.ceil(Math.random() * hunters.length) - 1;
      if(hunter_id == -1) hunter_id = 0;
    </script>
    <div id="hunter_recommended" style="background:#fff;border: 1px solid #ccc; padding: 4px;margin-bottom: 10px;">
      <span id="hunters_nav" style="margin-right:5px;">
        <a href="#" onclick="hunter_id <= 0 ? hunter_id = hunters.length - 1 : hunter_id--; $('hunters').update(hunters[hunter_id]);return false;" style="border:1px solid #ccc;padding: 0 3px;size: 13px;text-decoration: none;">&lt;</a>
        <a href="#" onclick="hunter_id >= hunters.length - 1 ? hunter_id = 0 : hunter_id++; $('hunters').update(hunters[hunter_id]);return false;" style="border:1px solid #ccc;padding: 0 3px;size :13px;text-decoration: none;">&gt;</a>
      </span>
      猎头职位: <span id="hunters"></span>
      <script type="text/javascript">$('hunters').update(hunters[hunter_id]);</script>
    </div>

    <div id="news_content">
      短短数年时间Android平台就已经形成了一个庞大而活跃的开发者社区。许多社区开发的项目业已进入成熟阶段，甚至可以用于商业的软件生产中，且不用担心质量问题。
<br />
<br />本文编译自<a href="http://www.androiduipatterns.com/2011/10/free-android-ui-library-component.html" target="_blank">androiduipatterns</a>，意在分享一些免费、开源的Android UI库及组件资源。
<br />
<br /><strong><span style="font-size: large;">一、UI组件库</span></strong>
<br />
<br /><strong>1. GreenDroid </strong>
<br />
<br /><div style="text-align: center;"><img src="http://dl.iteye.com/upload/attachment/565439/04e6a393-c05d-3c6a-afce-db192bb3f30e.png" /></div>
<br />
<br />该项目可以实现下列的UI设计：
<br /><ul>
<li>动作栏（Action Bar）
</li><li>快捷动作（Quick Action）
</li><li>工作区（Workspace）
</li><li>动态列表（Dynamic List）
</li></ul>以及许多更有用的组件。
<br />
<br /><a href="http://greendroid.cyrilmottier.com/" target="_blank">项目网站</a> / <a href="https://market.android.com/details?id=com.cyrilmottier.android.gdcatalog" target="_blank">示例</a>
<br />
<br /><strong>2. ActionBarSherlock </strong>
<br />
<br /><div style="text-align: center;"><img src="http://dl.iteye.com/upload/attachment/565441/34992ae1-7fb7-3011-af7f-d0af44d80b9f.png" /></div>
<br />
<br />在Google针对手机的动作条API推出前，该项目一直与ICS一起使用。Jake最近将项目拓展到了动作条之外。这里也有针对工作区等的组件。
<br />
<br /><a href="http://actionbarsherlock.com/" target="_blank">项目网站</a> / <a href="https://market.android.com/details?id=com.battlelancer.seriesguide" target="_blank">示例</a>
<br />
<br /><strong>3. Android Compatibility Package</strong>
<br />
<br /><div style="text-align: center;"><img src="http://dl.iteye.com/upload/attachment/565443/b0a942c2-5fa8-32a9-9c9c-d4347c6413bc.png" /></div>
<br />
<br />这是一个来自Google Android库的官方扩展。Compatibility Package顾名思义就是Android官方针对旧平台版本所不支持的API或是Android Framework没有提供的函数库，将其打包发布。它包含了许多非常有用的API。该包同样包含工作区UI设计的实现。
<br />
<br /><a href="http://developer.android.com/sdk/compatibility-library.html" target="_blank">项目网站</a>
<br />
<br /><strong><span style="font-size: large;">二、UI组件</span></strong>
<br />
<br /><strong>1. iosched </strong>
<br />
<br /><div style="text-align: center;"><img src="http://dl.iteye.com/upload/attachment/565445/e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c.png" /></div>
<br />
<br />这是一个官方的Google I/O的应用（同样可用在GDD，Google Developer Day）（注：Google I/O是Google每年都会举办的历时两天的开发者大会，该大会谈及各种技术问题。开发人员会提供非常多的示例来展示他们的技术。这个项目专门为了这个会议提供了一个Android应用程序。）。该应用程序实现了大量的UI设计，成为Google Android设备拥护者的参考标准。强烈推荐使用该应用程序的仪表盘UI设计模式。（<a href="http://code.google.com/p/iosched/source/browse/android/src/com/google/android/apps/iosched/ui/widget/DashboardLayout.java" target="_blank">Google代码链接：Dashboard.java</a>）
<br />
<br />项目网站：<a href="http://code.google.com/p/iosched/" target="_blank">http://code.google.com/p/iosched/</a>
<br />
<br /><strong>2. Android-Viewflow </strong>
<br />
<br />该项目的工作区UI设计模式与Google Docs所使用非常相似。
<br />
<br />项目网站：<a href="https://github.com/pakerfeldt/android-viewflow" target="_blank">https://github.com/pakerfeldt/android-viewflow</a>
<br />
<br /><strong>3. android-coverflow </strong>
<br />
<br />该项目可以用于完成一个cover flow。在这个项目网站的视频中可以得到更多的信息。
<br />
<br />项目网站：<a href="http://code.google.com/p/android-coverflow/" target="_blank">http://code.google.com/p/android-coverflow/</a>
<br />
<br /><strong>4. android-viewbadger </strong>
<br />
<br />该项目让devs无需修改布局文件（layout file）即可显示badges。
<br />
<br />项目网站：<a href="https://github.com/jgilfelt/android-viewbadger" target="_blank">https://github.com/jgilfelt/android-viewbadger</a>
<br />
<br /><strong>5. android-pulltorefresh </strong>
<br />
<br />该项目实现动态列表/下拉刷新（pull to refresh）的UI设计。
<br />
<br />项目网站：<a href="https://github.com/johannilsson/android-pulltorefresh" target="_blank">https://github.com/johannilsson/android-pulltorefresh</a>
<br />
<br /><strong>6. Android-ViewPagerIndicator </strong>
<br />
<br />该项目可以用于实现工作区的UI设计。
<br />
<br /><a href="https://github.com/JakeWharton/Android-ViewPagerIndicator" target="_blank">项目网站</a>/<a href="https://market.android.com/details?id=com.viewpagerindicator.sample" target="_blank">示例</a>
<br />
<br />VIA <a href="http://www.androiduipatterns.com/2011/10/free-android-ui-library-component.html" target="_blank">http://www.androiduipatterns.com/2011/10/free-android-ui-library-component.html</a>
<br />
<br />
    </div>

    <div id="news_recommended_n2"><IFRAME SRC="/iframe_ggbd/156" SCROLLING=no WIDTH=468 HEIGHT=60 FRAMEBORDER=0></IFRAME></div>

    
  <div class="attachments">
    
      
        <ul style="display:none;">
          <li><a href="http://dl.iteye.com/upload/attachment/0056/5439/04e6a393-c05d-3c6a-afce-db192bb3f30e.png" target="_blank"><img src='http://dl.iteye.com/upload/attachment/0056/5439/04e6a393-c05d-3c6a-afce-db192bb3f30e-thumb.png' class='magplus' title='点击查看原始大小图片' /></a></li>
          
          <li>大小: 12.3 KB</li>
        </ul>
      
    
      
        <ul style="display:none;">
          <li><a href="http://dl.iteye.com/upload/attachment/0056/5441/34992ae1-7fb7-3011-af7f-d0af44d80b9f.png" target="_blank"><img src='http://dl.iteye.com/upload/attachment/0056/5441/34992ae1-7fb7-3011-af7f-d0af44d80b9f-thumb.png' class='magplus' title='点击查看原始大小图片' /></a></li>
          
          <li>大小: 21 KB</li>
        </ul>
      
    
      
        <ul style="display:none;">
          <li><a href="http://dl.iteye.com/upload/attachment/0056/5443/b0a942c2-5fa8-32a9-9c9c-d4347c6413bc.png" target="_blank"><img src='http://dl.iteye.com/upload/attachment/0056/5443/b0a942c2-5fa8-32a9-9c9c-d4347c6413bc-thumb.png' class='magplus' title='点击查看原始大小图片' /></a></li>
          
          <li>大小: 11.4 KB</li>
        </ul>
      
    
      
        <ul style="display:none;">
          <li><a href="http://dl.iteye.com/upload/attachment/0056/5445/e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c.png" target="_blank"><img src='http://dl.iteye.com/upload/attachment/0056/5445/e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c-thumb.png' class='magplus' title='点击查看原始大小图片' /></a></li>
          
          <li>大小: 14.6 KB</li>
        </ul>
      
    
    
      <ul>
        <li><a href="#" onclick="$$('div.attachments ul').invoke('show');$(this).up(1).hide();return false;">查看图片附件</a></li>
      </ul>
    
  </div>



    <div>
          </div>
  </div>

        <div id="digg_bottom" class="clearfix">
      <div class="share_weibo">分享到：
      <a data-type='sina' href="javascript:;" title="分享到新浪微博"><img src="/images/sina.jpg"></a>
      <a data-type='qq' href="javascript:;" title="分享到腾讯微博"><img src="/images/tec.jpg"></a>
      </div>
<div class='digged'><strong>24</strong> <br/>顶</div><div class='digged'><strong>0</strong> <br/>踩</div></div>

  <div class="comments">
    <span style="font-weight:bold; font-size:16px;margin-right:14px;">评论</span> 共 9 条  请<a href="/login">登录</a>后发表评论 
    <a id="comments" name="comments"></a>
    <div id='nc123571'>
  <h5>9 楼 <a href='http://ferian12.iteye.com' target='_blank' title='ferian12'>ferian12</a> 2012-11-15 18:01  </h5>
  <div>收藏<img src="/images/smiles/icon_biggrin.gif" /> </div>
</div>
<div id='nc117583'>
  <h5>8 楼 <a href='http://invisableway.iteye.com' target='_blank' title='invisableway'>invisableway</a> 2012-06-12 11:19  </h5>
  <div>好东西，要留着！</div>
</div>
<div id='nc100489'>
  <h5>7 楼 <a href='http://xiaowennanzi.iteye.com' target='_blank' title='xiaowennanzi'>xiaowennanzi</a> 2011-12-12 11:14  </h5>
  <div>相当不错相当不错</div>
</div>
<div id='nc97613'>
  <h5>6 楼 <a href='http://fzh0803.iteye.com' target='_blank' title='fzh0803'>fzh0803</a> 2011-11-01 11:19  </h5>
  <div>这个要顶。</div>
</div>
<div id='nc96646'>
  <h5>5 楼 <a href='http://suphy.iteye.com' target='_blank' title='suphy'>suphy</a> 2011-10-18 09:25  </h5>
  <div>这么好的东西怎么没顶啊&nbsp;&nbsp;&nbsp;&nbsp;<img src="/images/smiles/icon_surprised.gif" /> </div>
</div>
<div id='nc96507'>
  <h5>4 楼 <a href='http://songfantasy.iteye.com' target='_blank' title='songfantasy'>songfantasy</a> 2011-10-15 14:10  </h5>
  <div>这么好的东西，没有人顶吗？</div>
</div>
<div id='nc95965'>
  <h5>3 楼 <a href='http://shaobin0604.iteye.com' target='_blank' title='shaobin0604'>shaobin0604</a> 2011-10-10 10:17  </h5>
  <div>好东西<img src="/images/smiles/icon_idea.gif" /> </div>
</div>
<div id='nc95956'>
  <h5>2 楼 <a href='http://jekey.iteye.com' target='_blank' title='Jekey'>Jekey</a> 2011-10-10 09:17  </h5>
  <div><img src="/images/smiles/icon_idea.gif" /> 收下了！</div>
</div>
<div id='nc95857'>
  <h5>1 楼 <a href='http://sdujq.iteye.com' target='_blank' title='sdujq'>sdujq</a> 2011-10-09 08:59  </h5>
  <div>很好 谢谢<img src="/images/smiles/icon_razz.gif" /> </div>
</div>

    
    
  </div>
  <div class="comments"><h3>发表评论</h3></div>
  
  <p style="text-align:center; margin-top:10px; margin-bottom:30px;"><a href="/login"> <img src="/images/login_icon.png" style="vertical-align:middle; margin-right: 10px;" /> 您还没有登录,请您登录后再发表评论 </a></p>

</div>
<script type="text/javascript">

  function quote_comment(id) {
    new Ajax.Request('/editor/quote', {
      parameters: {'id':id, 'type':'NewsComment'},
      onSuccess:function(response){
        editor.bbcode_editor.textarea.insertAfterSelection(response.responseText);
        Element.scrollTo(editor.bbcode_editor.textarea.element);}
    });
  }
  
  dp.SyntaxHighlighter.HighlightAll('code', true, true);
  fix_image_size($$('div#news_content img'), 650);
  fix_image_size($$('div.comments img'), 620);

  new WeiboShare({share_buttons: $$('.share_weibo')[0], img_scope: $('news_content')});
</script>



        </div>
        <div id="local">
          <div class="notices_area">
<a href="http://www.iteye.com/news/25338-iteye-csdn-recruitment"><b>2012 ITeye&CSDN最新职位火热招聘中！</b>急聘ruby研发、编辑、运营！请将简历发送至hrzhaopin@csdn.net</a></div>            <div>
  <form action="/news/search" method="get">    <input class="text" id="query" name="query" size="15" style="width: 135px;" type="text" />
    <input class="submit" type="submit" value="搜索资讯" style="width: 68px;" />
  </form></div>



    
        <div>
  <h3>相关资讯 </h3>
        <ul>
                    <li><a href="/news/25517" target="_blank">Android 版 GitHub 发布</a></li>
                    <li><a href="/news/24403" target="_blank">25 款面向Web设计师的实用Android应用推荐</a></li>
                    <li><a href="/news/25417" target="_blank">IntelliJ IDEA 12将集成Android UI设计器</a></li>
              </ul>
  </div>
        <div>
  <h3>相关讨论 </h3>
        <ul>
                    <li><a href="http://www.iteye.com/topic/982365" target="_blank">Android SDK 2.3与Eclipse最新版开发环境搭建（一）</a></li>
                    <li><a href="http://www.iteye.com/topic/399279" target="_blank">Android初体验</a></li>
                    <li><a href="http://www.iteye.com/topic/669008" target="_blank">没想到，MOKO!美空也出了Android App</a></li>
                    <li><a href="http://www.iteye.com/topic/1104756" target="_blank">Android SDK+Eclipse开发环境搭建</a></li>
                    <li><a href="http://www.iteye.com/topic/985508" target="_blank">用Eclipse开发和调试Android应用程序（一） </a></li>
              </ul>
  </div>
        <div>
  <h3>相关博客 </h3>
        <ul>
                    <li><a href="http://zhifeiji512.iteye.com/blog/1199176" target="_blank">免费的Android UI库及组件推荐</a></li>
                    <li><a href="http://tibaloga.iteye.com/blog/1242777" target="_blank">免费的Android UI库及组件推荐</a></li>
                    <li><a href="http://hyongx.iteye.com/blog/1300175" target="_blank">【转】免费的Android UI库及组件推荐</a></li>
                    <li><a href="http://xiaoruanjian.iteye.com/blog/1367704" target="_blank">免费的Android UI库及组件推荐</a></li>
                    <li><a href="http://maoxy.iteye.com/blog/1195606" target="_blank">免费的Android UI库及组件推荐（转载）</a></li>
              </ul>
  </div>
    

        </div>
        <div id="nav">
  <div class="wrapper">
    <ul>
            <li><a href="http://www.iteye.com/">首页</a></li>
      <li><a href="http://www.iteye.com/news" class='selected'>资讯</a></li>
      <li><a href="http://www.iteye.com/magazines">精华</a></li>
      <li><a href="http://www.iteye.com/forums">论坛</a></li>
      <li><a href="http://www.iteye.com/ask">问答</a></li>
      <li><a href="http://www.iteye.com/blogs">博客</a></li>
      <li><a href="http://www.iteye.com/blogs/subjects">专栏</a></li>
      <li><a href="http://www.iteye.com/groups">群组</a></li>
      <li><a target="_blank" href="http://job.iteye.com/iteye">招聘</a></li>
      <li class="last"><a href="http://www.iteye.com/search">搜索</a></li>
    </ul>
  </div>
</div>
      </div>
      <div id="footer">
  <div id="site_nav">
    <ul>
      <li><a href="/index/service">广告服务</a></li>
      <li><a href="http://webmaster.iteye.com">ITeye黑板报</a></li>
      <li><a href="/index/contactus">联系我们</a></li>
      <li class="last"><a href="/index/friend_links">友情链接</a></li>
    </ul>
  </div>
  <div id="copyright">
    &copy; 2003-2012 ITeye.com.    [ <a href="http://www.miibeian.gov.cn">京ICP证110151号</a>  京公网安备110105010620 ]<br/>
    百联优力(北京)投资有限公司  版权所有<br />
  </div>
</div>

    </div>
    <script type="text/javascript">
  document.write("<img src='http://stat.iteye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&user_id=' width='0' height='0' />");
</script>

    <script type="text/javascript">
      function json_digg(id) {
        call_json_digg('digg', id)
      };
      function json_bury(id) {
        call_json_digg('bury', id)
      };
      function disable_digg_link(id) {
        $$('#digg_link_' + id + ' a.push_up').each(function(link) {
            old_count = $('digg_count_' + id).textContent;
            link.replace('<span class="push_up">顶 <b id="digg_count_' + id + '">' + old_count + '</b></span>')
        });
        $$('#digg_link_' + id + ' a.trample').each(function(link) {
            old_count = $('bury_count_' + id).textContent;
            link.replace('<span class="trample">踩 <b id="bury_count_' + id + '">' + old_count + '</b></span>')
        });
      };
      function call_json_digg(type, id) {
        if (type === 'bury' || type === 'digg') {
          new Ajax.Request('/news/' + type,
                           {
                             method:'post',
                             parameters: {"id": id, "format" : 'json' },
                             onSuccess: function(transport) {
                               disable_digg_link(id);
                               var json = transport.responseText.evalJSON();
                               $(type + "_count_" + id).update(json[type + '_count']);
                             }
                           });
        }
      };
    </script>
    
  </body>
</html>

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=favicon.ico
Content-Type: image/x-icon; name=favicon.ico
Content-Location: http://www.iteye.com/images/favicon.ico
Content-Transfer-Encoding: Base64

AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAA
AAAAAAAAAAAAAAAAAAB7Th7/e04e/3tOHv97Th7/e04e/3tOHv97Th7/e04e/3tO
Hv97Th7/e04e/3tOHv97Th7/e04e/3tOHv97Th7/e04e/3tOHv97Th7/e04e/3tO
Hv+celb/xbKd/97Tx//e08f/1si5/62Qcv+DWSz/e04e/3tOHv97Th7/e04e/3tO
Hv97Th7/e04e/4NZLP/WyLn/////////////////////////////////zr2r/3tO
Hv97Th7/e04e/3tOHv97Th7/e04e/4NZLP/m3tX/////////////////////////
////////9/Tx/4xkOv97Th7/e04e/3tOHv97Th7/e04e/3tOHv/Fsp3/////////
/////////////////////////////72nj/97Th7/e04e/3tOHv97Th7/e04e/3tO
Hv+DWSz//////////////////////72nj/+DWSz/e04e/5RvSP97Th7/e04e/3tO
Hv97Th7/e04e/3tOHv97Th7/rZBy/////////////////869q/97Th7/lG9I/72n
j/+1m4D/e04e/3tOHv97Th7/e04e/3tOHv97Th7/e04e/72nj///////////////
//+celb/e04e/+/p4////////////7WbgP+Ub0j/nHpW/5x6Vv+celb/e04e/3tO
Hv+9p4//////////////////pIVk/3tOHv////////////////+9p4//5t7V////
/////////////3tOHv97Th7/pIVk/////////////////97Tx/97Th7/vaeP////
///v6eP/tZuA/////////////////97Tx/97Th7/e04e/4NZLP/39PH/////////
////////1si5/5x6Vv+Ub0j/vaeP//f08f////////////////+1m4D/e04e/3tO
Hv97Th7/vaeP////////////////////////////////////////////////////
///v6eP/g1ks/3tOHv97Th7/e04e/3tOHv/Ovav/////////////////////////
///////////////////39PH/lG9I/3tOHv97Th7/e04e/3tOHv97Th7/e04e/72n
j//39PH////////////////////////////e08f/jGQ6/3tOHv97Th7/e04e/3tO
Hv97Th7/e04e/3tOHv97Th7/g1ks/6SFZP+9p4//vaeP/7WbgP+Ub0j/e04e/3tO
Hv97Th7/e04e/3tOHv97Th7/e04e/3tOHv97Th7/e04e/3tOHv97Th7/e04e/3tO
Hv97Th7/e04e/3tOHv97Th7/e04e/3tOHv97Th7/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://www.iteye.com/images/shadow.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAAYAAAAGCAYAAADgzO9IAAAABHNCSVQICAgIfAhk
iAAAAAlwSFlzAAALEgAACxIB0t1+/AAAABZ0RVh0Q3JlYXRpb24gVGltZQAwOS8w
NC8wNu1EkNEAAAAfdEVYdFNvZnR3YXJlAE1hY3JvbWVkaWEgRmlyZXdvcmtzIDi1
aNJ4AAAAK0lEQVQImWPcsmXzfwYsgIVfQACbOAOLIC4Jfn4cEtzc3FglGP///4/V
cgBmMAfYKL1RpwAAAABJRU5ErkJggg==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/line_white.gif
Content-Transfer-Encoding: Base64

R0lGODlhAQALAIAAAP///////yH5BAAHAP8ALAAAAAABAAsAAAIDhI9QADs=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/line_gray.gif
Content-Transfer-Encoding: Base64

R0lGODlhAQALAIAAAMzMzP///yH5BAAHAP8ALAAAAAABAAsAAAIDhI9QADs=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://www.iteye.com/images/light.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAAoAAAAQCAYAAAAvf+5AAAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKTWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f
92UPVkLY8LGXbIEAIiOsCMgQWaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKg
KLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec5/zOec8PgBESJpHmomoAOVKFPDrY
H49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28AAgBw1S4kEsfh/4O6
UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0ST4F
ANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcC
gL0FAHaOWJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2X
S9IzFLiV0Bp38vDg4iHiwmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q
5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryMAgQAEE7P79pf5eXWA3DHAbB1v2upWwDa
VgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0lYqG9MOOLPv8z4W/gi372
/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHiNLFcLBWK
8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y
0nYAQH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESg
gSqwQQcMwRSswA6cwR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqg
EZrhELTBMTgN5+ASXIHrcBcGYBiewhi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJh
SDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1cQPqQ28ggMor8irxHMZSBslED
1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqOY4DRMQ5mjNlh
XIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hM
WEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+T
SCQOyZLkTgohJZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BP
kvvJw+S3FDrFiOJMCaIkUqSUEko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQ
L1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/pdLoJ3YMeRZfQl9Jr6Afp5+mD9HcM
DYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Yb1VYKvYqfBWRyhKV
OpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7OUndS
j1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L5
7Ex2Bfsbdi97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqt
Zq1+rTfaetq+2mLtcu0W7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02Pr
eekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGo
EctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxrPGFiaTLbpMSkxeS+Kc2U
a5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW2pZ8ywWW
TZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p
0in1U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTD
qcSpw+lXZxtnoXOd8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt
2W3U3cw9xX2r+00umxvJXcM970H08PdY4nHM452nm6fC85DnL152Xlle+70eT7Oc
Jp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+Hvqa+It89viN+1n6Zfgf8nvs7
+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsGLww+FUIMCQ1Z
H3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjg
R2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xq
bFJsY+ybuIC4qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXc
orkX5unOy553PFk1WZB8OIWYEpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGx
t7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1IreZEZkrkj801WRNberM/ZcdktOZSc
lJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/PbFWyFTNGjtFKuUA4W
TC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYji1MX
dy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRa
uWMVYZVkVe9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk
626s91m/r0q9akHV0IbwDa0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvy
oTaj9nqdf13LVv2tq7e+2Sba1r/dd3vzDoMdFTve75TsvLUreFdrvUV99W7S7oLd
jxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+yCW1SNo0eSDpw5ZuAb9qb
7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawto22gPaG9
7+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8
mWtdUV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv
62X3y+1XPK509E3rO9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0X
dwruTNxdeo94r/y+2v3qB/oP6n+0/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJH
zEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv9563Or59/94vtLz1j82PAL+YvP
v655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+UPPR+mPHp9BP
9z7nfP78L/eE8/sl0p8zAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAA
ADqYAAAXb5JfxUYAAAGgSURBVHjaZJExa9twEMV/lkSNiw3CmyB4NMkW0Fgwdb9A
p0wl0M0lH0Gda/wBMpSIQKGUQhVDPkFcGzx0MNUQUWhUY+xBYBMJQzLor4rrILe1
8YM33L3H8e6u9OsLf/ECeA2cbuqPwAfgBqD08zMA78plnHodqtXC9fAAcQxpShd4
q2UZJ7qhOwdHLarH12AL2EL1+JqDoxa6oTtZxgn+JcNkZImkU9lDOpVkZIl/yVBT
ipZpHYLk7EFyTOsQpWhpqQLKDZidQnL135RcFb1yg1SBplJGy+gRNA0WZzApFVyc
gaaxjB5RKSNDKc7D799a9ZdvMJ7OQUXFxCcWv/UG4c17lOLcyDK8+2jRnd7+cJrP
Xu1EnI4/cR8tuoBH3wHJJvQdBsu7C5FsIpJNZHl3IX2HwUZDy3PAMMlzhqtZAIYJ
hslqFpDnDDcaJREBwPO858Cg2Wwyn88Zj8cA7V6v97U4lcg/uq4rcRyL7/viuq5s
a8Z2+NVqRRAERFFEGIY7i2nbxXq9plKpUKvV9p60MzFJknan0xkA2Lbd3tb+DAAp
LORg8LVviQAAAABJRU5ErkJggg==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://www.iteye.com/images/bg_box_title.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAAIAAAAZCAYAAAAbp/98AAAABHNCSVQICAgIfAhk
iAAAAAlwSFlzAAALEgAACxIB0t1+/AAAABZ0RVh0Q3JlYXRpb24gVGltZQAwNC8y
NC8wN4FUkucAAAAfdEVYdFNvZnR3YXJlAE1hY3JvbWVkaWEgRmlyZXdvcmtzIDi1
aNJ4AAAAUElEQVQImW2O0Q2AQAxCabHdfxA3cBF3MbF+HNbkvL8XChTbj7MAYCMJ
AQZkKyFI6MSUEvQp1T1fPFt5Pc7JHL/vixkCu+4qALCqAa5dC3gAhPUMNkZm2zUA
AAAASUVORK5CYII=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/jpeg
Content-Location: http://www.iteye.com/images/digged.jpg
Content-Transfer-Encoding: Base64

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

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/icon_digg.gif
Content-Transfer-Encoding: Base64

R0lGODlhDQAIAMQAABIN2Jub6Xp67ktL/srK+IyK6DU12Luw52Zm/3t79+nq/ygk
3KOj/5KQ67G3/nBV/n2D/4aE5ZeV/szM/0tP/qGg7b6+/4SH/zg10o6O7Xt+/6un
/////wAAAAAAAAAAACH5BAEHABwALAAAAAANAAgAAAU7ICeKFVaNqHgIihCkYvNM
0hRlaRRtUO/oo0KGgSgWGZkCp5C4DCjQ6CVRAHAsk6x2YuEACAuDeDxeEEIAOw==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/icon_bury.gif
Content-Transfer-Encoding: Base64

R0lGODlhDQAIAMQAANRADeaki/+CXP/Iu/9mQuKfhOewm89gNf6un/fVyP+VdP/s
5uyWedi8sdlXJeumjv6Xfv+7rP/Uyv92TP6qjeatlOu0n//XyNViNf9oROeegvGa
e/+zn////wAAAAAAACH5BAEHAB0ALAAAAAANAAgAAAU7YOJgZFk6CdANUutKQwcE
G0RkeA5tQRc8HIFQyHn0Oh2NBqFoRpTI6GNyoVwKj6i2wVgwDNqw5WAJhwAAOw==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/digged_bottom.gif
Content-Transfer-Encoding: Base64

R0lGODlhSAA7ANUAAPd7StDR1fiVWf6RW/j9+szMzPeKVPf39/+ZZvV+UOvq6/yL
U/aHUf+pcf+ZZvetcv2CUv+jZvaDS/////+sdPmiaP/09/+ta/mOWvmtiNHU0/2a
Xv+PWdTQz/+ESv+uefiGWf/77/f3//+ma/97Sv+ZZtbT1PDv8P+nff34/NPR1P39
+NbTz////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAEHAC0ALAAAAABIADsAAAb/wJZwSCwaj8ikcpn8OB+P
hnRKrVqv1JF2y+2ONuBwWEA2Pj6piXrNZq/e77Z8vobb73g7g0F0hhoXWIINXoWG
WxURihsYC46PkI8rBhlDFCkNKFqDV4eeW4qLGwakkaaOKXxCDRMXrhcUWJ+zWqG2
AwMGe7u8vbsTBkMPE4CuH7SftsrKYAu+DKeRwMLEUxfItMu2oxIS0NHgKwtDrFPY
2dobHM694NET46vVVue12qGMGHuPu+6n8OTm1bN3D5+AZ7z8mQIob+CIgspw6ULY
TyEkhi1Y1SsohtHEb5B8WbwYr8WICdgginFEEeHIRxhHrEDHMZ++iqaevXQUc+as
/3thMGAgRZQozkhHLWLUWAhiBDAcOOwBQBVCy6svY6Jsmm6DxG4SqFa9ilVpyZOJ
nIIRSiqB27dvGRSdS7cuKZcwz06I8HBZmAEs4Qp2u8eu4boKtd6TaCCsWACD41Is
usswWYwVJlTY/Lfx48+PIcBtSZnXYcPihmQOaiAB6NewW+5UmFrIBgsGYH+GKzYy
O5EvIQgfTpzUpCEQJuh+zPs1XLs7iRcnelxIAuXLqTaH7LY3YZ3BpQsvWr0FgBXZ
tb9l7nu2KfHjqQcTcj499+7eB7t/D5/8fPPYZbfdfYKRldAp8EHg3xAABKibYOwN
hlBkCUST4IL0obfcYBFS6P8hXPstUN55rsEWWYcffhjiiMqt92CKMEa2z0jCMTAB
BAxqmB+Ezr1FHIUtiefhLzhat8KAu8Wo5GjgndINBCmAMEQCISQg2pJY+thfXRQp
aMAKUgqhgRoHHDDBAXmkqeaabLb5RggTsDCEBnjQYeedeOYpxx0dzLmCCHmmIOig
KZRp6KGIJqqonmqkoUafQgRwB6MTEKDopZgayugdKgyhQqUEhEroqKQWmumpiJaq
6qATaDCECY2uuiqqtJY5gaxshEpAq6+CKquqtdL6a6m8CvGprsgmq2yowZ667LPI
FtvCp2VCq2yz2Cr6rLSwZuvtt5dyeya45IIrLbXlpot9LbeWqusurdJ2MG6tJ9Rb
77vYEgBpC/Jmay++2LoqRL/Y/gtwrRMUMES/9jbs8MMQRyzxxBQfQIDALRRwJsUc
d+wxx7bu24GpB3xs8skgl7lvCh3sSunLMFNagAJDPFrAzTjnrPPOPPfs888+K3AC
E0QXbfTRSCet9NJCBAEAOw==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/icon_comment.gif
Content-Transfer-Encoding: Base64

R0lGODlhEQARALMAAH6r1/L2+7PO577V69nm84my2v///5y/4OHr9vT4/JO53urx
+P///wAAAAAAAAAAACH5BAEHAAwALAAAAAARABEAAARUkMlJ6wxDgc23GsE0DIth
nuYyTkqJvosyAaZg37YJzG9v7BKaAScYFn88HwrIaBmJxRjLpZRKRtRXYiXBaDjF
hKAAslAOCMHAbDmo2e01vEKY2ykRADs=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline
Content-Type: image/gif
Content-Location: http://www.iteye.com/images/icon_arrow.gif
Content-Transfer-Encoding: Base64

R0lGODlhEQASAMQAAJ3EgrzWq93q1a/Ol8TbtMnmpe/w5NbyqbrimdHlwtb3rbnU
puXv3vX58qPIirHPnNnnzu706v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAEHABIALAAAAAARABIAAAVeoCSOZGmWQHSuAMCsJoC4
MEM87TG/ZRQ8hYNQuCMxFsGhcmYQRZDKqA4gIiSlRJpkgB0WRQ5hoUWe8kSAQ8EB
UUlk2lE6/k7FDlSS3bRQn2ESAglqgCQNEAINhYslIQA7

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=news.css
Content-Type: text/css; name=news.css
Content-Location: http://www.iteye.com/stylesheets/news.css?1359603811
Content-Transfer-Encoding: 8bit


.stretch,
.clear {
    clear:both; 
    height:1px; 
    margin:0; 
    padding:0; 
    font-size: 15px;
    line-height: 1px;
}
.clearfix:after {
    content: "."; 
    display: block; 
    height: 0; 
    clear: both; 
    visibility: hidden;
}
.clearfix {display: inline-table;}
* html .clearfix {
    height:1%;
}
*+html .clearfix {
    height:1%;
}
.clearfix {
    display:block;
}


.replace {
    display:block;
    
    background-repeat: no-repeat;
    background-position: left top;
    background-color:transparent;
}
.replace * {
    text-indent: -10000px;
    display:block;
    
    background-repeat: no-repeat;
    background-position: left top;
    background-color:transparent;
}
.replace a {
    text-indent:0;
}
.replace a span {
    text-indent:-10000px;
}


span.accesskey {
    text-decoration:none;
}
.accessibility {
    position: absolute;
    top: -999em;
    left: -999em;
}

body {
  text-align: left;
  font-family: Helvetica, Tahoma, Arial, sans-serif;
  font-size: 12px;
  line-height: 1.5;
  color: black;
}

img {
  border: 0;
}

h1 {
  font-size: 2em;
  line-height: 1.5em;
  margin: 0 0 0.5em 0;
  padding: 0;
  color: black;
}
h2 {
  font-size: 1.5em;
  line-height: 1.5em;
  margin: 0 0 0.5em 0;
  padding: 0;
  color: black;
}
h3 {
  font-size: 1.2em;
  line-height: 1.5em;
  margin: 0 0 0.5em 0;
  padding:0;
  color: black;
}
h4 {
  font-size: 1.15em;
  line-height: 1.3em;
  margin: 0 0 0.25em 0;
  padding: 0;
  color: black;
}
h5 {
  font-size: 1.1em;
  line-height: 1.3em;
  margin: 0 0 0.25em 0;
  padding: 0;
  color: black;
}
h6 {
  font-size: 1em;
  line-height: 1.3em;
  margin: 0 0 0.25em 0;
  padding: 0;
  color: black;
}

p {
  margin: 0;
  padding: 0;
}
blockquote {
  border-left:10px solid #ddd;
  margin-left:10px;
}
pre {
  font-family: monospace;
  font-size: 1.0em;
}
strong, b {
  font-weight: bold;
}
em, i {
  font-style:italic;
}
code {
  font-family: "Courier New", Courier, monospace;
  font-size: 1em;
  white-space: pre;
}

ul {
  margin: 0 0 1.5em 0;
  padding: 0;
}
ul li {
  margin: 0 0 0.25em 30px;
  padding: 0;
}
ol {
  font-size: 1.0em;
  line-height: 1.4em;
  margin: 0 0 1.5em 0;
  padding: 0;
}
ol li {
  font-size: 1.0em;
  margin: 0 0 0.25em 30px;
  padding: 0;
}
dl {
  margin: 0 0 1.5em 0;
  padding: 0;
  line-height: 1.4em;
}
dl dt {
  margin: 0.25em 0 0.25em 0;
  padding: 0;
}
dl dd {
  margin: 0 0 0 30px;
  padding: 0;
}


th {
  font-weight: bold;
  text-align: left;
}
td {
  font-size: 1em;
}
/* END TABLE */	

hr {
  height: 1px;
  margin: 1.5em 10px;
  border-bottom: black thin;
}


div.topic_page {
  color: #069;
}

form {
  margin:0;
  padding:0;
  clear: both;
}
form div,
form p {
  font-size: 1em;
  margin: 0 0 1em 0;
  padding: 0;
}
label {
  font-weight: bold;
  float: left;
  width: 25%;  
}
fieldset {
  border: 1px solid #eee;
  padding: 5px 10px;
  margin: 0;
}
fieldset legend {
  color: #666;
  font-size: 1.1em;
  font-weight: bold;
  margin: 0 0 0 0px;
  padding: 0;
}
* html fieldset legend {
  margin: 0 0 10px -10px;
}
fieldset ul {
  list-style: none;
  margin: 0 0 1.5em 0;
  padding: 0;
}
fieldset ul li {
  list-style: none;
  margin: 0 0 0.5em 0;
  padding: 0;
}
input.text, select, textarea {
  margin: 0;
  border: 1px solid #069;
  padding: 1px 3px;
  vertical-align: middle;
}

input.text {
  height: 18px;
  font-family: Arial, sans-serif, Verdana, Tahoma, Helvetica;
}

input.check {
  border: none;
  width: auto;
  height: auto;
  margin: 0;
}
input.radio {
  border: none;
  width: auto;
  height: auto;
  margin: 0;
}
input.file {
  height: auto;
  width: 250px;
}
input.readonly {
  background-color: transparent;
  border: none;
}
input.button, input.submit {
  background: #006699;
  color: white;
  cursor:pointer;
  font-size: 1em;
  height:23px;
  padding:2px 5px;  
  border:1px solid #d2f3fd;
  vertical-align: middle;
}
input.image {
  border: none;
  width: auto;
  height: auto; 
}
textarea {
  font-size: 1em;
}
form div.submit {
  margin: 1em 0;
}
form div.submit input {
  height: 2em;
  width: 15em;
}


div#nav div.wrapper {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  font-size: 13px;
  padding-bottom: 6px;
  background: #6293bb url(/images/shadow.png) repeat-x bottom left;
}
div#nav ul {
  width: 100%;
  
  margin: 0;
  padding: 0;
}
div#nav li {
  float: left;
  display: inline;
  
  list-style: none;
  
  margin: 0;
  padding: 0 10px;
  
  line-height: 1em;
  background-image: url(/images/line_white.gif);
  background-position: right center;
  background-repeat: no-repeat;
}
div#nav li.last {
  background: none;
}
div#nav a,
div#nav a:link,
div#nav a:active,
div#nav a:visited {
  display: inline-block;
  /* hide from ie/mac \*/
  display: block;
  /* end hide */
  font-weight: bold;
  text-decoration: none;
  
  margin: 0;
  padding: 7px 13px;
  
  color: white;
}
div#nav .subnav a,
div#nav .subnav a:link,
div#nav .subnav a:active,
div#nav .subnav a:visited {
  display: inline-block;
  padding: 7px 6px;
}
div#nav a:hover, div#nav a.selected {
  background-color: #3671a5;
}

div#content {
  position: relative;
  z-index: 0;
  
  margin: 0 auto 20px auto;
  padding: 0;
  
  text-align: left;
}

div#main {
  float: left;
  width: 746px;
  display: inline;
  margin-top: 5px;
  overflow: hidden;
}
div#local {
  float: right;
  width: 188px;
  display: inline;
  margin-top: 5px;
}
div#sub {
  display: none;
}
div#nav {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  text-align: left;
}

body {
  margin: 0;
  padding: 0;
  
  background: white;
  
  text-align: center;
}
div#page {
  width: 950px;
  
  margin:  0 auto;
  padding: 0;
  
  background: white;
  text-align: center;
}

div#header {
  padding: 0;
  margin: 0;
  color: white;
  background-color: white;
}
div#branding {
  float: left;
  width: 200px;
  margin: 1px 0;
  text-align: left;
}
div#search {
  float: right;
  width: 49%;
  
  margin: 0;
  padding: 16px 20px 0 0;
  
  text-align: right;
}

div#content {
  width: 100%;
  margin-top: 35px;
}

div#footer {
  color: black;
  background-color: white;  
}
div#footer p {
  font-size: 0.8em;
  
  margin: 0;
  padding: 15px;
}




ul.subnav {
  margin: 0;
  padding: 0;
  
  font-size: 0.8em;
  list-style: none;
}
ul.subnav li {
  margin: 0 0 1em 0;
  padding: 0;
  list-style: none;
}
ul.subnav li a,
ul.subnav li a:link,
ul.subnav li a:visited,
ul.subnav li a:active {
  text-decoration: none;
  font-weight: bold;
  color: black;
}
ul.subnav li a:hover {
  text-decoration: underline;
}
ul.subnav li strong {
  padding: 0 0 0 12px;
  background: url("../i/subnav-highlight.gif") left top no-repeat transparent;
}
ul.subnav li strong a,
ul.subnav li strong a:link,
ul.subnav li strong a:visited,
ul.subnav li strong a:active {
  color: white;
  background-color: black;
}


.nav_side{margin:0 0 10px 0; border:solid 1px #caccc9; background:#f4f6f3;}
.nav_side ul{margin:0;}
.nav_side li{height:37px; overflow:hidden; margin:0 5px; padding:0; border-bottom:solid 1px #e3eaf0; color:#069; font-size:14px; line-height:37px; text-indent:38px;}
.nav_side li a{display:block; height:37px; color:#069; text-decoration:none;}
.nav_side li a:hover{color:#ff580a;  text-decoration:none;}
.nav_side li.last{height: 38px; border-bottom:none;}
.nav_side li.select{height:38px; margin:0; border-bottom:none; background:url(/images/sidenav_select_bg.gif) no-repeat 0 0;}
.nav_side li.select a{height:38px; color:#fff; font-weight:bold;}

.nav_side #mobile{background:url(/images/icon_sidenav.png) no-repeat 5px 3px; _background:url(/images/icon_sidenav.gif) no-repeat 5px 3px;}
.nav_side #web{background:url(/images/icon_sidenav.png) no-repeat 5px -49px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -49px;}
.nav_side #architecture{background:url(/images/icon_sidenav.png) no-repeat 5px -102px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -102px;}
.nav_side #language{background:url(/images/icon_sidenav.png) no-repeat 5px -155px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -155px;}
.nav_side #internet{background:url(/images/icon_sidenav.png) no-repeat 5px -206px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -206px;}
.nav_side #opensource{background:url(/images/icon_sidenav.png) no-repeat 5px -260px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -260px;}
.nav_side #os{background:url(/images/icon_sidenav.png) no-repeat 5px -310px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -310px;}
.nav_side #database{background:url(/images/icon_sidenav.png) no-repeat 5px -361px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -361px;}
.nav_side #develop{background:url(/images/icon_sidenav.png) no-repeat 5px -412px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -412px;}
.nav_side #industry{background:url(/images/icon_sidenav.png) no-repeat 5px -466px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -466px;}
.nav_side #other{background:url(/images/icon_sidenav.png) no-repeat 5px -568px; _background:url(/images/icon_sidenav.gif) no-repeat 5px -568px;}
.nav_side #all{background:url(/images/elite_sidenav.png) no-repeat 5px -260px; _background:url(/images/elite_sidenav.gif) no-repeat 5px -260px;}

.nav_side li.select #mobile{background:url(/images/icon_sidenav.png) no-repeat 10px 3px; _background:url(/images/icon_sidenav.gif) no-repeat 10px 3px;}
.nav_side li.select #web{background:url(/images/icon_sidenav.png) no-repeat 10px -49px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -49px;}
.nav_side li.select #architecture{background:url(/images/icon_sidenav.png) no-repeat 10px -102px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -102px;}
.nav_side li.select #language{background:url(/images/icon_sidenav.png) no-repeat 10px -155px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -155px;}
.nav_side li.select #internet{background:url(/images/icon_sidenav.png) no-repeat 10px -206px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -206px;}
.nav_side li.select #opensource{background:url(/images/icon_sidenav.png) no-repeat 10px -260px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -260px;}
.nav_side li.select #os{background:url(/images/icon_sidenav.png) no-repeat 10px -310px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -310px;}
.nav_side li.select #database{background:url(/images/icon_sidenav.png) no-repeat 10px -361px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -361px;}
.nav_side li.select #develop{background:url(/images/icon_sidenav.png) no-repeat 10px -412px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -412px;}
.nav_side li.select #industry{background:url(/images/icon_sidenav.png) no-repeat 10px -466px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -466px;}
.nav_side li.select #other{background:url(/images/icon_sidenav.png) no-repeat 10px -568px; _background:url(/images/icon_sidenav.gif) no-repeat 10px -568px;}
.nav_side li.select #all{background:url(/images/elite_sidenav.png) no-repeat 10px -259px; _background:url(/images/elite_sidenav.gif) no-repeat 10px -259px;}
a {
    color: #006699;
    text-decoration: none;
}

a:hover, a:active {
    color: #BC2A4D;
    text-decoration: underline;
}

blockquote {
    border: 1px solid #cccccc;
    background-color: #fafafa;
}

cite {
    font-weight: bold;
    margin-left: 3px;
}

div#user_nav {
    margin: 3px 0 0 0;
    padding: 2px;
    text-align: right;
    float: right;
}

div#user_nav a.nobg {
    background: none;
}

div#user_nav a.welcome {
    color: #E28822;
    font-weight: bold;
    padding-right: 10px;
}

div#user_nav a:hover.welcome {
    text-decoration: none;
    color: #E28822;
    background-color: transparent;
}

div#user_nav a.new_reply {
    color: red;
    padding-left: 0;
}

div#user_nav a:hover.new_reply {
    text-decoration: none;
    color: red;
    background-color: transparent;
}

div#user_nav a {
    text-decoration: none;
    padding:2px 6px 1px 6px;
    color: gray;
    line-height: 1em;
    background-image: url(/images/line_gray.gif);
    background-position: right center;
    background-repeat: no-repeat;
}

div#user_nav a:hover {
    text-decoration: underline;
    color: white;
    background-color: gray;
}

div.quick_menu {
    background-color:white;
    border:1px solid #DDDDDD;
    text-align:left;
    top: 30px;
    position: absolute;
    width:70px;
    z-index: 9999;
}

div.quick_menu a {
    background-image: none !important;
    display: block !important;
    padding: 3px 6px 3px 10px !important;
    text-decoration: none !important;
    line-height: 20px !important;
}

div#location_ad {
    float:left;
    background-image:url(/images/yellow_east_arrow.gif);
    background-repeat: no-repeat;
    background-position:left center;
    margin-top: 5px;
    padding-left: 12px;
}

div#site_nav ul {
    width: auto;
    width: 100%;

    margin: 0;
    padding: 0;

    line-height: 1em;
    list-style: none;
}

div#site_nav li {
    display: inline;
    list-style: none;
    margin: 0;
    padding: 3px 10px 3px 10px;
    line-height: 1em;
    border-right: 1px solid #aaa;
}

div#site_nav li.last {
    border-right: none;
}

div#channel_nav {
    position:absolute;
    left: 0;
    top: 0px;
}

div#channel_nav ul {
    width: auto;
    width: 100%;

    margin: 0;
    padding: 0;

    line-height: 1em;
    list-style: none;
}

div#channel_nav li {
    display: inline;
    float: left;
    list-style: none;
    margin: 0;
    line-height: 1em;
    border: 1px solid #feddca;
    border-right: 0px;
}

div#channel_nav li.last {
    border-right: 1px solid #feddca;
}

div#channel_nav a {
    display: inline-block;
    /* hide from ie/mac \*/
    display: block;
    /* end hide */
    text-decoration: none;

    margin: 0;
    padding: 4px 25px;

    color: green;
}

div#channel_nav a:hover, div#channel_nav a.selected {
    background-color: #feddca;
}

div#gg {
    float: right;
    margin: 2px 0;
    width: 728px;
}

div#copyright {
    padding: 10px;
}

.pagination {
    padding: 5px;
    float: right;
}

.pagination a, .pagination a:link, .pagination a:visited {
    padding: 2px 5px 2px 5px;
    margin: 2px;
    border: 1px solid #aaaadd;
    text-decoration: none;
    color: #006699;
}

.pagination a:hover, .pagination a:active {
    border: 1px solid #006699;
    color: #000;
    text-decoration: none;
}

.pagination span.current {
    padding: 2px 5px 2px 5px;
    margin: 2px;
    border: 1px solid #006699;
    font-weight: bold;
    background-color: #006699;
    color: #FFF;
}

.pagination span.disabled {
    padding: 2px 5px 2px 5px;
    margin: 2px;
    border: 1px solid #eee;
    color: #ddd;
}

a.underline, .underline a { text-decoration: underline; }

.hilite1 { background-color: #ff0; }
.hilite2 { background-color: #5f5; }
.hilite3 { background-color: #afa; }
.hilite4 { background-color: #0ff; }


span.arrow {
    font-weight:normal;
    font-size:0.9em;
    color:#999;
}

.validation-advice {
    margin: 0;
    padding: 0 0 0 3px;
    color : #FF3300;
    font-weight: bold;
}

.odd {
    background-color: #EFFAFF;
}

.highlight,
.highlight a,
.highlight a:link,
.highlight a:active,
.highlight a:visited {
    font-weight: bold;
    text-decoration: none;
    color: #e28822;
}

.highlight a:hover {
    text-decoration: none;
    color: #ffffff;
    background-color: #e28822;
}

.rss {
    background-image: url(/images/rss.png);
    background-position: right center;
    background-repeat: no-repeat;
    margin-right: 5px;
    padding-right: 50px;
}

.row1 {
    width: 155px;
    font-weight: bold;
    background-color: #efefef;
}

.row2 {
    background-color: #dee3e7;
}

.row3 {
    background-color: #eee;
}

.crumbs a {
    text-decoration: underline;
}

.flash_error, .flash_notice {
    font-weight: bold;
    background-repeat: no-repeat;
    padding: 10px 40px;
    margin: 0 10px;
}

.flash_error {
    color: #f30;
    background-image: url(/images/icon_error_lrg.gif);
}

.flash_notice {
    background-image: url(/images/icon_success_lrg.gif);
}

select.validation-failed, input.validation-failed, textarea.validation-failed {
    border: 3px solid #FF0000;
}

* html select.validation-failed {
    background-color: #FF0000;
}

span.field_error {
    display: none;
}

div.quote_title {
    font-weight: bold;
    padding: 5px;
    margin: 5px 0 0 15px;
}

div.quote_div {
    border: 1px solid #ccc;
    margin: 0 5px 5px 15px;
    padding: 3px;
    background: #fafafa;
}

div.attachments {
    border-top: 1px solid #999999;
    margin-top: 10px;
}

div.attachments ul, div.postauthor ul {
    list-style: none;
}

div.attachments ul {
    margin: 5px;
    padding: 5px;
    border: 1px solid #cccccc;
}

img.magplus {
    cursor: url(/images/magplus.gif), pointer;
}

div.logo {
    float: left;
    padding: 2px 6px 6px 2px;
    background-image: url(/images/logo_bg.gif);
    background-repeat: no-repeat;
}

span.thumb_box {
    display: table-cell;
    vertical-align:middle;
    height: 95px;
    width: 130px;
    text-align:center;
    /* hack for ie */
    *display: block;
    *font-size: 90px;
    /* end */
    border: 1px solid #ccc;
}

span.thumb_box img {
    vertical-align:middle;
}

.right {
    float: right;
}

.left {
    float: left;
}

table.bbcode {
    border: 1px solid #ccc;
}

table.bbcode td {
    border: 1px solid #ccc;
    padding: 3px;
}

div#search_engine_box {
    text-align: left;
    position: fixed;
    bottom: 0px;
    right: 0px;
    width: 240px;
    border: 1px solid #ccc;
    background-color: white;
}

#search_engine_box h2 {
    padding: 5px;
    background-color: #526EA6;
    color: white;
    font-size: 12px;
    font-weight: normal;
}

#search_engine_box h2 span {
    color: black;
}

#search_engine_box h2 a {
    color: white;
    position: absolute;
    right: 5px;
}

#search_engine_box div {
    padding: 0 5px;
}

#search_engine_box li {
    margin-left: 15px;
    list-style: square;
}

* html div#search_engine_box {
    position: absolute;
    right: auto; bottom: auto;
    left: expression( ( 0 - search_engine_box.offsetWidth + ( document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth ) + ( ignoreMe2 = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft ) ) + 'px' );
    top: expression( ( 0 - search_engine_box.offsetHeight + ( document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight ) + ( ignoreMe = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ) ) + 'px' );
}

div#chat_button {
    text-align: right;
    position: fixed;
    bottom: 0px;
    right: 10px;
    width: 80px;
    border: 1px solid #ccc;
    padding: 2px;
    vertical-align: middle;
    background-color: #eee;
}

div#chat_input {
    position: fixed;
    bottom: 25px;
    right: 10px;
    text-align: left;
}

#chat_iframe {
    width: 360px;
    background-color: transparent;
}

div#chat_button img {
    vertical-align: middle;
}

* html div#chat_button {
    position: absolute;
    right: auto; bottom: auto;
    left: expression( ( 0 - chat_button.offsetWidth + ( document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth ) + ( ignoreMe2 = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft ) ) + 'px' );
    top: expression( ( 0 - chat_button.offsetHeight + ( document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight ) + ( ignoreMe = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ) ) + 'px' );
}

* html div#chat_input {
    position: absolute;
    right: auto; bottom: auto;
    left: expression( ( 0 - chat_input.offsetWidth + ( document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth ) + ( ignoreMe2 = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft ) ) + 'px' );
    top: expression( ( -25 - chat_input.offsetHeight + ( document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight ) + ( ignoreMe = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ) ) + 'px' );
}

.tooltip {
    position: absolute!important;
    overflow:hidden;
    font-size: 12px;
    z-index: 10000!important;

}
.tooltip .xtop, .tooltip .xbottom { display: block; background: transparent; font-size: 1px; }
.tooltip .xb1, .tooltip .xb2, .tooltip .xb3, .tooltip .xb4 { display: block; overflow: hidden; }
.tooltip .xb1, .tooltip .xb2, .tooltip .xb3 { height: 1px; }
.tooltip .xb2, .tooltip .xb3, .tooltip .xb4 { background: #666; border-left: 1px solid #333; border-right: 1px solid #333; }
.tooltip .xbottom .xb2, .tooltip .xbottom .xb3, .tooltip .xbottom .xb4 { background: #666; }
.tooltip .xb1 { margin: 0 5px; background: #333; }
.tooltip .xb2 { margin: 0 3px; border-width: 0 2px; }
.tooltip .xb3 { margin: 0 2px; }
.tooltip .xb4 { height: 2px; margin: 0 1px; }

.tooltip .xboxcontent {
    padding: 0 .5em;
    margin: 0;
    color: #000;
    text-shadow: 2px 2px 0px #CCC;
    word-wrap:break-word;
    border: 1px solid #333;
    border-width: 0px 1px 0 1px;
    background-color: #666;
    padding: 0 20px;
    font-size: 125%;
    text-align: center;
}

div#site_nav, div#channel_nav {
    z-index: 1;
}

div#header {
    z-index: 2;
    position: relative;
}
.logo a:hover {
    background-color: inherit;
}



input#login_button {
    width: 147px;
    height: 34px;
    background: url(/images/login_button.jpg) no-repeat;
    cursor: pointer;
    border: 0 none;
    font-size:0;
    color: #0056ad;
}
#favorite_form_container {
  width: 580px;
  height:250px;
  padding: 10px;
  text-align: left;
  position: absolute;
  z-index: 777;
  background: url(/images/app/bg_new.png) no-repeat;
  font-size:12px;

}
*html  #favorite_form_container{background:none; filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='/images/app/bg_new.png' ,sizingMethod='crop');}
#favorite_form_container .cont{width:580px; height:250px; background:#fff; }
#favorite_form_wrapper {
  position: relative;
  padding-left:15px;
}
#close_list{overflow:hidden; text-align:right; border-bottom:1px dashed #ccc; background:#eeeeee; padding:5px 10px; margin-bottom:20px; width:560px;}
#favorite_form_close{cursor:pointer;}
#favorite_form_success{text-align:center;font-size:18px;margin-top:70px;}
#favorite_form_success img{vertical-align: bottom;margin-right:10px;}

#current_tags_panel {margin: 10px 0 0;}
#current_tags_panel span {display: inline-block; margin: 0 5px 5px 0; padding: 0px 10px; background-color: #5d7a9b; color: #FFF; -webkit-border-radius: 30px; -moz-border-radius: 30px; -o-border-radius: 30px; border-radius: 30px;}
#suggested_tags_panel {margin: 10px 0 0 0;}
#suggested_tags_panel a {display: inline-block; margin: 0 5px 5px 0; padding: 0px 10px; background-color: #aab5c3; -webkit-border-radius: 30px; -moz-border-radius: 30px; -o-border-radius: 30px; border-radius: 30px;}
#suggested_tags_panel a {color: #fff; text-decoration: none;}
#suggested_tags_panel a:hover, #suggested_tags_panel a.added {background-color: #f87b00;}
.news_tag{clear:both; display:block; *display:inline-block; margin:10px 0 5px 0; line-height:20px;}
.news_tag:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
.news_tag a {display: inline-block; margin: 0 5px 5px 0; padding: 0px 10px; background-color: #aab5c3; -webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: 10px; border-radius: 10px;color: #fff; text-decoration: none;}
.news_tag a:hover, #suggested_tags_panel a.added {background-color: #f87b00;}
.news_tag span.hilite1 {background-color: transparent;}
.news_tag span.view_all{float:right;}
.news_tag span.view_all a{padding:0 6px; background:none; color:#069; text-decoration:underline;}

.title .news_tag{text-align:center;}

.category_tags { margin-top: 10px; padding: 5px 0 5px; }
.category_tags a{display:inline-block; height:20px; margin:0 6px 0 0; padding:0 0 0 12px; color:#fff; background:url(/images/tag_bg.gif) no-repeat left top; line-height:20px; text-decoration:none;}
.category_tags a span{display:inline-block; height:20px; padding:0 12px 0 0; background:url(/images/tag_bg.gif) no-repeat right top; }
.category_tags a:hover, .category_tags a.pick_on {background:url(/images/tag_bg_3.gif) no-repeat left top;}
.category_tags a:hover span, .category_tags a.pick_on span{background:url(/images/tag_bg_3.gif) no-repeat right top;}


#user_nav #notifications_count {margin:0 0 0 -5px;/* background:url(/images/sms_bg.gif) no-repeat center center; color:#fff;*/ border:solid 1px #ccc; border-radius:3px; -webkit-border-radius:3px; -moz-border-radius:3px; -khtml-border-radius:3px; background:#fff; font-weight: bold; text-decoration: none; line-height: 24px;}
#user_nav a:hover#notifications_count{border:solid 1px transparent; border-radius:3px; -webkit-border-radius:3px; -moz-border-radius:3px; -khtml-border-radius:3px; background:#006eb5; /*background:url(/images/sms_havebg.gif) no-repeat center center;*/ color:#fff;}
#user_nav #notifications_count.new_notice{border:solid 1px transparent; border-radius:3px; -webkit-border-radius:3px; -moz-border-radius:3px; -khtml-border-radius:3px; background:#006eb5; /*background:url(/images/sms_havebg.gif) no-repeat center center;*/ color:#fff;}
#user_nav .clicked{background:url(/images/sms_click_bg.gif) no-repeat center top !important; color:#fff;}
#notifications_menu {position: absolute; top: 26px; *top:25px; _top:23px; right: 10px; color: black; width: 380px; text-align: left; border:solid 1px #ddd; background-color: white; -moz-box-shadow: 0 1px 5px #888; -webkit-box-shadow: 0 1px 5px #888; box-shadow: 0 1px 5px #888; overflow: hidden; z-index: 999;}
#notifications_loading { padding: 0 5px; background-color: yellow; width: 60px; position: absolute; left: 150px; }
#notifications_menu .menu_title {height:36px; overflow:hidden; padding:0 10px; border-bottom:solid 1px #ddd; /*background:url(/images/news_dropmenu.png) repeat-x top;*/ line-height:34px;}
#notifications_menu .menu_title a{color:#333; text-decoration:underline;}
#notifications_menu .menu_title a:hover{background:none;}
#notifications_menu .menu_title .title{float:left;}
#notifications_menu .menu_title .all{float:right;}
#notifications_menu .notification_summary { border-bottom: 1px solid #ddd; padding: 10px; cursor: pointer; background-color: #f6fafc; color:#333; overflow: hidden;}
#notifications_menu .notification_summary .time{color:#999;}
#notifications_menu .notification_summary.unread {background-color: #FFF; font-weight:bold;}
#notifications_menu .notification_summary.unread .time{color:#333; font-weight:normal;}
#notifications_menu .notification_summary.current,
#notifications_menu .notification_summary:hover {background-color: #dbebf4;}
#notifications_menu .show_all,
#notifications_menu .return { cursor: pointer;}
#notifications_menu .notification_detail {}
#notifications_menu .notification_detail_title{position:relative;/*height:56px;*/ margin:0 0 5px 0; padding:4px 10px; overflow: hidden; border-bottom:solid 1px #eee; background:#fafafa; /*background:url(/images/detail_title_bg.png) repeat-x bottom;*/ line-height:26px;}
#notifications_menu .notification_detail_title .subject_link{display:block;}
#notifications_menu .notification_detail_title .time{ position:absolute; top:4px; right:10px;}
#notifications_menu .notification_detail_notice {margin:5px 0 0 0; padding:5px 10px 10px; background:url(/images/line_1.gif) repeat-x top; color:#999;}
#notifications_menu .notification_detail_content {padding:0;}
#notifications_menu .system_message{padding:0 10px 10px;}
#notifications_menu .notification_detail_item {padding: 7px 10px; border-bottom: 1px solid #e6e6e6; overflow: hidden; }
#notifications_menu span.time { color: gray; float: right; }
#notifications_menu span.paginate { float : right;}
#notifications_menu span.paginate .separated {width: 10px; /*background:url(/images/news_dropmenu.png) no-repeat 10px -190px;*/ padding: 0 10px; color:#666;}
#notifications_menu span.paginate #prev_button{/*padding:0 0 0 10px; background:url(/images/news_dropmenu.png) no-repeat 0 -46px; *background:url(/images/news_dropmenu.png) no-repeat 0 -47px;*/ text-decoration:none;}
#notifications_menu span.paginate #next_button{/*padding:0 10px 0 0; background:url(/images/news_dropmenu.png) no-repeat 39px -118px; *background:url(/images/news_dropmenu.png) no-repeat 39px -119px;*/ text-decoration:none;}
#notifications_menu span.paginate a { cursor: pointer; padding-left: 3px; }
#notifications_menu span.paginate a.disable { cursor: default; color:#999; text-decoration: none; }

#content div.notices_area {margin-bottom: 6px; padding:3px 5px 3px 20px; border:1px dashed #f8cc7e; background:#fffce7 url(/images/light.png) no-repeat 5px 4px;}
#content div.notices_area a {color: #000}
#content div.notices_area a b {color: #f00; display: block;}div#main {
    width: 706px;
}

div#local {
    width: 230px;
    overflow: hidden;
}

div#news_content {
    font-size:14px;
    line-height: 1.8em;
}

#interview_main div.news_content {padding: 5px 8px; margin-bottom: 12px; font-size: 14px; line-height: 1.6em}

#local div, #news_pdf, .news_left_div {
    border: 1px solid #A8BACD;
    margin-bottom: 5px;
    background-color: #fafafa;
    padding: 1px;
}

#local .logo {
    margin-left: 10px;
    border: none !important;
}

#local div#mynews {
    border: none;
    text-align: center;
    padding: 3px;
}

#local form {
    padding: 5px;
}

#local h3, #news_pdf h3, .news_left_div h3 {
        clear:both;
        display:block;
    background-image: url(/images/bg_box_title.png);
    border-bottom: 1px solid #A8BACD;
    line-height: 20px;
    font-size: 12px;
    padding: 2px 0;
    text-align: center;
}
/* 20110418 add */
/* #local h3, #news_pdf h3:after{content:"."; display:block; height:0; clear:both; visibility:hidden;} */
#local h3 span.more, #news_pdf h3 span.more, .news_left_div h3 span.more{float:right; padding:0 5px !important; background:none !important; color:#ff; font-weight:normal;}
#local h3 span.more a, #news_pdf h3 span.more a, .news_left_div h3 span.more a{color:#fff;}

#local h4 {
    font-size: 12px;
    font-weight: normal;
    padding-left: 10px;
}

#local ul {
        clear:both;
    margin-bottom: 0;
}

#local hr {
    margin: 5px 10px;
}

#local ul li {
    line-height: 2.2em;
    list-style: square;
    padding-right: 6px;
}
/* 20110418 add */
#local div#hot_news li,
#local div#hot_interview li,
#local div#hot_essence li,
#local div#essence_categories li{list-style:none; margin-left:10px;}
#local div#hot_news li span,
#local div#hot_interview li span,
#local div#hot_essence li span,
#local div#essence_categories li span{padding: 5px; background-color: #d6f1aa;}

#local div#latest_comments div {
    border: 0px;
    border-bottom: 1px dashed gray;
    padding: 10px;
}

span.gray {
    color: gray;
}

ul#news_nav {
    border-bottom: 1px solid #36a;
    padding: 2px 0 27px 10px;
    margin-top: 0;
}

ul#news_nav li {
    float: left;
    display: inline;
    list-style: none;
    margin: 0 5px;
    height: 26px;
    line-height: 26px;
}

ul#news_nav li.tab {
    border: 1px solid #ccc;
    background-color: #f7f7f7;
    border-bottom: 0px;
}

ul#news_nav a,
ul#news_nav a:link,
ul#news_nav a:active,
ul#news_nav a:visited {
    text-decoration: none;
    padding: 7px 10px;
}

ul#news_nav li.tab a:hover {
    color: white;
    text-decoration: underline;
    background-color: #069;
}

ul#news_nav li.selected {
    border: 1px solid #36a;
    border-bottom: 1px solid white;
    background-color: white;
}

ul#news_nav li.selected a {
    color: #e28822;
    font-weight: bold;
}

.news {
    width: 100%;
    padding: 10px 0;
}

.news_main .news {
    padding-bottom: 0;
}

div.digg {
    float: right;
    width: 52px;
    margin: 0 5px;
    text-align: center;
}
div.news_digg div.digg {
    float: left;
}

.digg h3 {
    background-image: url(/images/digg.jpg);
    background-repeat: no-repeat;
    padding: 7px 0;
        text-align:center;
}

.digg h3.digged {
    background-image: url(/images/digged.jpg);
}

.digg h3 a, .digg h3 span {
    font-size: 14px;
    font-weight: normal;
    text-decoration: none;
    padding-left: 15px;
    background-repeat: no-repeat;
    background-position: left center;
}

.digg h3 a.digg, .digg h3 span.digg {
    color: #152F93;
    background-image: url(/images/icon_digg.gif);
}

.digg h3 a.bury, .digg h3 span.bury {
    color: #A03A32;
    background-image: url(/images/icon_bury.gif);
}

div#digg_bottom{display:block; *display:inline-block; height:59px; margin: 5px 0; padding-left: 270px;}

div#digg_bottom:after{
    content:".";
    display:block;
    height:0;
    clear:both;
    visibility:hidden;
}

div#digg_bottom .share_weibo{display:inline-block; float:right; width:160px; height:32px; margin:0; padding:18px 5px 0 0; background:none; color:#333; font:normal 12px/32px Arial, Helvetica, sans-serif !important; text-align:right; cursor:auto;}

div#digg_bottom .share_weibo img{
    margin:0 5px;
}

div#digg_bottom div {
    width: 72px;
    height: 50px;
    background-image: url(/images/digg_bottom.gif);
    float: left;
    text-align: center;
    padding-top: 9px;
    margin-right: 10px;
    font-size: 14px;
    line-height: 25px;
    cursor: pointer;
}

div#digg_bottom strong {
    color: white;
}

div#digg_bottom a {
    color: #1607D1;
    text-decoration: none;
    background: transparent;
}

div#digg_bottom div.digged {
    background-image: url(/images/digged_bottom.gif);
    color: #F14E10;
    cursor: auto;
}

.news .content {
    overflow: auto;
}

.news .content .icon {
    float: right;
}

#news_icon {
    float: right;
    padding: 0 5px;
}

.news .title h3, .news .title div {
    /*margin-left: 120px;
    margin-bottom: 30px;
        text-align:center;*/
        margin-left: 100px;
        text-align:left;
}

.news h3 {
    font-size: 16px;
}

.news h3 img {
    vertical-align: middle;
}

.news h3 span.category a {
    color: #FF580A;
}

.news_info{
        position:relative;
    background-color: #f2f8ef;
    padding: 2px;
    color: gray;
}

.news_info span {
    margin: 0 6px;
    padding-left: 20px;
    background-repeat: no-repeat;
}
.news_info .comment {
    background-image: url(/images/icon_comment.gif);
}

.news_info .view {
    background-image: url(/images/icon_arrow.gif);
}

.news_info .tag {
    background-image: url(/images/icon_tag.gif);
}

.news_info .date {
    color: #A12A2A;
    padding-left: 0;
}

.news_info a.favorite {
    padding-left: 20px;
    background-repeat: no-repeat;
    background-image: url(/images/icon_favorite.gif);
}

.crumbs {
    background-color: #E0F3C5;
    padding: 6px 10px;
}

.news_main {
    background-color: #F7F7F7;
    padding: 10px;
}

#news_recommended_n2 {
    padding: 5px;
}

.comments {
    width: 625px;
    border-top: 1px solid gray;
    margin-top: 15px;
    padding: 15px;
}

.comments h4 {
    font-size: 12px;
}

.comments h5 {
    background-color: white;
    font-weight: normal;
    font-size: 12px;
    margin: 15px 0;
}

.comments div a, #news_content a {
    text-decoration: underline;
}

table#news_main {
    width: 100%;
    background-color: #FFFFFF;
    border: 1px #006699 solid;
    border-collapse: separate;
}

table#news_main th {
    background-color: #dee3e7;
}

table#news_main td {
    padding: 2px;
}

table#news_main thead td {
    background-image: url(/images/bg_cel2.gif);
    padding: 5px 0;
    color: #ffa34f;
    font-size: 1.1em;
    font-weight: bold;
    text-align: center;
}

h4.copyright {
    font-size: 12px;
    color: gray;
    padding: 3px 0 20px 3px;
}

ul#news_categories {
    list-style: none;
    float: left;
    border: 1px solid #ccc;
    border-right-width: 0px;
}

ul#news_categories li {
    text-align: center;
    margin: 0;
    padding: 6px 10px;
    border-bottom: 1px solid #ccc;
    background-color: white;
}

ul#news_categories li.selected {
    background-color: #57923e;
    border-right-color: #57923e;
}

ul#news_categories a {
    color: #57923e;
    font-size: 14px;
    text-decoration: underline;
}

ul#news_categories li.selected a {
    color: white;
}

.category_news {
    border: 3px solid #57923e;
    width: 540px;
    float: left;
    padding: 0 5px 5px 10px;
    line-height: 1.8em;
}

.category_news h3 {
    margin-top: 10px;
}

.category_news li {
    list-style: square;
}

.subject_logo {
    float:left;
    width:145px;
}

.subject_summary {
    float:right;
    width:500px;
}

.subject_summary div {
    margin:3px 5px 5px 5px;
    line-height: 1.6em;
    text-indent: 30px;
}

.row2 {
    width: 475px;
}



#blog_category {
    margin-bottom: 10px;
}
#blog_category h3{
    background:url(/images/blog_cat_title.gif);
    height:25px;
    color:#ffffff;
    margin:0;
    padding: 5px 0 0 10px;
    cursor:pointer;
    position: relative;
}
#blog_category ul{
    margin:0;
    padding:0;
    list-style:none;
}
ul#category li {
    position:relative;
    background:url(/images/blog_cat_all.gif) 0 0;
    margin:0;
    padding:0;
    height: 30px;
    width: 128px;
}
ul#category li div {
    background:url(/images/blog_cat_all.gif) -256px 0;
}
ul#category li div.div_hover {
    background:url(/images/blog_cat_all.gif) -256px -30px;
}
ul#category li a{
    display: block;
    padding: 5px 0 5px 10px;
    width: 90px;
}
ul#category li li a{
    width: 110px;
}
ul#category li.first{
    background: url(/images/blog_cat_all.gif) -128px 0;
}
ul#category li.category_hover {
    background:url(/images/blog_cat_all.gif) 0 -30px;
}
ul#category li.first_hover {
    background: url(/images/blog_cat_all.gif) -128px -30px;
}
ul#category li ul {
    position:absolute;
    top:0;
    left:128px;
    z-index:999;
    width:128px;
}
#blog_category h3 a{
    display:block;
    width:100%;
    height:100%;
    color: #fff;
}
#blog_category h3 a:hover {
    text-decoration: none;
}
h3 span.category a{
    color:#FF580A;
}

.category_crumbs {
    /*margin-top: 10px;
    margin-left:140px;
    padding-top:5px;*/
}


#index_main {
    width: 560px;
    float: right;
}
#interview_article .article {
    padding: 8px 10px;
    border: none 0;
    border-bottom: 1px dashed gray;
}
#interview_article .article h4 {
    padding: 2px 0;
    font-weight: bold;
    font-size: 13px;
}
.clearfix {
    clear: both;
}

#news_pdf .news_pdf h4 {
    font-size: 115%;
    text-align: center;
}
#news_pdf h4 span, .news_left_div h4 span {
    font-weight: normal;
}
.news_pdf {
    padding: 10px;
    border-bottom: 1px solid #aaa;
}
.news_pdf img {
    padding-left: 13px;
}
.news_pdf h5 {
    font-weight: normal;
    margin-top: 5px;
}
.news_pdf ul li {
    margin-left: 15px;
    list-style: square;
}
.news_pdf ul {
    margin-bottom: 5px;
}
.news_pdf a.right_link {
    margin-left: 30px;
    color: #FF580A;
}

#side {
    width:128px;
    float:left;
}

div._digest_tag_list
{
   margin:10px 10px 10px 8px;
}
div._digest_tag_list a
{
    width: 57px;
    height: 20px;
    background-color:#E4E4E4;
    padding:5px;
    margin-right:10px;
}
 .more
{
    float:right;
}
div#tag_cloud a
{
    width: 57px;
    height: 20px;
    background-color:#E4E4E4;
    padding:5px;
    margin-right:10px;
}
/* 20110415 add */
.hot_tag{}
.hot_tag p{padding:0 8px 4px 8px;}
.hot_tag p span{display:inline-block; margin:0 1em 0 0; color:#666; font-size:12px;}
.hot_tag p span a{color:#1a4d81;}
#local .hot_tag p span{width:90px;}

#index_main .digg, #main span.json_digg{position:absolute; right:0; float:right; margin:0; padding:0;}
#index_main .digg .push_up, #main span.json_digg .push_up{margin:0 2em 0 0; padding:0 0 0 11px; background:url(/images/arrow_up.gif) no-repeat left 2px; color:#17a300;}
#index_main .digg .trample, #main span.json_digg .trample{margin:0 2em 0 0; padding:0 0 0 11px; background:url(/images/arrow_down.gif) no-repeat left 2px; color:#ff0000;}

#interview_main{width:706px}
h1{position:relative;font-size:16px;}
h1 span.category a {color: #FF580A;}
h1 span.manage a {color: #FF580A;font-size:12px;}
#interview_main h1 img {vertical-align: middle;}
#interview_main .title_block{position:relative; height:120px; margin-bottom:15px;}
#interview_main .title_block h1{padding-top:25px;margin-bottom:15px;}
.news_main .actions, #interview_main .actions{float: right;padding: 0 0 5px 5px;}
.news_main .actions img, #interview_main .actions img {margin-right: 8px}
#interview_main .title_block span{margin-right:10px;}
#interview_main .title_block span.approved_at{margin-bottom:10px;color:#930;}
#interview_main .title_block span.comment{padding-left:20px;background:url(/images/icon_comment.gif) no-repeat;}
#interview_main .title_block span.view{padding-left:20px;background:url(/images/icon_arrow.gif) no-repeat;}
#interview_main .title_block span.favorite{padding-left:20px;background:url(/images/icon_favorite.gif) no-repeat;position:relative;}
#interview_main .title_block .tags{margin-top:5px;}
#interview_main .title_block .news_operation, #interview_main .title_block .news_info{margin-left: 120px;}
#interview_main .title_block .user_logo{text-align: center; float: left; width: 72px;margin: 25px 0 15px 15px;}
#interview_menu{background-color: #F5F5F5;border: 1px solid #CCCCCC;margin: 10px;padding: 5px;width: 300px;}
h2{padding: 15px 0 3px 5px;border-bottom: 1px solid #CCCCCC;font-size:16px;}
div.comments {border-top: 1px solid #CCCCCC;margin-top: 15px;padding: 15px;}
.info {background-color: transparent;margin-bottom: 10px;padding-left: 5px;color: gray;}
div.comments h5 {background-color: #EBEBEB;font-size: 12px;font-weight: normal;margin: 15px 0;}


.my_tag{display:block; *display:inline-block; padding:0 10px; border-bottom:solid 1px #0055ab;}
.my_tag:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
.my_tag li{float:left; width:6em; margin:0 10px -1px 0; border:solid 1px #0055ab; background:#b1cce8; list-style:none; line-height:24px; text-align:center;}
.my_tag li.select{border-color:#0055ab #0055ab #fff #0055ab; background:#fff;}
.my_tag li a{display:block; color:#0055ab;}
.my_tag li a:hover{background:#0055ab; color:#fff; text-decoration:none;}
.my_tag li.select a{color:#0055ab;}
.my_tag li.select a:hover{color:#fff;}

.editor dl.axis{margin:0 0 4px 0;}
.editor dl.axis dt{float:none; height:55px; *height:58px; overflow:hidden; margin:0; padding:0; text-align:center;}
.editor dl.axis dt img{width:48px; height:48px; padding:2px 6px 6px 2px; background:url(/images/logo_bg.gif) no-repeat 0 0;}
.editor dl.axis dd{float:none; width:100%; margin:0; font:normal 12px/14px Arial, Helvetica, sans-serif; text-align:center;}
.editor dl.axis dd a{word-break:break-all; word-wrap:break-word;}

.editor {text-align:center;}
.editor h4{margin:0; padding:0 4px; color:#333; font:bold 12px/22px Arial, Helvetica, sans-serif;}
.editor ul{clear:both; margin:0 0 10px 0; padding:0 4px;}
.editor li{list-style:none; margin:0; padding:0; font:normal 12px/18px Arial, Helvetica, sans-serif;}

#news_editor_top_list .editor p{text-align:center !important;}
.editor p{margin:0 !important; padding:5px !important; border-top:dashed 1px #ccc; font:bold 12px/24px Arial, Helvetica, sans-serif; text-align:left !important;}
.editor p a{color:#f50;}

#news_pdf p, .news_left_div p{margin:0 0 5px 0; padding:0 10px; text-align:right;}
#news_pdf p a, .news_left_div p a{font:bold 12px/24px Arial, Helvetica, sans-serif;}

/* editor style */
.editors{display:block; *display:inline-block; margin:10px 0 40px 0; padding:0;}
.editors:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
.editors h3{height:18px; margin:0 0 20px 0; padding:2px 10px; background-color:#D9E7F0; color:#16387C; font-size:12px;}
.editors h4{height:24px; margin:0 0 10px 10px; border-bottom:solid 1px #ccc;}
.editors .active{display:block; *display:inline-block; float:left; width:150px; margin:0 0 0 10px;}
.editors .active:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
.editors .active dt{float:left; width:48px; height:48px; overflow:hidden; margin:0 4px 0 0; padding:2px 6px 6px 2px; background:url(/images/logo_bg.gif) no-repeat 0 0;}
.editors .active dt img{width:48px; height:48px;}
.editors .active dd{float:left; width:90px; margin:0; font:normal 12px/24px Arial, Helvetica, sans-serif;}
.editors .active dd a{display:block;}

.editors .channel{display:block; *display:inline-block; margin:0 0 20px 10px;}
.editors .channel:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
.editors .channel dt{float:left; width:48px; height:48px; overflow:hidden; margin:0 4px 0 0; padding:2px 6px 6px 2px; background:url(/images/logo_bg.gif) no-repeat 0 0;}
.editors .channel dt img{width:48px; height:48px;}
.editors .channel dd{display:inline; float:left; margin:0;width:630px}
.editors .channel dd li{color:#333; font:normal 12px/18px Arial, Helvetica, sans-serif;}
.editors .channel dd li span{margin:0 1em 0 0;}

ul.public{display:block; *display:inline-block;}
ul.public:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
ul.public li{list-style:none !important; float:left; width:80px; margin:0 0 0 10px; padding:0 0 0 11px; background:url(/images/black-dot.gif) no-repeat left center; font:normal 12px/26px Arial, Helvetica, sans-serif;}

ul.glory_editor{padding:0 0 10px 0;}
ul.glory_editor li{list-style:none !important; margin:0 0 0 10px; padding:0 0 0 11px; background:url(/images/black-dot.gif) no-repeat left center; font:normal 12px/26px Arial, Helvetica, sans-serif;}

/* elite style */
.nav_side #interview{background:url(/images/elite_sidenav.png) no-repeat 5px 3px; _background:url(/images/elite_sidenav.gif) no-repeat 5px 3px;}
.nav_side #commission{background:url(/images/elite_sidenav.png) no-repeat 5px -49px; _background:url(/images/elite_sidenav.gif) no-repeat 5px -49px;}
.nav_side #blog{background:url(/images/elite_sidenav.png) no-repeat 5px -102px; _background:url(/images/elite_sidenav.gif) no-repeat 5px -102px;}
.nav_side #forum{background:url(/images/elite_sidenav.png) no-repeat 5px -154px; _background:url(/images/elite_sidenav.gif) no-repeat 5px -154px;}
.nav_side #digest{background:url(/images/elite_sidenav.png) no-repeat 5px -206px; _background:url(/images/elite_sidenav.gif) no-repeat 5px -206px;}

.nav_side li.select #interview{background:url(/images/elite_sidenav.png) no-repeat 10px 3px; _background:url(/images/elite_sidenav.gif) no-repeat 10px 3px;}
.nav_side li.select #commission{background:url(/images/elite_sidenav.png) no-repeat 10px -49px; _background:url(/images/elite_sidenav.gif) no-repeat 10px -49px;}
.nav_side li.select #blog{background:url(/images/elite_sidenav.png) no-repeat 10px -102px; _background:url(/images/elite_sidenav.gif) no-repeat 10px -102px;}
.nav_side li.select #forum{background:url(/images/elite_sidenav.png) no-repeat 10px -154px; _background:url(/images/elite_sidenav.gif) no-repeat 10px -154px;}
.nav_side li.select #digest{background:url(/images/elite_sidenav.png) no-repeat 10px -206px; _background:url(/images/elite_sidenav.gif) no-repeat 10px -206px;}

/* right classify style */
.classify{display:block; *display:inline-block;}
.classify:after{content:"."; display:block; height:0; clear:both; visibility:hidden;}
.classify li{float:left; width:58px; margin:0 0 0 10px !important; padding:0 !important;}


div.referer{clear:both; height:38px; padding:0 10px; margin-bottom: 25px; border:solid 1px #e6eaed; -webkit-border-radius:5px; -moz-border-radius:5px; -khtml-border-radius:5px; border-radius:5px; background:#f3f6f8; color:#333; font:normal 14px/38px 宋体 Arial;}
div.referer a{color:#006699; text-decoration:underline;}
div.referer .comm{float:right;}
div.referer .from a{margin:0 2px 0 0; padding:0 18px 0 0; background:url(/images/news/ico_linkout.gif) no-repeat right center;}

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=application.js
Content-Type: text/javascript; name=application.js
Content-Location: http://www.iteye.com/javascripts/application.js?1358214518
Content-Transfer-Encoding: 8bit

/*  Prototype JavaScript framework, version 1.6.1
 *  (c) 2005-2009 Sam Stephenson
 *
 *  Prototype is freely distributable under the terms of an MIT-style license.
 *  For details, see the Prototype web site: http://www.prototypejs.org/
 *
 *--------------------------------------------------------------------------*/

var Prototype = {
  Version: '1.6.1',

  Browser: (function(){
    var ua = navigator.userAgent;
    var isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]';
    return {
      IE:             !!window.attachEvent && !isOpera,
      Opera:          isOpera,
      WebKit:         ua.indexOf('AppleWebKit/') > -1,
      Gecko:          ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') === -1,
      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)
    }
  })(),

  BrowserFeatures: {
    XPath: !!document.evaluate,
    SelectorsAPI: !!document.querySelector,
    ElementExtensions: (function() {
      var constructor = window.Element || window.HTMLElement;
      return !!(constructor && constructor.prototype);
    })(),
    SpecificElementExtensions: (function() {
      if (typeof window.HTMLDivElement !== 'undefined')
        return true;

      var div = document.createElement('div');
      var form = document.createElement('form');
      var isSupported = false;

      if (div['__proto__'] && (div['__proto__'] !== form['__proto__'])) {
        isSupported = true;
      }

      div = form = null;

      return isSupported;
    })()
  },

  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,

  emptyFunction: function() { },
  K: function(x) {return x}
};

if (Prototype.Browser.MobileSafari)
  Prototype.BrowserFeatures.SpecificElementExtensions = false;


var Abstract = { };


var Try = {
  these: function() {
    var returnValue;

    for (var i = 0, length = arguments.length; i < length; i++) {
      var lambda = arguments[i];
      try {
        returnValue = lambda();
        break;
      } catch (e) { }
    }

    return returnValue;
  }
};

/* Based on Alex Arnell's inheritance implementation. */

var Class = (function() {
  function subclass() {};
  function create() {
    var parent = null, properties = $A(arguments);
    if (Object.isFunction(properties[0]))
      parent = properties.shift();

    function klass() {
      this.initialize.apply(this, arguments);
    }

    Object.extend(klass, Class.Methods);
    klass.superclass = parent;
    klass.subclasses = [];

    if (parent) {
      subclass.prototype = parent.prototype;
      klass.prototype = new subclass;
      parent.subclasses.push(klass);
    }

    for (var i = 0; i < properties.length; i++)
      klass.addMethods(properties[i]);

    if (!klass.prototype.initialize)
      klass.prototype.initialize = Prototype.emptyFunction;

    klass.prototype.constructor = klass;
    return klass;
  }

  function addMethods(source) {
    var ancestor   = this.superclass && this.superclass.prototype;
    var properties = Object.keys(source);

    if (!Object.keys({toString: true}).length) {
      if (source.toString != Object.prototype.toString)
        properties.push("toString");
      if (source.valueOf != Object.prototype.valueOf)
        properties.push("valueOf");
    }

    for (var i = 0, length = properties.length; i < length; i++) {
      var property = properties[i], value = source[property];
      if (ancestor && Object.isFunction(value) &&
          value.argumentNames().first() == "$super") {
        var method = value;
        value = (function(m) {
          return function() {return ancestor[m].apply(this, arguments);};
        })(property).wrap(method);

        value.valueOf = method.valueOf.bind(method);
        value.toString = method.toString.bind(method);
      }
      this.prototype[property] = value;
    }

    return this;
  }

  return {
    create: create,
    Methods: {
      addMethods: addMethods
    }
  };
})();
(function() {

  var _toString = Object.prototype.toString;

  function extend(destination, source) {
    for (var property in source)
      destination[property] = source[property];
    return destination;
  }

  function inspect(object) {
    try {
      if (isUndefined(object)) return 'undefined';
      if (object === null) return 'null';
      return object.inspect ? object.inspect() : String(object);
    } catch (e) {
      if (e instanceof RangeError) return '...';
      throw e;
    }
  }

  function toJSON(object) {
    var type = typeof object;
    switch (type) {
      case 'undefined':
      case 'function':
      case 'unknown':return;
      case 'boolean':return object.toString();
    }

    if (object === null) return 'null';
    if (object.toJSON) return object.toJSON();
    if (isElement(object)) return;

    var results = [];
    for (var property in object) {
      var value = toJSON(object[property]);
      if (!isUndefined(value))
        results.push(property.toJSON() + ': ' + value);
    }

    return '{' + results.join(', ') + '}';
  }

  function toQueryString(object) {
    return $H(object).toQueryString();
  }

  function toHTML(object) {
    return object && object.toHTML ? object.toHTML() : String.interpret(object);
  }

  function keys(object) {
    var results = [];
    for (var property in object)
      results.push(property);
    return results;
  }

  function values(object) {
    var results = [];
    for (var property in object)
      results.push(object[property]);
    return results;
  }

  function clone(object) {
    return extend({ }, object);
  }

  function isElement(object) {
    return !!(object && object.nodeType == 1);
  }

  function isArray(object) {
    return _toString.call(object) == "[object Array]";
  }


  function isHash(object) {
    return object instanceof Hash;
  }

  function isFunction(object) {
    return typeof object === "function";
  }

  function isString(object) {
    return _toString.call(object) == "[object String]";
  }

  function isNumber(object) {
    return _toString.call(object) == "[object Number]";
  }

  function isUndefined(object) {
    return typeof object === "undefined";
  }

  extend(Object, {
    extend:        extend,
    inspect:       inspect,
    toJSON:        toJSON,
    toQueryString: toQueryString,
    toHTML:        toHTML,
    keys:          keys,
    values:        values,
    clone:         clone,
    isElement:     isElement,
    isArray:       isArray,
    isHash:        isHash,
    isFunction:    isFunction,
    isString:      isString,
    isNumber:      isNumber,
    isUndefined:   isUndefined
  });
})();
Object.extend(Function.prototype, (function() {
  var slice = Array.prototype.slice;

  function update(array, args) {
    var arrayLength = array.length, length = args.length;
    while (length--) array[arrayLength + length] = args[length];
    return array;
  }

  function merge(array, args) {
    array = slice.call(array, 0);
    return update(array, args);
  }

  function argumentNames() {
    var names = this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1]
      .replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g, '')
      .replace(/\s+/g, '').split(',');
    return names.length == 1 && !names[0] ? [] : names;
  }

  function bind(context) {
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return this;
    var __method = this, args = slice.call(arguments, 1);
    return function() {
      var a = merge(args, arguments);
      return __method.apply(context, a);
    }
  }

  function bindAsEventListener(context) {
    var __method = this, args = slice.call(arguments, 1);
    return function(event) {
      var a = update([event || window.event], args);
      return __method.apply(context, a);
    }
  }

  function curry() {
    if (!arguments.length) return this;
    var __method = this, args = slice.call(arguments, 0);
    return function() {
      var a = merge(args, arguments);
      return __method.apply(this, a);
    }
  }

  function delay(timeout) {
    var __method = this, args = slice.call(arguments, 1);
    timeout = timeout * 1000
    return window.setTimeout(function() {
      return __method.apply(__method, args);
    }, timeout);
  }

  function defer() {
    var args = update([0.01], arguments);
    return this.delay.apply(this, args);
  }

  function wrap(wrapper) {
    var __method = this;
    return function() {
      var a = update([__method.bind(this)], arguments);
      return wrapper.apply(this, a);
    }
  }

  function methodize() {
    if (this._methodized) return this._methodized;
    var __method = this;
    return this._methodized = function() {
      var a = update([this], arguments);
      return __method.apply(null, a);
    };
  }

  return {
    argumentNames:       argumentNames,
    bind:                bind,
    bindAsEventListener: bindAsEventListener,
    curry:               curry,
    delay:               delay,
    defer:               defer,
    wrap:                wrap,
    methodize:           methodize
  }
})());


Date.prototype.toJSON = function() {
  return '"' + this.getUTCFullYear() + '-' +
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +
    this.getUTCDate().toPaddedString(2) + 'T' +
    this.getUTCHours().toPaddedString(2) + ':' +
    this.getUTCMinutes().toPaddedString(2) + ':' +
    this.getUTCSeconds().toPaddedString(2) + 'Z"';
};


RegExp.prototype.match = RegExp.prototype.test;

RegExp.escape = function(str) {
  return String(str).replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
};
var PeriodicalExecuter = Class.create({
  initialize: function(callback, frequency) {
    this.callback = callback;
    this.frequency = frequency;
    this.currentlyExecuting = false;

    this.registerCallback();
  },

  registerCallback: function() {
    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  execute: function() {
    this.callback(this);
  },

  stop: function() {
    if (!this.timer) return;
    clearInterval(this.timer);
    this.timer = null;
  },

  onTimerEvent: function() {
    if (!this.currentlyExecuting) {
      try {
        this.currentlyExecuting = true;
        this.execute();
        this.currentlyExecuting = false;
      } catch(e) {
        this.currentlyExecuting = false;
        throw e;
      }
    }
  }
});
Object.extend(String, {
  interpret: function(value) {
    return value == null ? '' : String(value);
  },
  specialChar: {
    '\b': '\\b',
    '\t': '\\t',
    '\n': '\\n',
    '\f': '\\f',
    '\r': '\\r',
    '\\': '\\\\'
  }
});

Object.extend(String.prototype, (function() {

  function prepareReplacement(replacement) {
    if (Object.isFunction(replacement)) return replacement;
    var template = new Template(replacement);
    return function(match) {return template.evaluate(match)};
  }

  function gsub(pattern, replacement) {
    var result = '', source = this, match;
    replacement = prepareReplacement(replacement);

    if (Object.isString(pattern))
      pattern = RegExp.escape(pattern);

    if (!(pattern.length || pattern.source)) {
      replacement = replacement('');
      return replacement + source.split('').join(replacement) + replacement;
    }

    while (source.length > 0) {
      if (match = source.match(pattern)) {
        result += source.slice(0, match.index);
        result += String.interpret(replacement(match));
        source  = source.slice(match.index + match[0].length);
      } else {
        result += source, source = '';
      }
    }
    return result;
  }

  function sub(pattern, replacement, count) {
    replacement = prepareReplacement(replacement);
    count = Object.isUndefined(count) ? 1 : count;

    return this.gsub(pattern, function(match) {
      if (--count < 0) return match[0];
      return replacement(match);
    });
  }

  function scan(pattern, iterator) {
    this.gsub(pattern, iterator);
    return String(this);
  }

  function truncate(length, truncation) {
    length = length || 30;
    truncation = Object.isUndefined(truncation) ? '...' : truncation;
    return this.length > length ?
      this.slice(0, length - truncation.length) + truncation : String(this);
  }

  function strip() {
    return this.replace(/^\s+/, '').replace(/\s+$/, '');
  }

  function stripTags() {
    return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi, '');
  }

  function stripScripts() {
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
  }

  function extractScripts() {
    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');
    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');
    return (this.match(matchAll) || []).map(function(scriptTag) {
      return (scriptTag.match(matchOne) || ['', ''])[1];
    });
  }

  function evalScripts() {
    return this.extractScripts().map(function(script) {return eval(script)});
  }

  function escapeHTML() {
    return this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
  }

  function unescapeHTML() {
    return this.stripTags().replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;/g,'&');
  }


  function toQueryParams(separator) {
    var match = this.strip().match(/([^?#]*)(#.*)?$/);
    if (!match) return { };

    return match[1].split(separator || '&').inject({ }, function(hash, pair) {
      if ((pair = pair.split('='))[0]) {
        var key = decodeURIComponent(pair.shift());
        var value = pair.length > 1 ? pair.join('=') : pair[0];
        if (value != undefined) value = decodeURIComponent(value);

        if (key in hash) {
          if (!Object.isArray(hash[key])) hash[key] = [hash[key]];
          hash[key].push(value);
        }
        else hash[key] = value;
      }
      return hash;
    });
  }

  function toArray() {
    return this.split('');
  }

  function succ() {
    return this.slice(0, this.length - 1) +
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
  }

  function times(count) {
    return count < 1 ? '' : new Array(count + 1).join(this);
  }

  function camelize() {
    var parts = this.split('-'), len = parts.length;
    if (len == 1) return parts[0];

    var camelized = this.charAt(0) == '-'
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)
      : parts[0];

    for (var i = 1; i < len; i++)
      camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);

    return camelized;
  }

  function capitalize() {
    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
  }

  function underscore() {
    return this.replace(/::/g, '/')
               .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')
               .replace(/([a-z\d])([A-Z])/g, '$1_$2')
               .replace(/-/g, '_')
               .toLowerCase();
  }

  function dasherize() {
    return this.replace(/_/g, '-');
  }

  function inspect(useDoubleQuotes) {
    var escapedString = this.replace(/[\x00-\x1f\\]/g, function(character) {
      if (character in String.specialChar) {
        return String.specialChar[character];
      }
      return '\\u00' + character.charCodeAt().toPaddedString(2, 16);
    });
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') + '"';
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";
  }

  function toJSON() {
    return this.inspect(true);
  }

  function unfilterJSON(filter) {
    return this.replace(filter || Prototype.JSONFilter, '$1');
  }

  function isJSON() {
    var str = this;
    if (str.blank()) return false;
    str = this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);
  }

  function evalJSON(sanitize) {
    var json = this.unfilterJSON();
    try {
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');
    } catch (e) { }
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());
  }

  function include(pattern) {
    return this.indexOf(pattern) > -1;
  }

  function startsWith(pattern) {
    return this.indexOf(pattern) === 0;
  }

  function endsWith(pattern) {
    var d = this.length - pattern.length;
    return d >= 0 && this.lastIndexOf(pattern) === d;
  }

  function empty() {
    return this == '';
  }

  function blank() {
    return /^\s*$/.test(this);
  }

  function interpolate(object, pattern) {
    return new Template(this, pattern).evaluate(object);
  }

  return {
    gsub:           gsub,
    sub:            sub,
    scan:           scan,
    truncate:       truncate,
    strip:          String.prototype.trim ? String.prototype.trim : strip,
    stripTags:      stripTags,
    stripScripts:   stripScripts,
    extractScripts: extractScripts,
    evalScripts:    evalScripts,
    escapeHTML:     escapeHTML,
    unescapeHTML:   unescapeHTML,
    toQueryParams:  toQueryParams,
    parseQuery:     toQueryParams,
    toArray:        toArray,
    succ:           succ,
    times:          times,
    camelize:       camelize,
    capitalize:     capitalize,
    underscore:     underscore,
    dasherize:      dasherize,
    inspect:        inspect,
    toJSON:         toJSON,
    unfilterJSON:   unfilterJSON,
    isJSON:         isJSON,
    evalJSON:       evalJSON,
    include:        include,
    startsWith:     startsWith,
    endsWith:       endsWith,
    empty:          empty,
    blank:          blank,
    interpolate:    interpolate
  };
})());

var Template = Class.create({
  initialize: function(template, pattern) {
    this.template = template.toString();
    this.pattern = pattern || Template.Pattern;
  },

  evaluate: function(object) {
    if (object && Object.isFunction(object.toTemplateReplacements))
      object = object.toTemplateReplacements();

    return this.template.gsub(this.pattern, function(match) {
      if (object == null) return (match[1] + '');

      var before = match[1] || '';
      if (before == '\\') return match[2];

      var ctx = object, expr = match[3];
      var pattern = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;
      match = pattern.exec(expr);
      if (match == null) return before;

      while (match != null) {
        var comp = match[1].startsWith('[') ? match[2].replace(/\\\\]/g, ']') : match[1];
        ctx = ctx[comp];
        if (null == ctx || '' == match[3]) break;
        expr = expr.substring('[' == match[3] ? match[1].length : match[0].length);
        match = pattern.exec(expr);
      }

      return before + String.interpret(ctx);
    });
  }
});
Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;

var $break = { };

var Enumerable = (function() {
  function each(iterator, context) {
    var index = 0;
    try {
      this._each(function(value) {
        iterator.call(context, value, index++);
      });
    } catch (e) {
      if (e != $break) throw e;
    }
    return this;
  }

  function eachSlice(number, iterator, context) {
    var index = -number, slices = [], array = this.toArray();
    if (number < 1) return array;
    while ((index += number) < array.length)
      slices.push(array.slice(index, index+number));
    return slices.collect(iterator, context);
  }

  function all(iterator, context) {
    iterator = iterator || Prototype.K;
    var result = true;
    this.each(function(value, index) {
      result = result && !!iterator.call(context, value, index);
      if (!result) throw $break;
    });
    return result;
  }

  function any(iterator, context) {
    iterator = iterator || Prototype.K;
    var result = false;
    this.each(function(value, index) {
      if (result = !!iterator.call(context, value, index))
        throw $break;
    });
    return result;
  }

  function collect(iterator, context) {
    iterator = iterator || Prototype.K;
    var results = [];
    this.each(function(value, index) {
      results.push(iterator.call(context, value, index));
    });
    return results;
  }

  function detect(iterator, context) {
    var result;
    this.each(function(value, index) {
      if (iterator.call(context, value, index)) {
        result = value;
        throw $break;
      }
    });
    return result;
  }

  function findAll(iterator, context) {
    var results = [];
    this.each(function(value, index) {
      if (iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  }

  function grep(filter, iterator, context) {
    iterator = iterator || Prototype.K;
    var results = [];

    if (Object.isString(filter))
      filter = new RegExp(RegExp.escape(filter));

    this.each(function(value, index) {
      if (filter.match(value))
        results.push(iterator.call(context, value, index));
    });
    return results;
  }

  function include(object) {
    if (Object.isFunction(this.indexOf))
      if (this.indexOf(object) != -1) return true;

    var found = false;
    this.each(function(value) {
      if (value == object) {
        found = true;
        throw $break;
      }
    });
    return found;
  }

  function inGroupsOf(number, fillWith) {
    fillWith = Object.isUndefined(fillWith) ? null : fillWith;
    return this.eachSlice(number, function(slice) {
      while(slice.length < number) slice.push(fillWith);
      return slice;
    });
  }

  function inject(memo, iterator, context) {
    this.each(function(value, index) {
      memo = iterator.call(context, memo, value, index);
    });
    return memo;
  }

  function invoke(method) {
    var args = $A(arguments).slice(1);
    return this.map(function(value) {
      return value[method].apply(value, args);
    });
  }

  function max(iterator, context) {
    iterator = iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value = iterator.call(context, value, index);
      if (result == null || value >= result)
        result = value;
    });
    return result;
  }

  function min(iterator, context) {
    iterator = iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value = iterator.call(context, value, index);
      if (result == null || value < result)
        result = value;
    });
    return result;
  }

  function partition(iterator, context) {
    iterator = iterator || Prototype.K;
    var trues = [], falses = [];
    this.each(function(value, index) {
      (iterator.call(context, value, index) ?
        trues : falses).push(value);
    });
    return [trues, falses];
  }

  function pluck(property) {
    var results = [];
    this.each(function(value) {
      results.push(value[property]);
    });
    return results;
  }

  function reject(iterator, context) {
    var results = [];
    this.each(function(value, index) {
      if (!iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  }

  function sortBy(iterator, context) {
    return this.map(function(value, index) {
      return {
        value: value,
        criteria: iterator.call(context, value, index)
      };
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }).pluck('value');
  }

  function toArray() {
    return this.map();
  }

  function zip() {
    var iterator = Prototype.K, args = $A(arguments);
    if (Object.isFunction(args.last()))
      iterator = args.pop();

    var collections = [this].concat(args).map($A);
    return this.map(function(value, index) {
      return iterator(collections.pluck(index));
    });
  }

  function size() {
    return this.toArray().length;
  }

  function inspect() {
    return '#<Enumerable:' + this.toArray().inspect() + '>';
  }









  return {
    each:       each,
    eachSlice:  eachSlice,
    all:        all,
    every:      all,
    any:        any,
    some:       any,
    collect:    collect,
    map:        collect,
    detect:     detect,
    findAll:    findAll,
    select:     findAll,
    filter:     findAll,
    grep:       grep,
    include:    include,
    member:     include,
    inGroupsOf: inGroupsOf,
    inject:     inject,
    invoke:     invoke,
    max:        max,
    min:        min,
    partition:  partition,
    pluck:      pluck,
    reject:     reject,
    sortBy:     sortBy,
    toArray:    toArray,
    entries:    toArray,
    zip:        zip,
    size:       size,
    inspect:    inspect,
    find:       detect
  };
})();
function $A(iterable) {
  if (!iterable) return [];
  if ('toArray' in Object(iterable)) return iterable.toArray();
  var length = iterable.length || 0, results = new Array(length);
  while (length--) results[length] = iterable[length];
  return results;
}

function $w(string) {
  if (!Object.isString(string)) return [];
  string = string.strip();
  return string ? string.split(/\s+/) : [];
}

Array.from = $A;


(function() {
  var arrayProto = Array.prototype,
      slice = arrayProto.slice,
      _each = arrayProto.forEach; // use native browser JS 1.6 implementation if available

  function each(iterator) {
    for (var i = 0, length = this.length; i < length; i++)
      iterator(this[i]);
  }
  if (!_each) _each = each;

  function clear() {
    this.length = 0;
    return this;
  }

  function first() {
    return this[0];
  }

  function last() {
    return this[this.length - 1];
  }

  function compact() {
    return this.select(function(value) {
      return value != null;
    });
  }

  function flatten() {
    return this.inject([], function(array, value) {
      if (Object.isArray(value))
        return array.concat(value.flatten());
      array.push(value);
      return array;
    });
  }

  function without() {
    var values = slice.call(arguments, 0);
    return this.select(function(value) {
      return !values.include(value);
    });
  }

  function reverse(inline) {
    return (inline !== false ? this : this.toArray())._reverse();
  }

  function uniq(sorted) {
    return this.inject([], function(array, value, index) {
      if (0 == index || (sorted ? array.last() != value : !array.include(value)))
        array.push(value);
      return array;
    });
  }

  function intersect(array) {
    return this.uniq().findAll(function(item) {
      return array.detect(function(value) {return item === value});
    });
  }


  function clone() {
    return slice.call(this, 0);
  }

  function size() {
    return this.length;
  }

  function inspect() {
    return '[' + this.map(Object.inspect).join(', ') + ']';
  }

  function toJSON() {
    var results = [];
    this.each(function(object) {
      var value = Object.toJSON(object);
      if (!Object.isUndefined(value)) results.push(value);
    });
    return '[' + results.join(', ') + ']';
  }

  function indexOf(item, i) {
    i || (i = 0);
    var length = this.length;
    if (i < 0) i = length + i;
    for (; i < length; i++)
      if (this[i] === item) return i;
    return -1;
  }

  function lastIndexOf(item, i) {
    i = isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;
    var n = this.slice(0, i).reverse().indexOf(item);
    return (n < 0) ? n : i - n - 1;
  }

  function concat() {
    var array = slice.call(this, 0), item;
    for (var i = 0, length = arguments.length; i < length; i++) {
      item = arguments[i];
      if (Object.isArray(item) && !('callee' in item)) {
        for (var j = 0, arrayLength = item.length; j < arrayLength; j++)
          array.push(item[j]);
      } else {
        array.push(item);
      }
    }
    return array;
  }

  Object.extend(arrayProto, Enumerable);

  if (!arrayProto._reverse)
    arrayProto._reverse = arrayProto.reverse;

  Object.extend(arrayProto, {
    _each:     _each,
    clear:     clear,
    first:     first,
    last:      last,
    compact:   compact,
    flatten:   flatten,
    without:   without,
    reverse:   reverse,
    uniq:      uniq,
    intersect: intersect,
    clone:     clone,
    toArray:   clone,
    size:      size,
    inspect:   inspect,
    toJSON:    toJSON
  });

  var CONCAT_ARGUMENTS_BUGGY = (function() {
    return [].concat(arguments)[0][0] !== 1;
  })(1,2)

  if (CONCAT_ARGUMENTS_BUGGY) arrayProto.concat = concat;

  if (!arrayProto.indexOf) arrayProto.indexOf = indexOf;
  if (!arrayProto.lastIndexOf) arrayProto.lastIndexOf = lastIndexOf;
})();
function $H(object) {
  return new Hash(object);
};

var Hash = Class.create(Enumerable, (function() {
  function initialize(object) {
    this._object = Object.isHash(object) ? object.toObject() : Object.clone(object);
  }

  function _each(iterator) {
    for (var key in this._object) {
      var value = this._object[key], pair = [key, value];
      pair.key = key;
      pair.value = value;
      iterator(pair);
    }
  }

  function set(key, value) {
    return this._object[key] = value;
  }

  function get(key) {
    if (this._object[key] !== Object.prototype[key])
      return this._object[key];
  }

  function unset(key) {
    var value = this._object[key];
    delete this._object[key];
    return value;
  }

  function toObject() {
    return Object.clone(this._object);
  }

  function keys() {
    return this.pluck('key');
  }

  function values() {
    return this.pluck('value');
  }

  function index(value) {
    var match = this.detect(function(pair) {
      return pair.value === value;
    });
    return match && match.key;
  }

  function merge(object) {
    return this.clone().update(object);
  }

  function update(object) {
    return new Hash(object).inject(this, function(result, pair) {
      result.set(pair.key, pair.value);
      return result;
    });
  }

  function toQueryPair(key, value) {
    if (Object.isUndefined(value)) return key;
    return key + '=' + encodeURIComponent(String.interpret(value));
  }

  function toQueryString() {
    return this.inject([], function(results, pair) {
      var key = encodeURIComponent(pair.key), values = pair.value;

      if (values && typeof values == 'object') {
        if (Object.isArray(values))
          return results.concat(values.map(toQueryPair.curry(key)));
      } else results.push(toQueryPair(key, values));
      return results;
    }).join('&');
  }

  function inspect() {
    return '#<Hash:{' + this.map(function(pair) {
      return pair.map(Object.inspect).join(': ');
    }).join(', ') + '}>';
  }

  function toJSON() {
    return Object.toJSON(this.toObject());
  }

  function clone() {
    return new Hash(this);
  }

  return {
    initialize:             initialize,
    _each:                  _each,
    set:                    set,
    get:                    get,
    unset:                  unset,
    toObject:               toObject,
    toTemplateReplacements: toObject,
    keys:                   keys,
    values:                 values,
    index:                  index,
    merge:                  merge,
    update:                 update,
    toQueryString:          toQueryString,
    inspect:                inspect,
    toJSON:                 toJSON,
    clone:                  clone
  };
})());

Hash.from = $H;
Object.extend(Number.prototype, (function() {
  function toColorPart() {
    return this.toPaddedString(2, 16);
  }

  function succ() {
    return this + 1;
  }

  function times(iterator, context) {
    $R(0, this, true).each(iterator, context);
    return this;
  }

  function toPaddedString(length, radix) {
    var string = this.toString(radix || 10);
    return '0'.times(length - string.length) + string;
  }

  function toJSON() {
    return isFinite(this) ? this.toString() : 'null';
  }

  function abs() {
    return Math.abs(this);
  }

  function round() {
    return Math.round(this);
  }

  function ceil() {
    return Math.ceil(this);
  }

  function floor() {
    return Math.floor(this);
  }

  return {
    toColorPart:    toColorPart,
    succ:           succ,
    times:          times,
    toPaddedString: toPaddedString,
    toJSON:         toJSON,
    abs:            abs,
    round:          round,
    ceil:           ceil,
    floor:          floor
  };
})());

function $R(start, end, exclusive) {
  return new ObjectRange(start, end, exclusive);
}

var ObjectRange = Class.create(Enumerable, (function() {
  function initialize(start, end, exclusive) {
    this.start = start;
    this.end = end;
    this.exclusive = exclusive;
  }

  function _each(iterator) {
    var value = this.start;
    while (this.include(value)) {
      iterator(value);
      value = value.succ();
    }
  }

  function include(value) {
    if (value < this.start)
      return false;
    if (this.exclusive)
      return value < this.end;
    return value <= this.end;
  }

  return {
    initialize: initialize,
    _each:      _each,
    include:    include
  };
})());



var Ajax = {
  getTransport: function() {
    return Try.these(
      function() {return new XMLHttpRequest()},
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
    ) || false;
  },

  activeRequestCount: 0
};

Ajax.Responders = {
  responders: [],

  _each: function(iterator) {
    this.responders._each(iterator);
  },

  register: function(responder) {
    if (!this.include(responder))
      this.responders.push(responder);
  },

  unregister: function(responder) {
    this.responders = this.responders.without(responder);
  },

  dispatch: function(callback, request, transport, json) {
    this.each(function(responder) {
      if (Object.isFunction(responder[callback])) {
        try {
          responder[callback].apply(responder, [request, transport, json]);
        } catch (e) { }
      }
    });
  }
};

Object.extend(Ajax.Responders, Enumerable);

Ajax.Responders.register({
  onCreate:   function() {Ajax.activeRequestCount++},
  onComplete: function() {Ajax.activeRequestCount--}
});
Ajax.Base = Class.create({
  initialize: function(options) {
    this.options = {
      method:       'post',
      asynchronous: true,
      contentType:  'application/x-www-form-urlencoded',
      encoding:     'UTF-8',
      parameters:   '',
      evalJSON:     true,
      evalJS:       true
    };
    Object.extend(this.options, options || { });

    this.options.method = this.options.method.toLowerCase();

    if (Object.isString(this.options.parameters))
      this.options.parameters = this.options.parameters.toQueryParams();
    else if (Object.isHash(this.options.parameters))
      this.options.parameters = this.options.parameters.toObject();
  }
});
Ajax.Request = Class.create(Ajax.Base, {
  _complete: false,

  initialize: function($super, url, options) {
    $super(options);
    this.transport = Ajax.getTransport();
    this.request(url);
  },

  request: function(url) {
    this.url = url;
    this.method = this.options.method;
    var params = Object.clone(this.options.parameters);

    if (!['get', 'post'].include(this.method)) {
      params['_method'] = this.method;
      this.method = 'post';
    }

    this.parameters = params;

    if (params = Object.toQueryString(params)) {
      if (this.method == 'get')
        this.url += (this.url.include('?') ? '&' : '?') + params;
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))
        params += '&_=';
    }

    try {
      var response = new Ajax.Response(this);
      if (this.options.onCreate) this.options.onCreate(response);
      Ajax.Responders.dispatch('onCreate', this, response);

      this.transport.open(this.method.toUpperCase(), this.url,
        this.options.asynchronous);

      if (this.options.asynchronous) this.respondToReadyState.bind(this).defer(1);

      this.transport.onreadystatechange = this.onStateChange.bind(this);
      this.setRequestHeaders();

      this.body = this.method == 'post' ? (this.options.postBody || params) : null;
      this.transport.send(this.body);

      /* Force Firefox to handle ready state 4 for synchronous requests */
      if (!this.options.asynchronous && this.transport.overrideMimeType)
        this.onStateChange();

    }
    catch (e) {
      this.dispatchException(e);
    }
  },

  onStateChange: function() {
    var readyState = this.transport.readyState;
    if (readyState > 1 && !((readyState == 4) && this._complete))
      this.respondToReadyState(this.transport.readyState);
  },

  setRequestHeaders: function() {
    var headers = {
      'X-Requested-With': 'XMLHttpRequest',
      'X-Prototype-Version': Prototype.Version,
      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
    };

    if (this.method == 'post') {
      headers['Content-type'] = this.options.contentType +
        (this.options.encoding ? '; charset=' + this.options.encoding : '');

      /* Force "Connection: close" for older Mozilla browsers to work
       * around a bug where XMLHttpRequest sends an incorrect
       * Content-length header. See Mozilla Bugzilla #246651.
       */
      if (this.transport.overrideMimeType &&
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < 2005)
            headers['Connection'] = 'close';
    }

    if (typeof this.options.requestHeaders == 'object') {
      var extras = this.options.requestHeaders;

      if (Object.isFunction(extras.push))
        for (var i = 0, length = extras.length; i < length; i += 2)
          headers[extras[i]] = extras[i+1];
      else
        $H(extras).each(function(pair) {headers[pair.key] = pair.value});
    }

    for (var name in headers)
      this.transport.setRequestHeader(name, headers[name]);
  },

  success: function() {
    var status = this.getStatus();
    return !status || (status >= 200 && status < 300);
  },

  getStatus: function() {
    try {
      return this.transport.status || 0;
    } catch (e) {return 0}
  },

  respondToReadyState: function(readyState) {
    var state = Ajax.Request.Events[readyState], response = new Ajax.Response(this);

    if (state == 'Complete') {
      try {
        this._complete = true;
        (this.options['on' + response.status]
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
         || Prototype.emptyFunction)(response, response.headerJSON);
      } catch (e) {
        this.dispatchException(e);
      }

      var contentType = response.getHeader('Content-type');
      if (this.options.evalJS == 'force'
          || (this.options.evalJS && this.isSameOrigin() && contentType
          && contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i)))
        this.evalResponse();
    }

    try {
      (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);
      Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);
    } catch (e) {
      this.dispatchException(e);
    }

    if (state == 'Complete') {
      this.transport.onreadystatechange = Prototype.emptyFunction;
    }
  },

  isSameOrigin: function() {
    var m = this.url.match(/^\s*https?:\/\/[^\/]*/);
    return !m || (m[0] == '#{protocol}//#{domain}#{port}'.interpolate({
      protocol: location.protocol,
      domain: document.domain,
      port: location.port ? ':' + location.port : ''
    }));
  },

  getHeader: function(name) {
    try {
      return this.transport.getResponseHeader(name) || null;
    } catch (e) {return null;}
  },

  evalResponse: function() {
    try {
      return eval((this.transport.responseText || '').unfilterJSON());
    } catch (e) {
      this.dispatchException(e);
    }
  },

  dispatchException: function(exception) {
    (this.options.onException || Prototype.emptyFunction)(this, exception);
    Ajax.Responders.dispatch('onException', this, exception);
  }
});

Ajax.Request.Events =
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];








Ajax.Response = Class.create({
  initialize: function(request){
    this.request = request;
    var transport  = this.transport  = request.transport,
        readyState = this.readyState = transport.readyState;

    if((readyState > 2 && !Prototype.Browser.IE) || readyState == 4) {
      this.status       = this.getStatus();
      this.statusText   = this.getStatusText();
      this.responseText = String.interpret(transport.responseText);
      this.headerJSON   = this._getHeaderJSON();
    }

    if(readyState == 4) {
      var xml = transport.responseXML;
      this.responseXML  = Object.isUndefined(xml) ? null : xml;
      this.responseJSON = this._getResponseJSON();
    }
  },

  status:      0,

  statusText: '',

  getStatus: Ajax.Request.prototype.getStatus,

  getStatusText: function() {
    try {
      return this.transport.statusText || '';
    } catch (e) {return ''}
  },

  getHeader: Ajax.Request.prototype.getHeader,

  getAllHeaders: function() {
    try {
      return this.getAllResponseHeaders();
    } catch (e) {return null}
  },

  getResponseHeader: function(name) {
    return this.transport.getResponseHeader(name);
  },

  getAllResponseHeaders: function() {
    return this.transport.getAllResponseHeaders();
  },

  _getHeaderJSON: function() {
    var json = this.getHeader('X-JSON');
    if (!json) return null;
    json = decodeURIComponent(escape(json));
    try {
      return json.evalJSON(this.request.options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  },

  _getResponseJSON: function() {
    var options = this.request.options;
    if (!options.evalJSON || (options.evalJSON != 'force' &&
      !(this.getHeader('Content-type') || '').include('application/json')) ||
        this.responseText.blank())
          return null;
    try {
      return this.responseText.evalJSON(options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  }
});

Ajax.Updater = Class.create(Ajax.Request, {
  initialize: function($super, container, url, options) {
    this.container = {
      success: (container.success || container),
      failure: (container.failure || (container.success ? null : container))
    };

    options = Object.clone(options);
    var onComplete = options.onComplete;
    options.onComplete = (function(response, json) {
      this.updateContent(response.responseText);
      if (Object.isFunction(onComplete)) onComplete(response, json);
    }).bind(this);

    $super(url, options);
  },

  updateContent: function(responseText) {
    var receiver = this.container[this.success() ? 'success' : 'failure'],
        options = this.options;

    if (!options.evalScripts) responseText = responseText.stripScripts();

    if (receiver = $(receiver)) {
      if (options.insertion) {
        if (Object.isString(options.insertion)) {
          var insertion = { };nsertion[options.insertion] = responseText;
          receiver.insert(insertion);
        }
        else options.insertion(receiver, responseText);
      }
      else receiver.update(responseText);
    }
  }
});

Ajax.PeriodicalUpdater = Class.create(Ajax.Base, {
  initialize: function($super, container, url, options) {
    $super(options);
    this.onComplete = this.options.onComplete;

    this.frequency = (this.options.frequency || 2);
    this.decay = (this.options.decay || 1);

    this.updater = { };
    this.container = container;
    this.url = url;

    this.start();
  },

  start: function() {
    this.options.onComplete = this.updateComplete.bind(this);
    this.onTimerEvent();
  },

  stop: function() {
    this.updater.options.onComplete = undefined;
    clearTimeout(this.timer);
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
  },

  updateComplete: function(response) {
    if (this.options.decay) {
      this.decay = (response.responseText == this.lastText ?
        this.decay * this.options.decay : 1);

      this.lastText = response.responseText;
    }
    this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency);
  },

  onTimerEvent: function() {
    this.updater = new Ajax.Updater(this.container, this.url, this.options);
  }
});



function $(element) {
  if (arguments.length > 1) {
    for (var i = 0, elements = [], length = arguments.length; i < length; i++)
      elements.push($(arguments[i]));
    return elements;
  }
  if (Object.isString(element))
    element = document.getElementById(element);
  return Element.extend(element);
}

if (Prototype.BrowserFeatures.XPath) {
  document._getElementsByXPath = function(expression, parentElement) {
    var results = [];
    var query = document.evaluate(expression, $(parentElement) || document,
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (var i = 0, length = query.snapshotLength; i < length; i++)
      results.push(Element.extend(query.snapshotItem(i)));
    return results;
  };
}

/*--------------------------------------------------------------------------*/

if (!window.Node) var Node = { };

if (!Node.ELEMENT_NODE) {
  Object.extend(Node, {
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3,
    CDATA_SECTION_NODE: 4,
    ENTITY_REFERENCE_NODE: 5,
    ENTITY_NODE: 6,
    PROCESSING_INSTRUCTION_NODE: 7,
    COMMENT_NODE: 8,
    DOCUMENT_NODE: 9,
    DOCUMENT_TYPE_NODE: 10,
    DOCUMENT_FRAGMENT_NODE: 11,
    NOTATION_NODE: 12
  });
}


(function(global) {

  var SETATTRIBUTE_IGNORES_NAME = (function(){
    var elForm = document.createElement("form");
    var elInput = document.createElement("input");
    var root = document.documentElement;
    elInput.setAttribute("name", "test");
    elForm.appendChild(elInput);
    root.appendChild(elForm);
    var isBuggy = elForm.elements
      ? (typeof elForm.elements.test == "undefined")
      : null;
    root.removeChild(elForm);
    elForm = elInput = null;
    return isBuggy;
  })();

  var element = global.Element;
  global.Element = function(tagName, attributes) {
    attributes = attributes || { };
    tagName = tagName.toLowerCase();
    var cache = Element.cache;
    if (SETATTRIBUTE_IGNORES_NAME && attributes.name) {
      tagName = '<' + tagName + ' name="' + attributes.name + '">';
      delete attributes.name;
      return Element.writeAttribute(document.createElement(tagName), attributes);
    }
    if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));
    return Element.writeAttribute(cache[tagName].cloneNode(false), attributes);
  };
  Object.extend(global.Element, element || { });
  if (element) global.Element.prototype = element.prototype;
})(this);

Element.cache = { };
Element.idCounter = 1;

Element.Methods = {
  visible: function(element) {
    return $(element).style.display != 'none';
  },

  toggle: function(element) {
    element = $(element);
    Element[Element.visible(element) ? 'hide' : 'show'](element);
    return element;
  },


  hide: function(element) {
    element = $(element);
    element.style.display = 'none';
    return element;
  },

  show: function(element) {
    element = $(element);
    element.style.display = '';
    return element;
  },

  remove: function(element) {
    element = $(element);
    element.parentNode.removeChild(element);
    return element;
  },

  update: (function(){

    var SELECT_ELEMENT_INNERHTML_BUGGY = (function(){
      var el = document.createElement("select"),
          isBuggy = true;
      el.innerHTML = "<option value=\"test\">test</option>";
      if (el.options && el.options[0]) {
        isBuggy = el.options[0].nodeName.toUpperCase() !== "OPTION";
      }
      el = null;
      return isBuggy;
    })();

    var TABLE_ELEMENT_INNERHTML_BUGGY = (function(){
      try {
        var el = document.createElement("table");
        if (el && el.tBodies) {
          el.innerHTML = "<tbody><tr><td>test</td></tr></tbody>";
          var isBuggy = typeof el.tBodies[0] == "undefined";
          el = null;
          return isBuggy;
        }
      } catch (e) {
        return true;
      }
    })();

    var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING = (function () {
      var s = document.createElement("script"),
          isBuggy = false;
      try {
        s.appendChild(document.createTextNode(""));
        isBuggy = !s.firstChild ||
          s.firstChild && s.firstChild.nodeType !== 3;
      } catch (e) {
        isBuggy = true;
      }
      s = null;
      return isBuggy;
    })();

    function update(element, content) {
      element = $(element);

      if (content && content.toElement)
        content = content.toElement();

      if (Object.isElement(content))
        return element.update().insert(content);

      content = Object.toHTML(content);

      var tagName = element.tagName.toUpperCase();

      if (tagName === 'SCRIPT' && SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING) {
        element.text = content;
        return element;
      }

      if (SELECT_ELEMENT_INNERHTML_BUGGY || TABLE_ELEMENT_INNERHTML_BUGGY) {
        if (tagName in Element._insertionTranslations.tags) {
          while (element.firstChild) {
            element.removeChild(element.firstChild);
          }
          Element._getContentFromAnonymousElement(tagName, content.stripScripts())
            .each(function(node) {
              element.appendChild(node)
            });
        }
        else {
          element.innerHTML = content.stripScripts();
        }
      }
      else {
        element.innerHTML = content.stripScripts();
      }

      content.evalScripts.bind(content).defer();
      return element;
    }

    return update;
  })(),

  replace: function(element, content) {
    element = $(element);
    if (content && content.toElement) content = content.toElement();
    else if (!Object.isElement(content)) {
      content = Object.toHTML(content);
      var range = element.ownerDocument.createRange();
      range.selectNode(element);
      content.evalScripts.bind(content).defer();
      content = range.createContextualFragment(content.stripScripts());
    }
    element.parentNode.replaceChild(content, element);
    return element;
  },

  insert: function(element, insertions) {
    element = $(element);

    if (Object.isString(insertions) || Object.isNumber(insertions) ||
        Object.isElement(insertions) || (insertions && (insertions.toElement || insertions.toHTML)))
          insertions = {bottom:insertions};

    var content, insert, tagName, childNodes;

    for (var position in insertions) {
      content  = insertions[position];
      position = position.toLowerCase();
      insert = Element._insertionTranslations[position];

      if (content && content.toElement) content = content.toElement();
      if (Object.isElement(content)) {
        insert(element, content);
        continue;
      }

      content = Object.toHTML(content);

      tagName = ((position == 'before' || position == 'after')
        ? element.parentNode : element).tagName.toUpperCase();

      childNodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts());

      if (position == 'top' || position == 'after') childNodes.reverse();
      childNodes.each(insert.curry(element));

      content.evalScripts.bind(content).defer();
    }

    return element;
  },

  wrap: function(element, wrapper, attributes) {
    element = $(element);
    if (Object.isElement(wrapper))
      $(wrapper).writeAttribute(attributes || { });
    else if (Object.isString(wrapper)) wrapper = new Element(wrapper, attributes);
    else wrapper = new Element('div', wrapper);
    if (element.parentNode)
      element.parentNode.replaceChild(wrapper, element);
    wrapper.appendChild(element);
    return wrapper;
  },

  inspect: function(element) {
    element = $(element);
    var result = '<' + element.tagName.toLowerCase();
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
      var property = pair.first(), attribute = pair.last();
      var value = (element[property] || '').toString();
      if (value) result += ' ' + attribute + '=' + value.inspect(true);
    });
    return result + '>';
  },

  recursivelyCollect: function(element, property) {
    element = $(element);
    var elements = [];
    while (element = element[property])
      if (element.nodeType == 1)
        elements.push(Element.extend(element));
    return elements;
  },

  ancestors: function(element) {
    return Element.recursivelyCollect(element, 'parentNode');
  },

  descendants: function(element) {
    return Element.select(element, "*");
  },

  firstDescendant: function(element) {
    element = $(element).firstChild;
    while (element && element.nodeType != 1) element = element.nextSibling;
    return $(element);
  },

  immediateDescendants: function(element) {
    if (!(element = $(element).firstChild)) return [];
    while (element && element.nodeType != 1) element = element.nextSibling;
    if (element) return [element].concat($(element).nextSiblings());
    return [];
  },

  previousSiblings: function(element) {
    return Element.recursivelyCollect(element, 'previousSibling');
  },

  nextSiblings: function(element) {
    return Element.recursivelyCollect(element, 'nextSibling');
  },

  siblings: function(element) {
    element = $(element);
    return Element.previousSiblings(element).reverse()
      .concat(Element.nextSiblings(element));
  },

  match: function(element, selector) {
    if (Object.isString(selector))
      selector = new Selector(selector);
    return selector.match($(element));
  },

  up: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(element.parentNode);
    var ancestors = Element.ancestors(element);
    return Object.isNumber(expression) ? ancestors[expression] :
      Selector.findElement(ancestors, expression, index);
  },

  down: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return Element.firstDescendant(element);
    return Object.isNumber(expression) ? Element.descendants(element)[expression] :
      Element.select(element, expression)[index || 0];
  },

  previous: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(Selector.handlers.previousElementSibling(element));
    var previousSiblings = Element.previousSiblings(element);
    return Object.isNumber(expression) ? previousSiblings[expression] :
      Selector.findElement(previousSiblings, expression, index);
  },

  next: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(Selector.handlers.nextElementSibling(element));
    var nextSiblings = Element.nextSiblings(element);
    return Object.isNumber(expression) ? nextSiblings[expression] :
      Selector.findElement(nextSiblings, expression, index);
  },


  select: function(element) {
    var args = Array.prototype.slice.call(arguments, 1);
    return Selector.findChildElements(element, args);
  },

  adjacent: function(element) {
    var args = Array.prototype.slice.call(arguments, 1);
    return Selector.findChildElements(element.parentNode, args).without(element);
  },

  identify: function(element) {
    element = $(element);
    var id = Element.readAttribute(element, 'id');
    if (id) return id;
    do {id = 'anonymous_element_' + Element.idCounter++} while ($(id));
    Element.writeAttribute(element, 'id', id);
    return id;
  },

  readAttribute: function(element, name) {
    element = $(element);
    if (Prototype.Browser.IE) {
      var t = Element._attributeTranslations.read;
      if (t.values[name]) return t.values[name](element, name);
      if (t.names[name]) name = t.names[name];
      if (name.include(':')) {
        return (!element.attributes || !element.attributes[name]) ? null :
         element.attributes[name].value;
      }
    }
    return element.getAttribute(name);
  },

  writeAttribute: function(element, name, value) {
    element = $(element);
    var attributes = { }, t = Element._attributeTranslations.write;

    if (typeof name == 'object') attributes = name;
    else attributes[name] = Object.isUndefined(value) ? true : value;

    for (var attr in attributes) {
      name = t.names[attr] || attr;
      value = attributes[attr];
      if (t.values[attr]) name = t.values[attr](element, value);
      if (value === false || value === null)
        element.removeAttribute(name);
      else if (value === true)
        element.setAttribute(name, name);
      else element.setAttribute(name, value);
    }
    return element;
  },

  getHeight: function(element) {
    return Element.getDimensions(element).height;
  },

  getWidth: function(element) {
    return Element.getDimensions(element).width;
  },

  classNames: function(element) {
    return new Element.ClassNames(element);
  },

  hasClassName: function(element, className) {
    if (!(element = $(element))) return;
    var elementClassName = element.className;
    return (elementClassName.length > 0 && (elementClassName == className ||
      new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
  },

  addClassName: function(element, className) {
    if (!(element = $(element))) return;
    if (!Element.hasClassName(element, className))
      element.className += (element.className ? ' ' : '') + className;
    return element;
  },

  removeClassName: function(element, className) {
    if (!(element = $(element))) return;
    element.className = element.className.replace(
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();
    return element;
  },

  toggleClassName: function(element, className) {
    if (!(element = $(element))) return;
    return Element[Element.hasClassName(element, className) ?
      'removeClassName' : 'addClassName'](element, className);
  },

  cleanWhitespace: function(element) {
    element = $(element);
    var node = element.firstChild;
    while (node) {
      var nextNode = node.nextSibling;
      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
        element.removeChild(node);
      node = nextNode;
    }
    return element;
  },

  empty: function(element) {
    return $(element).innerHTML.blank();
  },

  descendantOf: function(element, ancestor) {
    element = $(element), ancestor = $(ancestor);

    if (element.compareDocumentPosition)
      return (element.compareDocumentPosition(ancestor) & 8) === 8;

    if (ancestor.contains)
      return ancestor.contains(element) && ancestor !== element;

    while (element = element.parentNode)
      if (element == ancestor) return true;

    return false;
  },

  scrollTo: function(element) {
    element = $(element);
    var pos = Element.cumulativeOffset(element);
    window.scrollTo(pos[0], pos[1]);
    return element;
  },

  getStyle: function(element, style) {
    element = $(element);
    style = style == 'float' ? 'cssFloat' : style.camelize();
    var value = element.style[style];
    if (!value || value == 'auto') {
      var css = document.defaultView.getComputedStyle(element, null);
      value = css ? css[style] : null;
    }
    if (style == 'opacity') return value ? parseFloat(value) : 1.0;
    return value == 'auto' ? null : value;
  },

  getOpacity: function(element) {
    return $(element).getStyle('opacity');
  },

  setStyle: function(element, styles) {
    element = $(element);
    var elementStyle = element.style, match;
    if (Object.isString(styles)) {
      element.style.cssText += ';' + styles;
      return styles.include('opacity') ?
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : element;
    }
    for (var property in styles)
      if (property == 'opacity') element.setOpacity(styles[property]);
      else
        elementStyle[(property == 'float' || property == 'cssFloat') ?
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :
            property] = styles[property];

    return element;
  },

  setOpacity: function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1 || value === '') ? '' :
      (value < 0.00001) ? 0 : value;
    return element;
  },

  getDimensions: function(element) {
    element = $(element);
    var display = Element.getStyle(element, 'display');
    if (display != 'none' && display != null) // Safari bug
      return {width: element.offsetWidth, height: element.offsetHeight};

    var els = element.style;
    var originalVisibility = els.visibility;
    var originalPosition = els.position;
    var originalDisplay = els.display;
    els.visibility = 'hidden';
    if (originalPosition != 'fixed') // Switching fixed to absolute causes issues in Safari
      els.position = 'absolute';
    els.display = 'block';
    var originalWidth = element.clientWidth;
    var originalHeight = element.clientHeight;
    els.display = originalDisplay;
    els.position = originalPosition;
    els.visibility = originalVisibility;
    return {width: originalWidth, height: originalHeight};
  },

  makePositioned: function(element) {
    element = $(element);
    var pos = Element.getStyle(element, 'position');
    if (pos == 'static' || !pos) {
      element._madePositioned = true;
      element.style.position = 'relative';
      if (Prototype.Browser.Opera) {
        element.style.top = 0;
        element.style.left = 0;
      }
    }
    return element;
  },

  undoPositioned: function(element) {
    element = $(element);
    if (element._madePositioned) {
      element._madePositioned = undefined;
      element.style.position =
        element.style.top =
        element.style.left =
        element.style.bottom =
        element.style.right = '';
    }
    return element;
  },

  makeClipping: function(element) {
    element = $(element);
    if (element._overflow) return element;
    element._overflow = Element.getStyle(element, 'overflow') || 'auto';
    if (element._overflow !== 'hidden')
      element.style.overflow = 'hidden';
    return element;
  },

  undoClipping: function(element) {
    element = $(element);
    if (!element._overflow) return element;
    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;
    element._overflow = null;
    return element;
  },

  cumulativeOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  positionedOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
      if (element) {
        if (element.tagName.toUpperCase() == 'BODY') break;
        var p = Element.getStyle(element, 'position');
        if (p !== 'static') break;
      }
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  absolutize: function(element) {
    element = $(element);
    if (Element.getStyle(element, 'position') == 'absolute') return element;

    var offsets = Element.positionedOffset(element);
    var top     = offsets[1];
    var left    = offsets[0];
    var width   = element.clientWidth;
    var height  = element.clientHeight;

    element._originalLeft   = left - parseFloat(element.style.left  || 0);
    element._originalTop    = top  - parseFloat(element.style.top || 0);
    element._originalWidth  = element.style.width;
    element._originalHeight = element.style.height;

    element.style.position = 'absolute';
    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.width  = width + 'px';
    element.style.height = height + 'px';
    return element;
  },

  relativize: function(element) {
    element = $(element);
    if (Element.getStyle(element, 'position') == 'relative') return element;

    element.style.position = 'relative';
    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);
    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);

    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.height = element._originalHeight;
    element.style.width  = element._originalWidth;
    return element;
  },

  cumulativeScrollOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.scrollTop  || 0;
      valueL += element.scrollLeft || 0;
      element = element.parentNode;
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  getOffsetParent: function(element) {
    if (element.offsetParent) return $(element.offsetParent);
    if (element == document.body) return $(element);

    while ((element = element.parentNode) && element != document.body)
      if (Element.getStyle(element, 'position') != 'static')
        return $(element);

    return $(document.body);
  },

  viewportOffset: function(forElement) {
    var valueT = 0, valueL = 0;

    var element = forElement;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;

      if (element.offsetParent == document.body &&
        Element.getStyle(element, 'position') == 'absolute') break;

    } while (element = element.offsetParent);

    element = forElement;
    do {
      if (!Prototype.Browser.Opera || (element.tagName && (element.tagName.toUpperCase() == 'BODY'))) {
        valueT -= element.scrollTop  || 0;
        valueL -= element.scrollLeft || 0;
      }
    } while (element = element.parentNode);

    return Element._returnOffset(valueL, valueT);
  },

  clonePosition: function(element, source) {
    var options = Object.extend({
      setLeft:    true,
      setTop:     true,
      setWidth:   true,
      setHeight:  true,
      offsetTop:  0,
      offsetLeft: 0
    }, arguments[2] || { });

    source = $(source);
    var p = Element.viewportOffset(source);

    element = $(element);
    var delta = [0, 0];
    var parent = null;
    if (Element.getStyle(element, 'position') == 'absolute') {
      parent = Element.getOffsetParent(element);
      delta = Element.viewportOffset(parent);
    }

    if (parent == document.body) {
      delta[0] -= document.body.offsetLeft;
      delta[1] -= document.body.offsetTop;
    }

    if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
    if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
    if (options.setWidth)  element.style.width = source.offsetWidth + 'px';
    if (options.setHeight) element.style.height = source.offsetHeight + 'px';
    return element;
  }
};

Object.extend(Element.Methods, {
  getElementsBySelector: Element.Methods.select,

  childElements: Element.Methods.immediateDescendants
});

Element._attributeTranslations = {
  write: {
    names: {
      className: 'class',
      htmlFor:   'for'
    },
    values: { }
  }
};

if (Prototype.Browser.Opera) {
  Element.Methods.getStyle = Element.Methods.getStyle.wrap(
    function(proceed, element, style) {
      switch (style) {
        case 'left': case 'top': case 'right': case 'bottom':
          if (proceed(element, 'position') === 'static') return null;
        case 'height': case 'width':
          if (!Element.visible(element)) return null;

          var dim = parseInt(proceed(element, style), 10);

          if (dim !== element['offset' + style.capitalize()])
            return dim + 'px';

          var properties;
          if (style === 'height') {
            properties = ['border-top-width', 'padding-top',
             'padding-bottom', 'border-bottom-width'];
          }
          else {
            properties = ['border-left-width', 'padding-left',
             'padding-right', 'border-right-width'];
          }
          return properties.inject(dim, function(memo, property) {
            var val = proceed(element, property);
            return val === null ? memo : memo - parseInt(val, 10);
          }) + 'px';
        default:return proceed(element, style);
      }
    }
  );

  Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(
    function(proceed, element, attribute) {
      if (attribute === 'title') return element.title;
      return proceed(element, attribute);
    }
  );
}

else if (Prototype.Browser.IE) {
  Element.Methods.getOffsetParent = Element.Methods.getOffsetParent.wrap(
    function(proceed, element) {
      element = $(element);
      try {element.offsetParent}
      catch(e) {return $(document.body)}
      var position = element.getStyle('position');
      if (position !== 'static') return proceed(element);
      element.setStyle({position: 'relative'});
      var value = proceed(element);
      element.setStyle({position: position});
      return value;
    }
  );

  $w('positionedOffset viewportOffset').each(function(method) {
    Element.Methods[method] = Element.Methods[method].wrap(
      function(proceed, element) {
        element = $(element);
        try {element.offsetParent}
        catch(e) {return Element._returnOffset(0,0)}
        var position = element.getStyle('position');
        if (position !== 'static') return proceed(element);
        var offsetParent = element.getOffsetParent();
        if (offsetParent && offsetParent.getStyle('position') === 'fixed')
          offsetParent.setStyle({zoom: 1});
        element.setStyle({position: 'relative'});
        var value = proceed(element);
        element.setStyle({position: position});
        return value;
      }
    );
  });

  Element.Methods.cumulativeOffset = Element.Methods.cumulativeOffset.wrap(
    function(proceed, element) {
      try {element.offsetParent}
      catch(e) {return Element._returnOffset(0,0)}
      return proceed(element);
    }
  );

  Element.Methods.getStyle = function(element, style) {
    element = $(element);
    style = (style == 'float' || style == 'cssFloat') ? 'styleFloat' : style.camelize();
    var value = element.style[style];
    if (!value && element.currentStyle) value = element.currentStyle[style];

    if (style == 'opacity') {
      if (value = (element.getStyle('filter') || '').match(/alpha\(opacity=(.*)\)/))
        if (value[1]) return parseFloat(value[1]) / 100;
      return 1.0;
    }

    if (value == 'auto') {
      if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))
        return element['offset' + style.capitalize()] + 'px';
      return null;
    }
    return value;
  };

  Element.Methods.setOpacity = function(element, value) {
    function stripAlpha(filter){
      return filter.replace(/alpha\([^\)]*\)/gi,'');
    }
    element = $(element);
    var currentStyle = element.currentStyle;
    if ((currentStyle && !currentStyle.hasLayout) ||
      (!currentStyle && element.style.zoom == 'normal'))
        element.style.zoom = 1;

    var filter = element.getStyle('filter'), style = element.style;
    if (value == 1 || value === '') {
      (filter = stripAlpha(filter)) ?
        style.filter = filter : style.removeAttribute('filter');
      return element;
    } else if (value < 0.00001) value = 0;
    style.filter = stripAlpha(filter) +
      'alpha(opacity=' + (value * 100) + ')';
    return element;
  };

  Element._attributeTranslations = (function(){

    var classProp = 'className';
    var forProp = 'for';

    var el = document.createElement('div');

    el.setAttribute(classProp, 'x');

    if (el.className !== 'x') {
      el.setAttribute('class', 'x');
      if (el.className === 'x') {
        classProp = 'class';
      }
    }
    el = null;

    el = document.createElement('label');
    el.setAttribute(forProp, 'x');
    if (el.htmlFor !== 'x') {
      el.setAttribute('htmlFor', 'x');
      if (el.htmlFor === 'x') {
        forProp = 'htmlFor';
      }
    }
    el = null;

    return {
      read: {
        names: {
          'class':      classProp,
          'className':  classProp,
          'for':        forProp,
          'htmlFor':    forProp
        },
        values: {
          _getAttr: function(element, attribute) {
            return element.getAttribute(attribute);
          },
          _getAttr2: function(element, attribute) {
            return element.getAttribute(attribute, 2);
          },
          _getAttrNode: function(element, attribute) {
            var node = element.getAttributeNode(attribute);
            return node ? node.value : "";
          },
          _getEv: (function(){

            var el = document.createElement('div');
            el.onclick = Prototype.emptyFunction;
            var value = el.getAttribute('onclick');
            var f;

            if (String(value).indexOf('{') > -1) {
              f = function(element, attribute) {
                attribute = element.getAttribute(attribute);
                if (!attribute) return null;
                attribute = attribute.toString();
                attribute = attribute.split('{')[1];
                attribute = attribute.split('}')[0];
                return attribute.strip();
              };
            }
            else if (value === '') {
              f = function(element, attribute) {
                attribute = element.getAttribute(attribute);
                if (!attribute) return null;
                return attribute.strip();
              };
            }
            el = null;
            return f;
          })(),
          _flag: function(element, attribute) {
            return $(element).hasAttribute(attribute) ? attribute : null;
          },
          style: function(element) {
            return element.style.cssText.toLowerCase();
          },
          title: function(element) {
            return element.title;
          }
        }
      }
    }
  })();

  Element._attributeTranslations.write = {
    names: Object.extend({
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing'
    }, Element._attributeTranslations.read.names),
    values: {
      checked: function(element, value) {
        element.checked = !!value;
      },

      style: function(element, value) {
        element.style.cssText = value ? value : '';
      }
    }
  };

  Element._attributeTranslations.has = {};

  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +
      'encType maxLength readOnly longDesc frameBorder').each(function(attr) {
    Element._attributeTranslations.write.names[attr.toLowerCase()] = attr;
    Element._attributeTranslations.has[attr.toLowerCase()] = attr;
  });

  (function(v) {
    Object.extend(v, {
      href:        v._getAttr2,
      src:         v._getAttr2,
      type:        v._getAttr,
      action:      v._getAttrNode,
      disabled:    v._flag,
      checked:     v._flag,
      readonly:    v._flag,
      multiple:    v._flag,
      onload:      v._getEv,
      onunload:    v._getEv,
      onclick:     v._getEv,
      ondblclick:  v._getEv,
      onmousedown: v._getEv,
      onmouseup:   v._getEv,
      onmouseover: v._getEv,
      onmousemove: v._getEv,
      onmouseout:  v._getEv,
      onfocus:     v._getEv,
      onblur:      v._getEv,
      onkeypress:  v._getEv,
      onkeydown:   v._getEv,
      onkeyup:     v._getEv,
      onsubmit:    v._getEv,
      onreset:     v._getEv,
      onselect:    v._getEv,
      onchange:    v._getEv
    });
  })(Element._attributeTranslations.read.values);

  if (Prototype.BrowserFeatures.ElementExtensions) {
    (function() {
      function _descendants(element) {
        var nodes = element.getElementsByTagName('*'), results = [];
        for (var i = 0, node; node = nodes[i]; i++)
          if (node.tagName !== "!") // Filter out comment nodes.
            results.push(node);
        return results;
      }

      Element.Methods.down = function(element, expression, index) {
        element = $(element);
        if (arguments.length == 1) return element.firstDescendant();
        return Object.isNumber(expression) ? _descendants(element)[expression] :
          Element.select(element, expression)[index || 0];
      }
    })();
  }

}

else if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent)) {
  Element.Methods.setOpacity = function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1) ? 0.999999 :
      (value === '') ? '' : (value < 0.00001) ? 0 : value;
    return element;
  };
}

else if (Prototype.Browser.WebKit) {
  Element.Methods.setOpacity = function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1 || value === '') ? '' :
      (value < 0.00001) ? 0 : value;

    if (value == 1)
      if(element.tagName.toUpperCase() == 'IMG' && element.width) {
        element.width++;element.width--;
      } else try {
        var n = document.createTextNode(' ');
        element.appendChild(n);
        element.removeChild(n);
      } catch (e) { }

    return element;
  };

  Element.Methods.cumulativeOffset = function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      if (element.offsetParent == document.body)
        if (Element.getStyle(element, 'position') == 'absolute') break;

      element = element.offsetParent;
    } while (element);

    return Element._returnOffset(valueL, valueT);
  };
}

if ('outerHTML' in document.documentElement) {
  Element.Methods.replace = function(element, content) {
    element = $(element);

    if (content && content.toElement) content = content.toElement();
    if (Object.isElement(content)) {
      element.parentNode.replaceChild(content, element);
      return element;
    }

    content = Object.toHTML(content);
    var parent = element.parentNode, tagName = parent.tagName.toUpperCase();

    if (Element._insertionTranslations.tags[tagName]) {
      var nextSibling = element.next();
      var fragments = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
      parent.removeChild(element);
      if (nextSibling)
        fragments.each(function(node) {parent.insertBefore(node, nextSibling)});
      else
        fragments.each(function(node) {parent.appendChild(node)});
    }
    else element.outerHTML = content.stripScripts();

    content.evalScripts.bind(content).defer();
    return element;
  };
}

Element._returnOffset = function(l, t) {
  var result = [l, t];
  result.left = l;
  result.top = t;
  return result;
};

Element._getContentFromAnonymousElement = function(tagName, html) {
  var div = new Element('div'), t = Element._insertionTranslations.tags[tagName];
  if (t) {
    div.innerHTML = t[0] + html + t[1];
    t[2].times(function() {div = div.firstChild});
  } else div.innerHTML = html;
  return $A(div.childNodes);
};

Element._insertionTranslations = {
  before: function(element, node) {
    element.parentNode.insertBefore(node, element);
  },
  top: function(element, node) {
    element.insertBefore(node, element.firstChild);
  },
  bottom: function(element, node) {
    element.appendChild(node);
  },
  after: function(element, node) {
    element.parentNode.insertBefore(node, element.nextSibling);
  },
  tags: {
    TABLE:  ['<table>',                '</table>',                   1],
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],
    SELECT: ['<select>',               '</select>',                  1]
  }
};

(function() {
  var tags = Element._insertionTranslations.tags;
  Object.extend(tags, {
    THEAD: tags.TBODY,
    TFOOT: tags.TBODY,
    TH:    tags.TD
  });
})();

Element.Methods.Simulated = {
  hasAttribute: function(element, attribute) {
    attribute = Element._attributeTranslations.has[attribute] || attribute;
    var node = $(element).getAttributeNode(attribute);
    return !!(node && node.specified);
  }
};

Element.Methods.ByTag = { };

Object.extend(Element, Element.Methods);

(function(div) {

  if (!Prototype.BrowserFeatures.ElementExtensions && div['__proto__']) {
    window.HTMLElement = { };
    window.HTMLElement.prototype = div['__proto__'];
    Prototype.BrowserFeatures.ElementExtensions = true;
  }

  div = null;

})(document.createElement('div'))

Element.extend = (function() {

  function checkDeficiency(tagName) {
    if (typeof window.Element != 'undefined') {
      var proto = window.Element.prototype;
      if (proto) {
        var id = '_' + (Math.random()+'').slice(2);
        var el = document.createElement(tagName);
        proto[id] = 'x';
        var isBuggy = (el[id] !== 'x');
        delete proto[id];
        el = null;
        return isBuggy;
      }
    }
    return false;
  }

  function extendElementWith(element, methods) {
    for (var property in methods) {
      var value = methods[property];
      if (Object.isFunction(value) && !(property in element))
        element[property] = value.methodize();
    }
  }

  var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY = checkDeficiency('object');

  if (Prototype.BrowserFeatures.SpecificElementExtensions) {
    if (HTMLOBJECTELEMENT_PROTOTYPE_BUGGY) {
      return function(element) {
        if (element && typeof element._extendedByPrototype == 'undefined') {
          var t = element.tagName;
          if (t && (/^(?:object|applet|embed)$/i.test(t))) {
            extendElementWith(element, Element.Methods);
            extendElementWith(element, Element.Methods.Simulated);
            extendElementWith(element, Element.Methods.ByTag[t.toUpperCase()]);
          }
        }
        return element;
      }
    }
    return Prototype.K;
  }

  var Methods = { }, ByTag = Element.Methods.ByTag;

  var extend = Object.extend(function(element) {
    if (!element || typeof element._extendedByPrototype != 'undefined' ||
        element.nodeType != 1 || element == window) return element;

    var methods = Object.clone(Methods),
        tagName = element.tagName.toUpperCase();

    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);

    extendElementWith(element, methods);

    element._extendedByPrototype = Prototype.emptyFunction;
    return element;

  }, {
    refresh: function() {
      if (!Prototype.BrowserFeatures.ElementExtensions) {
        Object.extend(Methods, Element.Methods);
        Object.extend(Methods, Element.Methods.Simulated);
      }
    }
  });

  extend.refresh();
  return extend;
})();

Element.hasAttribute = function(element, attribute) {
  if (element.hasAttribute) return element.hasAttribute(attribute);
  return Element.Methods.Simulated.hasAttribute(element, attribute);
};

Element.addMethods = function(methods) {
  var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;

  if (!methods) {
    Object.extend(Form, Form.Methods);
    Object.extend(Form.Element, Form.Element.Methods);
    Object.extend(Element.Methods.ByTag, {
      "FORM":     Object.clone(Form.Methods),
      "INPUT":    Object.clone(Form.Element.Methods),
      "SELECT":   Object.clone(Form.Element.Methods),
      "TEXTAREA": Object.clone(Form.Element.Methods)
    });
  }

  if (arguments.length == 2) {
    var tagName = methods;
    methods = arguments[1];
  }

  if (!tagName) Object.extend(Element.Methods, methods || { });
  else {
    if (Object.isArray(tagName)) tagName.each(extend);
    else extend(tagName);
  }

  function extend(tagName) {
    tagName = tagName.toUpperCase();
    if (!Element.Methods.ByTag[tagName])
      Element.Methods.ByTag[tagName] = { };
    Object.extend(Element.Methods.ByTag[tagName], methods);
  }

  function copy(methods, destination, onlyIfAbsent) {
    onlyIfAbsent = onlyIfAbsent || false;
    for (var property in methods) {
      var value = methods[property];
      if (!Object.isFunction(value)) continue;
      if (!onlyIfAbsent || !(property in destination))
        destination[property] = value.methodize();
    }
  }

  function findDOMClass(tagName) {
    var klass;
    var trans = {
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList",
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading",
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR":
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":
      "FrameSet", "IFRAME": "IFrame"
    };
    if (trans[tagName]) klass = 'HTML' + trans[tagName] + 'Element';
    if (window[klass]) return window[klass];
    klass = 'HTML' + tagName + 'Element';
    if (window[klass]) return window[klass];
    klass = 'HTML' + tagName.capitalize() + 'Element';
    if (window[klass]) return window[klass];

    var element = document.createElement(tagName);
    var proto = element['__proto__'] || element.constructor.prototype;
    element = null;
    return proto;
  }

  var elementPrototype = window.HTMLElement ? HTMLElement.prototype :
   Element.prototype;

  if (F.ElementExtensions) {
    copy(Element.Methods, elementPrototype);
    copy(Element.Methods.Simulated, elementPrototype, true);
  }

  if (F.SpecificElementExtensions) {
    for (var tag in Element.Methods.ByTag) {
      var klass = findDOMClass(tag);
      if (Object.isUndefined(klass)) continue;
      copy(T[tag], klass.prototype);
    }
  }

  Object.extend(Element, Element.Methods);
  delete Element.ByTag;

  if (Element.extend.refresh) Element.extend.refresh();
  Element.cache = { };
};


document.viewport = {

  getDimensions: function() {
    return {width: this.getWidth(), height: this.getHeight()};
  },

  getScrollOffsets: function() {
    return Element._returnOffset(
      window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
      window.pageYOffset || document.documentElement.scrollTop  || document.body.scrollTop);
  }
};

(function(viewport) {
  var B = Prototype.Browser, doc = document, element, property = {};

  function getRootElement() {
    if (B.WebKit && !doc.evaluate)
      return document;

    if (B.Opera && window.parseFloat(window.opera.version()) < 9.5)
      return document.body;

    return document.documentElement;
  }

  function define(D) {
    if (!element) element = getRootElement();

    property[D] = 'client' + D;

    viewport['get' + D] = function() {return element[property[D]]};
    return viewport['get' + D]();
  }

  viewport.getWidth  = define.curry('Width');

  viewport.getHeight = define.curry('Height');
})(document.viewport);


Element.Storage = {
  UID: 1
};

Element.addMethods({
  getStorage: function(element) {
    if (!(element = $(element))) return;

    var uid;
    if (element === window) {
      uid = 0;
    } else {
      if (typeof element._prototypeUID === "undefined")
        element._prototypeUID = [Element.Storage.UID++];
      uid = element._prototypeUID[0];
    }

    if (!Element.Storage[uid])
      Element.Storage[uid] = $H();

    return Element.Storage[uid];
  },

  store: function(element, key, value) {
    if (!(element = $(element))) return;

    if (arguments.length === 2) {
      Element.getStorage(element).update(key);
    } else {
      Element.getStorage(element).set(key, value);
    }

    return element;
  },

  retrieve: function(element, key, defaultValue) {
    if (!(element = $(element))) return;
    var hash = Element.getStorage(element), value = hash.get(key);

    if (Object.isUndefined(value)) {
      hash.set(key, defaultValue);
      value = defaultValue;
    }

    return value;
  },

  clone: function(element, deep) {
    if (!(element = $(element))) return;
    var clone = element.cloneNode(deep);
    clone._prototypeUID = void 0;
    if (deep) {
      var descendants = Element.select(clone, '*'),
          i = descendants.length;
      while (i--) {
        descendants[i]._prototypeUID = void 0;
      }
    }
    return Element.extend(clone);
  }
});
/* Portions of the Selector class are derived from Jack Slocum's DomQuery,
 * part of YUI-Ext version 0.40, distributed under the terms of an MIT-style
 * license.  Please see http://www.yui-ext.com/ for more information. */

var Selector = Class.create({
  initialize: function(expression) {
    this.expression = expression.strip();

    if (this.shouldUseSelectorsAPI()) {
      this.mode = 'selectorsAPI';
    } else if (this.shouldUseXPath()) {
      this.mode = 'xpath';
      this.compileXPathMatcher();
    } else {
      this.mode = "normal";
      this.compileMatcher();
    }

  },

  shouldUseXPath: (function() {

    var IS_DESCENDANT_SELECTOR_BUGGY = (function(){
      var isBuggy = false;
      if (document.evaluate && window.XPathResult) {
        var el = document.createElement('div');
        el.innerHTML = '<ul><li></li></ul><div><ul><li></li></ul></div>';

        var xpath = ".//*[local-name()='ul' or local-name()='UL']" +
          "//*[local-name()='li' or local-name()='LI']";

        var result = document.evaluate(xpath, el, null,
          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);

        isBuggy = (result.snapshotLength !== 2);
        el = null;
      }
      return isBuggy;
    })();

    return function() {
      if (!Prototype.BrowserFeatures.XPath) return false;

      var e = this.expression;

      if (Prototype.Browser.WebKit &&
       (e.include("-of-type") || e.include(":empty")))
        return false;

      if ((/(\[[\w-]*?:|:checked)/).test(e))
        return false;

      if (IS_DESCENDANT_SELECTOR_BUGGY) return false;

      return true;
    }

  })(),

  shouldUseSelectorsAPI: function() {
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;

    if (Selector.CASE_INSENSITIVE_CLASS_NAMES) return false;

    if (!Selector._div) Selector._div = new Element('div');

    try {
      Selector._div.querySelector(this.expression);
    } catch(e) {
      return false;
    }

    return true;
  },

  compileMatcher: function() {
    var e = this.expression, ps = Selector.patterns, h = Selector.handlers,
        c = Selector.criteria, le, p, m, len = ps.length, name;

    if (Selector._cache[e]) {
      this.matcher = Selector._cache[e];
      return;
    }

    this.matcher = ["this.matcher = function(root) {",
                    "var r = root, h = Selector.handlers, c = false, n;"];

    while (e && le != e && (/\S/).test(e)) {
      le = e;
      for (var i = 0; i<len; i++) {
        p = ps[i].re;
        name = ps[i].name;
        if (m = e.match(p)) {
          this.matcher.push(Object.isFunction(c[name]) ? c[name](m) :
            new Template(c[name]).evaluate(m));
          e = e.replace(m[0], '');
          break;
        }
      }
    }

    this.matcher.push("return h.unique(n);\n}");
    eval(this.matcher.join('\n'));
    Selector._cache[this.expression] = this.matcher;
  },

  compileXPathMatcher: function() {
    var e = this.expression, ps = Selector.patterns,
        x = Selector.xpath, le, m, len = ps.length, name;

    if (Selector._cache[e]) {
      this.xpath = Selector._cache[e];return;
    }

    this.matcher = ['.//*'];
    while (e && le != e && (/\S/).test(e)) {
      le = e;
      for (var i = 0; i<len; i++) {
        name = ps[i].name;
        if (m = e.match(ps[i].re)) {
          this.matcher.push(Object.isFunction(x[name]) ? x[name](m) :
            new Template(x[name]).evaluate(m));
          e = e.replace(m[0], '');
          break;
        }
      }
    }

    this.xpath = this.matcher.join('');
    Selector._cache[this.expression] = this.xpath;
  },

  findElements: function(root) {
    root = root || document;
    var e = this.expression, results;

    switch (this.mode) {
      case 'selectorsAPI':
        if (root !== document) {
          var oldId = root.id, id = $(root).identify();
          id = id.replace(/([\.:])/g, "\\$1");
          e = "#" + id + " " + e;
        }

        results = $A(root.querySelectorAll(e)).map(Element.extend);
        root.id = oldId;

        return results;
      case 'xpath':
        return document._getElementsByXPath(this.xpath, root);
      default:
       return this.matcher(root);
    }
  },

  match: function(element) {
    this.tokens = [];

    var e = this.expression, ps = Selector.patterns, as = Selector.assertions;
    var le, p, m, len = ps.length, name;

    while (e && le !== e && (/\S/).test(e)) {
      le = e;
      for (var i = 0; i<len; i++) {
        p = ps[i].re;
        name = ps[i].name;
        if (m = e.match(p)) {
          if (as[name]) {
            this.tokens.push([name, Object.clone(m)]);
            e = e.replace(m[0], '');
          } else {
            return this.findElements(document).include(element);
          }
        }
      }
    }

    var match = true, name, matches;
    for (var i = 0, token; token = this.tokens[i]; i++) {
      name = token[0], matches = token[1];
      if (!Selector.assertions[name](element, matches)) {
        match = false;break;
      }
    }

    return match;
  },

  toString: function() {
    return this.expression;
  },

  inspect: function() {
    return "#<Selector:" + this.expression.inspect() + ">";
  }
});

if (Prototype.BrowserFeatures.SelectorsAPI &&
 document.compatMode === 'BackCompat') {
  Selector.CASE_INSENSITIVE_CLASS_NAMES = (function(){
    var div = document.createElement('div'),
     span = document.createElement('span');

    div.id = "prototype_test_id";
    span.className = 'Test';
    div.appendChild(span);
    var isIgnored = (div.querySelector('#prototype_test_id .test') !== null);
    div = span = null;
    return isIgnored;
  })();
}

Object.extend(Selector, {
  _cache: { },

  xpath: {
    descendant:   "//*",
    child:        "/*",
    adjacent:     "/following-sibling::*[1]",
    laterSibling: '/following-sibling::*',
    tagName:      function(m) {
      if (m[1] == '*') return '';
      return "[local-name()='" + m[1].toLowerCase() +
             "' or local-name()='" + m[1].toUpperCase() + "']";
    },
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",
    id:           "[@id='#{1}']",
    attrPresence: function(m) {
      m[1] = m[1].toLowerCase();
      return new Template("[@#{1}]").evaluate(m);
    },
    attr: function(m) {
      m[1] = m[1].toLowerCase();
      m[3] = m[5] || m[6];
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);
    },
    pseudo: function(m) {
      var h = Selector.xpath.pseudos[m[1]];
      if (!h) return '';
      if (Object.isFunction(h)) return h(m);
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);
    },
    operators: {
      '=':  "[@#{1}='#{3}']",
      '!=': "[@#{1}!='#{3}']",
      '^=': "[starts-with(@#{1}, '#{3}')]",
      '$=': "[substring(@#{1}, (string-length(@#{1}) - string-length('#{3}') + 1))='#{3}']",
      '*=': "[contains(@#{1}, '#{3}')]",
      '~=': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",
      '|=': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"
    },
    pseudos: {
      'first-child': '[not(preceding-sibling::*)]',
      'last-child':  '[not(following-sibling::*)]',
      'only-child':  '[not(preceding-sibling::* or following-sibling::*)]',
      'empty':       "[count(*) = 0 and (count(text()) = 0)]",
      'checked':     "[@checked]",
      'disabled':    "[(@disabled) and (@type!='hidden')]",
      'enabled':     "[not(@disabled) and (@type!='hidden')]",
      'not': function(m) {
        var e = m[6], p = Selector.patterns,
            x = Selector.xpath, le, v, len = p.length, name;

        var exclusion = [];
        while (e && le != e && (/\S/).test(e)) {
          le = e;
          for (var i = 0; i<len; i++) {
            name = p[i].name
            if (m = e.match(p[i].re)) {
              v = Object.isFunction(x[name]) ? x[name](m) : new Template(x[name]).evaluate(m);
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");
              e = e.replace(m[0], '');
              break;
            }
          }
        }
        return "[not(" + exclusion.join(" and ") + ")]";
      },
      'nth-child':      function(m) {
        return Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);
      },
      'nth-last-child': function(m) {
        return Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);
      },
      'nth-of-type':    function(m) {
        return Selector.xpath.pseudos.nth("position() ", m);
      },
      'nth-last-of-type': function(m) {
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", m);
      },
      'first-of-type':  function(m) {
        m[6] = "1";return Selector.xpath.pseudos['nth-of-type'](m);
      },
      'last-of-type':   function(m) {
        m[6] = "1";return Selector.xpath.pseudos['nth-last-of-type'](m);
      },
      'only-of-type':   function(m) {
        var p = Selector.xpath.pseudos;return p['first-of-type'](m) + p['last-of-type'](m);
      },
      nth: function(fragment, m) {
        var mm, formula = m[6], predicate;
        if (formula == 'even') formula = '2n+0';
        if (formula == 'odd')  formula = '2n+1';
        if (mm = formula.match(/^(\d+)$/)) // digit only
          return '[' + fragment + "= " + mm[1] + ']';
        if (mm = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
          if (mm[1] == "-") mm[1] = -1;
          var a = mm[1] ? Number(mm[1]) : 1;
          var b = mm[2] ? Number(mm[2]) : 0;
          predicate = "[((#{fragment} - #{b}) mod #{a} = 0) and " +
          "((#{fragment} - #{b}) div #{a} >= 0)]";
          return new Template(predicate).evaluate({
            fragment: fragment, a: a, b: b});
        }
      }
    }
  },

  criteria: {
    tagName:      'n = h.tagName(n, r, "#{1}", c);      c = false;',
    className:    'n = h.className(n, r, "#{1}", c);    c = false;',
    id:           'n = h.id(n, r, "#{1}", c);           c = false;',
    attrPresence: 'n = h.attrPresence(n, r, "#{1}", c); c = false;',
    attr: function(m) {
      m[3] = (m[5] || m[6]);
      return new Template('n = h.attr(n, r, "#{1}", "#{3}", "#{2}", c); c = false;').evaluate(m);
    },
    pseudo: function(m) {
      if (m[6]) m[6] = m[6].replace(/"/g, '\\"');
      return new Template('n = h.pseudo(n, "#{1}", "#{6}", r, c); c = false;').evaluate(m);
    },
    descendant:   'c = "descendant";',
    child:        'c = "child";',
    adjacent:     'c = "adjacent";',
    laterSibling: 'c = "laterSibling";'
  },

  patterns: [
    {name: 'laterSibling', re: /^\s*~\s*/},
    {name: 'child',        re: /^\s*>\s*/},
    {name: 'adjacent',     re: /^\s*\+\s*/},
    {name: 'descendant',   re: /^\s/},

    {name: 'tagName',      re: /^\s*(\*|[\w\-]+)(\b|$)?/},
    {name: 'id',           re: /^#([\w\-\*]+)(\b|$)/},
    {name: 'className',    re: /^\.([\w\-\*]+)(\b|$)/},
    {name: 'pseudo',       re: /^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)abled|not)(\((.*?)\))?(\b|$|(?=\s|[:+~>]))/},
    {name: 'attrPresence', re: /^\[((?:[\w-]+:)?[\w-]+)\]/},
    {name: 'attr',         re: /\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=)\s*((['"])([^\4]*?)\4|([^'"][^\]]*?)))?\]/}
  ],

  assertions: {
    tagName: function(element, matches) {
      return matches[1].toUpperCase() == element.tagName.toUpperCase();
    },

    className: function(element, matches) {
      return Element.hasClassName(element, matches[1]);
    },

    id: function(element, matches) {
      return element.id === matches[1];
    },

    attrPresence: function(element, matches) {
      return Element.hasAttribute(element, matches[1]);
    },

    attr: function(element, matches) {
      var nodeValue = Element.readAttribute(element, matches[1]);
      return nodeValue && Selector.operators[matches[2]](nodeValue, matches[5] || matches[6]);
    }
  },

  handlers: {
    concat: function(a, b) {
      for (var i = 0, node; node = b[i]; i++)
        a.push(node);
      return a;
    },

    mark: function(nodes) {
      var _true = Prototype.emptyFunction;
      for (var i = 0, node; node = nodes[i]; i++)
        node._countedByPrototype = _true;
      return nodes;
    },

    unmark: (function(){

      var PROPERTIES_ATTRIBUTES_MAP = (function(){
        var el = document.createElement('div'),
            isBuggy = false,
            propName = '_countedByPrototype',
            value = 'x'
        el[propName] = value;
        isBuggy = (el.getAttribute(propName) === value);
        el = null;
        return isBuggy;
      })();

      return PROPERTIES_ATTRIBUTES_MAP ?
        function(nodes) {
          for (var i = 0, node; node = nodes[i]; i++)
            node.removeAttribute('_countedByPrototype');
          return nodes;
        } :
        function(nodes) {
          for (var i = 0, node; node = nodes[i]; i++)
            node._countedByPrototype = void 0;
          return nodes;
        }
    })(),

    index: function(parentNode, reverse, ofType) {
      parentNode._countedByPrototype = Prototype.emptyFunction;
      if (reverse) {
        for (var nodes = parentNode.childNodes, i = nodes.length - 1, j = 1; i >= 0; i--) {
          var node = nodes[i];
          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
        }
      } else {
        for (var i = 0, j = 1, nodes = parentNode.childNodes; node = nodes[i]; i++)
          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
      }
    },

    unique: function(nodes) {
      if (nodes.length == 0) return nodes;
      var results = [], n;
      for (var i = 0, l = nodes.length; i < l; i++)
        if (typeof (n = nodes[i])._countedByPrototype == 'undefined') {
          n._countedByPrototype = Prototype.emptyFunction;
          results.push(Element.extend(n));
        }
      return Selector.handlers.unmark(results);
    },

    descendant: function(nodes) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        h.concat(results, node.getElementsByTagName('*'));
      return results;
    },

    child: function(nodes) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        for (var j = 0, child; child = node.childNodes[j]; j++)
          if (child.nodeType == 1 && child.tagName != '!') results.push(child);
      }
      return results;
    },

    adjacent: function(nodes) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        var next = this.nextElementSibling(node);
        if (next) results.push(next);
      }
      return results;
    },

    laterSibling: function(nodes) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        h.concat(results, Element.nextSiblings(node));
      return results;
    },

    nextElementSibling: function(node) {
      while (node = node.nextSibling)
        if (node.nodeType == 1) return node;
      return null;
    },

    previousElementSibling: function(node) {
      while (node = node.previousSibling)
        if (node.nodeType == 1) return node;
      return null;
    },

    tagName: function(nodes, root, tagName, combinator) {
      var uTagName = tagName.toUpperCase();
      var results = [], h = Selector.handlers;
      if (nodes) {
        if (combinator) {
          if (combinator == "descendant") {
            for (var i = 0, node; node = nodes[i]; i++)
              h.concat(results, node.getElementsByTagName(tagName));
            return results;
          } else nodes = this[combinator](nodes);
          if (tagName == "*") return nodes;
        }
        for (var i = 0, node; node = nodes[i]; i++)
          if (node.tagName.toUpperCase() === uTagName) results.push(node);
        return results;
      } else return root.getElementsByTagName(tagName);
    },

    id: function(nodes, root, id, combinator) {
      var targetNode = $(id), h = Selector.handlers;

      if (root == document) {
        if (!targetNode) return [];
        if (!nodes) return [targetNode];
      } else {
        if (!root.sourceIndex || root.sourceIndex < 1) {
          var nodes = root.getElementsByTagName('*');
          for (var j = 0, node; node = nodes[j]; j++) {
            if (node.id === id) return [node];
          }
        }
      }

      if (nodes) {
        if (combinator) {
          if (combinator == 'child') {
            for (var i = 0, node; node = nodes[i]; i++)
              if (targetNode.parentNode == node) return [targetNode];
          } else if (combinator == 'descendant') {
            for (var i = 0, node; node = nodes[i]; i++)
              if (Element.descendantOf(targetNode, node)) return [targetNode];
          } else if (combinator == 'adjacent') {
            for (var i = 0, node; node = nodes[i]; i++)
              if (Selector.handlers.previousElementSibling(targetNode) == node)
                return [targetNode];
          } else nodes = h[combinator](nodes);
        }
        for (var i = 0, node; node = nodes[i]; i++)
          if (node == targetNode) return [targetNode];
        return [];
      }
      return (targetNode && Element.descendantOf(targetNode, root)) ? [targetNode] : [];
    },

    className: function(nodes, root, className, combinator) {
      if (nodes && combinator) nodes = this[combinator](nodes);
      return Selector.handlers.byClassName(nodes, root, className);
    },

    byClassName: function(nodes, root, className) {
      if (!nodes) nodes = Selector.handlers.descendant([root]);
      var needle = ' ' + className + ' ';
      for (var i = 0, results = [], node, nodeClassName; node = nodes[i]; i++) {
        nodeClassName = node.className;
        if (nodeClassName.length == 0) continue;
        if (nodeClassName == className || (' ' + nodeClassName + ' ').include(needle))
          results.push(node);
      }
      return results;
    },

    attrPresence: function(nodes, root, attr, combinator) {
      if (!nodes) nodes = root.getElementsByTagName("*");
      if (nodes && combinator) nodes = this[combinator](nodes);
      var results = [];
      for (var i = 0, node; node = nodes[i]; i++)
        if (Element.hasAttribute(node, attr)) results.push(node);
      return results;
    },

    attr: function(nodes, root, attr, value, operator, combinator) {
      if (!nodes) nodes = root.getElementsByTagName("*");
      if (nodes && combinator) nodes = this[combinator](nodes);
      var handler = Selector.operators[operator], results = [];
      for (var i = 0, node; node = nodes[i]; i++) {
        var nodeValue = Element.readAttribute(node, attr);
        if (nodeValue === null) continue;
        if (handler(nodeValue, value)) results.push(node);
      }
      return results;
    },

    pseudo: function(nodes, name, value, root, combinator) {
      if (nodes && combinator) nodes = this[combinator](nodes);
      if (!nodes) nodes = root.getElementsByTagName("*");
      return Selector.pseudos[name](nodes, value, root);
    }
  },

  pseudos: {
    'first-child': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        if (Selector.handlers.previousElementSibling(node)) continue;
          results.push(node);
      }
      return results;
    },
    'last-child': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        if (Selector.handlers.nextElementSibling(node)) continue;
          results.push(node);
      }
      return results;
    },
    'only-child': function(nodes, value, root) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (!h.previousElementSibling(node) && !h.nextElementSibling(node))
          results.push(node);
      return results;
    },
    'nth-child':        function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root);
    },
    'nth-last-child':   function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, true);
    },
    'nth-of-type':      function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, false, true);
    },
    'nth-last-of-type': function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, true, true);
    },
    'first-of-type':    function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, "1", root, false, true);
    },
    'last-of-type':     function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, "1", root, true, true);
    },
    'only-of-type':     function(nodes, formula, root) {
      var p = Selector.pseudos;
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), formula, root);
    },

    getIndices: function(a, b, total) {
      if (a == 0) return b > 0 ? [b] : [];
      return $R(1, total).inject([], function(memo, i) {
        if (0 == (i - b) % a && (i - b) / a >= 0) memo.push(i);
        return memo;
      });
    },

    nth: function(nodes, formula, root, reverse, ofType) {
      if (nodes.length == 0) return [];
      if (formula == 'even') formula = '2n+0';
      if (formula == 'odd')  formula = '2n+1';
      var h = Selector.handlers, results = [], indexed = [], m;
      h.mark(nodes);
      for (var i = 0, node; node = nodes[i]; i++) {
        if (!node.parentNode._countedByPrototype) {
          h.index(node.parentNode, reverse, ofType);
          indexed.push(node.parentNode);
        }
      }
      if (formula.match(/^\d+$/)) { // just a number
        formula = Number(formula);
        for (var i = 0, node; node = nodes[i]; i++)
          if (node.nodeIndex == formula) results.push(node);
      } else if (m = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
        if (m[1] == "-") m[1] = -1;
        var a = m[1] ? Number(m[1]) : 1;
        var b = m[2] ? Number(m[2]) : 0;
        var indices = Selector.pseudos.getIndices(a, b, nodes.length);
        for (var i = 0, node, l = indices.length; node = nodes[i]; i++) {
          for (var j = 0; j < l; j++)
            if (node.nodeIndex == indices[j]) results.push(node);
        }
      }
      h.unmark(nodes);
      h.unmark(indexed);
      return results;
    },

    'empty': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        if (node.tagName == '!' || node.firstChild) continue;
        results.push(node);
      }
      return results;
    },

    'not': function(nodes, selector, root) {
      var h = Selector.handlers, selectorType, m;
      var exclusions = new Selector(selector).findElements(root);
      h.mark(exclusions);
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (!node._countedByPrototype) results.push(node);
      h.unmark(exclusions);
      return results;
    },

    'enabled': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (!node.disabled && (!node.type || node.type !== 'hidden'))
          results.push(node);
      return results;
    },

    'disabled': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (node.disabled) results.push(node);
      return results;
    },

    'checked': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (node.checked) results.push(node);
      return results;
    }
  },

  operators: {
    '=':  function(nv, v) {return nv == v;},
    '!=': function(nv, v) {return nv != v;},
    '^=': function(nv, v) {return nv == v || nv && nv.startsWith(v);},
    '$=': function(nv, v) {return nv == v || nv && nv.endsWith(v);},
    '*=': function(nv, v) {return nv == v || nv && nv.include(v);},
    '~=': function(nv, v) {return (' ' + nv + ' ').include(' ' + v + ' ');},
    '|=': function(nv, v) {return ('-' + (nv || "").toUpperCase() +
     '-').include('-' + (v || "").toUpperCase() + '-');}
  },

  split: function(expression) {
    var expressions = [];
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, function(m) {
      expressions.push(m[1].strip());
    });
    return expressions;
  },

  matchElements: function(elements, expression) {
    var matches = $$(expression), h = Selector.handlers;
    h.mark(matches);
    for (var i = 0, results = [], element; element = elements[i]; i++)
      if (element._countedByPrototype) results.push(element);
    h.unmark(matches);
    return results;
  },

  findElement: function(elements, expression, index) {
    if (Object.isNumber(expression)) {
      index = expression;expression = false;
    }
    return Selector.matchElements(elements, expression || '*')[index || 0];
  },

  findChildElements: function(element, expressions) {
    expressions = Selector.split(expressions.join(','));
    var results = [], h = Selector.handlers;
    for (var i = 0, l = expressions.length, selector; i < l; i++) {
      selector = new Selector(expressions[i].strip());
      h.concat(results, selector.findElements(element));
    }
    return (l > 1) ? h.unique(results) : results;
  }
});

if (Prototype.Browser.IE) {
  Object.extend(Selector.handlers, {
    concat: function(a, b) {
      for (var i = 0, node; node = b[i]; i++)
        if (node.tagName !== "!") a.push(node);
      return a;
    }
  });
}

function $$() {
  return Selector.findChildElements(document, $A(arguments));
}

var Form = {
  reset: function(form) {
    form = $(form);
    form.reset();
    return form;
  },

  serializeElements: function(elements, options) {
    if (typeof options != 'object') options = {hash: !!options};
    else if (Object.isUndefined(options.hash)) options.hash = true;
    var key, value, submitted = false, submit = options.submit;

    var data = elements.inject({ }, function(result, element) {
      if (!element.disabled && element.name) {
        key = element.name;value = $(element).getValue();
        if (value != null && element.type != 'file' && (element.type != 'submit' || (!submitted &&
            submit !== false && (!submit || key == submit) && (submitted = true)))) {
          if (key in result) {
            if (!Object.isArray(result[key])) result[key] = [result[key]];
            result[key].push(value);
          }
          else result[key] = value;
        }
      }
      return result;
    });

    return options.hash ? data : Object.toQueryString(data);
  }
};

Form.Methods = {
  serialize: function(form, options) {
    return Form.serializeElements(Form.getElements(form), options);
  },

  getElements: function(form) {
    var elements = $(form).getElementsByTagName('*'),
        element,
        arr = [ ],
        serializers = Form.Element.Serializers;
    for (var i = 0; element = elements[i]; i++) {
      arr.push(element);
    }
    return arr.inject([], function(elements, child) {
      if (serializers[child.tagName.toLowerCase()])
        elements.push(Element.extend(child));
      return elements;
    })
  },

  getInputs: function(form, typeName, name) {
    form = $(form);
    var inputs = form.getElementsByTagName('input');

    if (!typeName && !name) return $A(inputs).map(Element.extend);

    for (var i = 0, matchingInputs = [], length = inputs.length; i < length; i++) {
      var input = inputs[i];
      if ((typeName && input.type != typeName) || (name && input.name != name))
        continue;
      matchingInputs.push(Element.extend(input));
    }

    return matchingInputs;
  },

  disable: function(form) {
    form = $(form);
    Form.getElements(form).invoke('disable');
    return form;
  },

  enable: function(form) {
    form = $(form);
    Form.getElements(form).invoke('enable');
    return form;
  },

  findFirstElement: function(form) {
    var elements = $(form).getElements().findAll(function(element) {
      return 'hidden' != element.type && !element.disabled;
    });
    var firstByIndex = elements.findAll(function(element) {
      return element.hasAttribute('tabIndex') && element.tabIndex >= 0;
    }).sortBy(function(element) {return element.tabIndex}).first();

    return firstByIndex ? firstByIndex : elements.find(function(element) {
      return /^(?:input|select|textarea)$/i.test(element.tagName);
    });
  },

  focusFirstElement: function(form) {
    form = $(form);
    form.findFirstElement().activate();
    return form;
  },

  request: function(form, options) {
    form = $(form), options = Object.clone(options || { });

    var params = options.parameters, action = form.readAttribute('action') || '';
    if (action.blank()) action = window.location.href;
    options.parameters = form.serialize(true);

    if (params) {
      if (Object.isString(params)) params = params.toQueryParams();
      Object.extend(options.parameters, params);
    }

    if (form.hasAttribute('method') && !options.method)
      options.method = form.method;

    return new Ajax.Request(action, options);
  }
};

/*--------------------------------------------------------------------------*/


Form.Element = {
  focus: function(element) {
    $(element).focus();
    return element;
  },

  select: function(element) {
    $(element).select();
    return element;
  }
};

Form.Element.Methods = {

  serialize: function(element) {
    element = $(element);
    if (!element.disabled && element.name) {
      var value = element.getValue();
      if (value != undefined) {
        var pair = { };
        pair[element.name] = value;
        return Object.toQueryString(pair);
      }
    }
    return '';
  },

  getValue: function(element) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    return Form.Element.Serializers[method](element);
  },

  setValue: function(element, value) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    Form.Element.Serializers[method](element, value);
    return element;
  },

  clear: function(element) {
    $(element).value = '';
    return element;
  },

  present: function(element) {
    return $(element).value != '';
  },

  activate: function(element) {
    element = $(element);
    try {
      element.focus();
      if (element.select && (element.tagName.toLowerCase() != 'input' ||
          !(/^(?:button|reset|submit)$/i.test(element.type))))
        element.select();
    } catch (e) { }
    return element;
  },

  disable: function(element) {
    element = $(element);
    element.disabled = true;
    return element;
  },

  enable: function(element) {
    element = $(element);
    element.disabled = false;
    return element;
  }
};

/*--------------------------------------------------------------------------*/

var Field = Form.Element;

var $F = Form.Element.Methods.getValue;

/*--------------------------------------------------------------------------*/

Form.Element.Serializers = {
  input: function(element, value) {
    switch (element.type.toLowerCase()) {
      case 'checkbox':
      case 'radio':
        return Form.Element.Serializers.inputSelector(element, value);
      default:
        return Form.Element.Serializers.textarea(element, value);
    }
  },

  inputSelector: function(element, value) {
    if (Object.isUndefined(value)) return element.checked ? element.value : null;
    else element.checked = !!value;
  },

  textarea: function(element, value) {
    if (Object.isUndefined(value)) return element.value;
    else element.value = value;
  },

  select: function(element, value) {
    if (Object.isUndefined(value))
      return this[element.type == 'select-one' ?
        'selectOne' : 'selectMany'](element);
    else {
      var opt, currentValue, single = !Object.isArray(value);
      for (var i = 0, length = element.length; i < length; i++) {
        opt = element.options[i];
        currentValue = this.optionValue(opt);
        if (single) {
          if (currentValue == value) {
            opt.selected = true;
            return;
          }
        }
        else opt.selected = value.include(currentValue);
      }
    }
  },

  selectOne: function(element) {
    var index = element.selectedIndex;
    return index >= 0 ? this.optionValue(element.options[index]) : null;
  },

  selectMany: function(element) {
    var values, length = element.length;
    if (!length) return null;

    for (var i = 0, values = []; i < length; i++) {
      var opt = element.options[i];
      if (opt.selected) values.push(this.optionValue(opt));
    }
    return values;
  },

  optionValue: function(opt) {
    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;
  }
};

/*--------------------------------------------------------------------------*/


Abstract.TimedObserver = Class.create(PeriodicalExecuter, {
  initialize: function($super, element, frequency, callback) {
    $super(callback, frequency);
    this.element   = $(element);
    this.lastValue = this.getValue();
  },

  execute: function() {
    var value = this.getValue();
    if (Object.isString(this.lastValue) && Object.isString(value) ?
        this.lastValue != value : String(this.lastValue) != String(value)) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  }
});

Form.Element.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});

/*--------------------------------------------------------------------------*/

Abstract.EventObserver = Class.create({
  initialize: function(element, callback) {
    this.element  = $(element);
    this.callback = callback;

    this.lastValue = this.getValue();
    if (this.element.tagName.toLowerCase() == 'form')
      this.registerFormCallbacks();
    else
      this.registerCallback(this.element);
  },

  onElementEvent: function() {
    var value = this.getValue();
    if (this.lastValue != value) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  },

  registerFormCallbacks: function() {
    Form.getElements(this.element).each(this.registerCallback, this);
  },

  registerCallback: function(element) {
    if (element.type) {
      switch (element.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(element, 'click', this.onElementEvent.bind(this));
          break;
        default:
          Event.observe(element, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  }
});

Form.Element.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});
(function() {

  var Event = {
    KEY_BACKSPACE: 8,
    KEY_TAB:       9,
    KEY_RETURN:   13,
    KEY_ESC:      27,
    KEY_LEFT:     37,
    KEY_UP:       38,
    KEY_RIGHT:    39,
    KEY_DOWN:     40,
    KEY_DELETE:   46,
    KEY_HOME:     36,
    KEY_END:      35,
    KEY_PAGEUP:   33,
    KEY_PAGEDOWN: 34,
    KEY_INSERT:   45,

    cache: {}
  };

  var docEl = document.documentElement;
  var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED = 'onmouseenter' in docEl
    && 'onmouseleave' in docEl;

  var _isButton;
  if (Prototype.Browser.IE) {
    var buttonMap = {0: 1, 1: 4, 2: 2};
    _isButton = function(event, code) {
      return event.button === buttonMap[code];
    };
  } else if (Prototype.Browser.WebKit) {
    _isButton = function(event, code) {
      switch (code) {
        case 0:return event.which == 1 && !event.metaKey;
        case 1:return event.which == 1 && event.metaKey;
        default:return false;
      }
    };
  } else {
    _isButton = function(event, code) {
      return event.which ? (event.which === code + 1) : (event.button === code);
    };
  }

  function isLeftClick(event)   {return _isButton(event, 0)}

  function isMiddleClick(event) {return _isButton(event, 1)}

  function isRightClick(event)  {return _isButton(event, 2)}

  function element(event) {
    event = Event.extend(event);

    var node = event.target, type = event.type,
     currentTarget = event.currentTarget;

    if (currentTarget && currentTarget.tagName) {
      if (type === 'load' || type === 'error' ||
        (type === 'click' && currentTarget.tagName.toLowerCase() === 'input'
          && currentTarget.type === 'radio'))
            node = currentTarget;
    }

    if (node.nodeType == Node.TEXT_NODE)
      node = node.parentNode;

    return Element.extend(node);
  }

  function findElement(event, expression) {
    var element = Event.element(event);
    if (!expression) return element;
    var elements = [element].concat(element.ancestors());
    return Selector.findElement(elements, expression, 0);
  }

  function pointer(event) {
    return {x: pointerX(event), y: pointerY(event)};
  }

  function pointerX(event) {
    var docElement = document.documentElement,
     body = document.body || {scrollLeft: 0};

    return event.pageX || (event.clientX +
      (docElement.scrollLeft || body.scrollLeft) -
      (docElement.clientLeft || 0));
  }

  function pointerY(event) {
    var docElement = document.documentElement,
     body = document.body || {scrollTop: 0};

    return  event.pageY || (event.clientY +
       (docElement.scrollTop || body.scrollTop) -
       (docElement.clientTop || 0));
  }


  function stop(event) {
    Event.extend(event);
    event.preventDefault();
    event.stopPropagation();

    event.stopped = true;
  }

  Event.Methods = {
    isLeftClick: isLeftClick,
    isMiddleClick: isMiddleClick,
    isRightClick: isRightClick,

    element: element,
    findElement: findElement,

    pointer: pointer,
    pointerX: pointerX,
    pointerY: pointerY,

    stop: stop
  };


  var methods = Object.keys(Event.Methods).inject({ }, function(m, name) {
    m[name] = Event.Methods[name].methodize();
    return m;
  });

  if (Prototype.Browser.IE) {
    function _relatedTarget(event) {
      var element;
      switch (event.type) {
        case 'mouseover':element = event.fromElement;break;
        case 'mouseout':element = event.toElement;break;
        default:return null;
      }
      return Element.extend(element);
    }

    Object.extend(methods, {
      stopPropagation: function() {this.cancelBubble = true},
      preventDefault:  function() {this.returnValue = false},
      inspect: function() {return '[object Event]'}
    });

    Event.extend = function(event, element) {
      if (!event) return false;
      if (event._extendedByPrototype) return event;

      event._extendedByPrototype = Prototype.emptyFunction;
      var pointer = Event.pointer(event);

      Object.extend(event, {
        target: event.srcElement || element,
        relatedTarget: _relatedTarget(event),
        pageX:  pointer.x,
        pageY:  pointer.y
      });

      return Object.extend(event, methods);
    };
  } else {
    Event.prototype = window.Event.prototype || document.createEvent('HTMLEvents').__proto__;
    Object.extend(Event.prototype, methods);
    Event.extend = Prototype.K;
  }

  function _createResponder(element, eventName, handler) {
    var registry = Element.retrieve(element, 'prototype_event_registry');

    if (Object.isUndefined(registry)) {
      CACHE.push(element);
      registry = Element.retrieve(element, 'prototype_event_registry', $H());
    }

    var respondersForEvent = registry.get(eventName);
    if (Object.isUndefined(respondersForEvent)) {
      respondersForEvent = [];
      registry.set(eventName, respondersForEvent);
    }

    if (respondersForEvent.pluck('handler').include(handler)) return false;

    var responder;
    if (eventName.include(":")) {
      responder = function(event) {
        if (Object.isUndefined(event.eventName))
          return false;

        if (event.eventName !== eventName)
          return false;

        Event.extend(event, element);
        handler.call(element, event);
      };
    } else {
      if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED &&
       (eventName === "mouseenter" || eventName === "mouseleave")) {
        if (eventName === "mouseenter" || eventName === "mouseleave") {
          responder = function(event) {
            Event.extend(event, element);

            var parent = event.relatedTarget;
            while (parent && parent !== element) {
              try {parent = parent.parentNode;}
              catch(e) {parent = element;}
            }

            if (parent === element) return;

            handler.call(element, event);
          };
        }
      } else {
        responder = function(event) {
          Event.extend(event, element);
          handler.call(element, event);
        };
      }
    }

    responder.handler = handler;
    respondersForEvent.push(responder);
    return responder;
  }

  function _destroyCache() {
    for (var i = 0, length = CACHE.length; i < length; i++) {
      Event.stopObserving(CACHE[i]);
      CACHE[i] = null;
    }
  }

  var CACHE = [];

  if (Prototype.Browser.IE)
    window.attachEvent('onunload', _destroyCache);

  if (Prototype.Browser.WebKit)
    window.addEventListener('unload', Prototype.emptyFunction, false);


  var _getDOMEventName = Prototype.K;

  if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED) {
    _getDOMEventName = function(eventName) {
      var translations = {mouseenter: "mouseover", mouseleave: "mouseout"};
      return eventName in translations ? translations[eventName] : eventName;
    };
  }

  function observe(element, eventName, handler) {
    element = $(element);

    var responder = _createResponder(element, eventName, handler);

    if (!responder) return element;

    if (eventName.include(':')) {
      if (element.addEventListener)
        element.addEventListener("dataavailable", responder, false);
      else {
        element.attachEvent("ondataavailable", responder);
        element.attachEvent("onfilterchange", responder);
      }
    } else {
      var actualEventName = _getDOMEventName(eventName);

      if (element.addEventListener)
        element.addEventListener(actualEventName, responder, false);
      else
        element.attachEvent("on" + actualEventName, responder);
    }

    return element;
  }

  function stopObserving(element, eventName, handler) {
    element = $(element);

    var registry = Element.retrieve(element, 'prototype_event_registry');

    if (Object.isUndefined(registry)) return element;

    if (eventName && !handler) {
      var responders = registry.get(eventName);

      if (Object.isUndefined(responders)) return element;

      responders.each( function(r) {
        Element.stopObserving(element, eventName, r.handler);
      });
      return element;
    } else if (!eventName) {
      registry.each( function(pair) {
        var eventName = pair.key, responders = pair.value;

        responders.each( function(r) {
          Element.stopObserving(element, eventName, r.handler);
        });
      });
      return element;
    }

    var responders = registry.get(eventName);

    if (!responders) return;

    var responder = responders.find( function(r) {return r.handler === handler;});
    if (!responder) return element;

    var actualEventName = _getDOMEventName(eventName);

    if (eventName.include(':')) {
      if (element.removeEventListener)
        element.removeEventListener("dataavailable", responder, false);
      else {
        element.detachEvent("ondataavailable", responder);
        element.detachEvent("onfilterchange",  responder);
      }
    } else {
      if (element.removeEventListener)
        element.removeEventListener(actualEventName, responder, false);
      else
        element.detachEvent('on' + actualEventName, responder);
    }

    registry.set(eventName, responders.without(responder));

    return element;
  }

  function fire(element, eventName, memo, bubble) {
    element = $(element);

    if (Object.isUndefined(bubble))
      bubble = true;

    if (element == document && document.createEvent && !element.dispatchEvent)
      element = document.documentElement;

    var event;
    if (document.createEvent) {
      event = document.createEvent('HTMLEvents');
      event.initEvent('dataavailable', true, true);
    } else {
      event = document.createEventObject();
      event.eventType = bubble ? 'ondataavailable' : 'onfilterchange';
    }

    event.eventName = eventName;
    event.memo = memo || { };

    if (document.createEvent)
      element.dispatchEvent(event);
    else
      element.fireEvent(event.eventType, event);

    return Event.extend(event);
  }


  Object.extend(Event, Event.Methods);

  Object.extend(Event, {
    fire:          fire,
    observe:       observe,
    stopObserving: stopObserving
  });

  Element.addMethods({
    fire:          fire,

    observe:       observe,

    stopObserving: stopObserving
  });

  Object.extend(document, {
    fire:          fire.methodize(),

    observe:       observe.methodize(),

    stopObserving: stopObserving.methodize(),

    loaded:        false
  });

  if (window.Event) Object.extend(window.Event, Event);
  else window.Event = Event;
})();

(function() {
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,
     Matthias Miller, Dean Edwards, John Resig, and Diego Perini. */

  var timer;

  function fireContentLoadedEvent() {
    if (document.loaded) return;
    if (timer) window.clearTimeout(timer);
    document.loaded = true;
    document.fire('dom:loaded');
  }

  function checkReadyState() {
    if (document.readyState === 'complete') {
      document.stopObserving('readystatechange', checkReadyState);
      fireContentLoadedEvent();
    }
  }

  function pollDoScroll() {
    try {document.documentElement.doScroll('left');}
    catch(e) {
      timer = pollDoScroll.defer();
      return;
    }
    fireContentLoadedEvent();
  }

  if (document.addEventListener) {
    document.addEventListener('DOMContentLoaded', fireContentLoadedEvent, false);
  } else {
    document.observe('readystatechange', checkReadyState);
    if (window == top)
      timer = pollDoScroll.defer();
  }

  Event.observe(window, 'load', fireContentLoadedEvent);
})();

Element.addMethods();

/*------------------------------- DEPRECATED -------------------------------*/

Hash.toQueryString = Object.toQueryString;

var Toggle = {display: Element.toggle};

Element.Methods.childOf = Element.Methods.descendantOf;

var Insertion = {
  Before: function(element, content) {
    return Element.insert(element, {before:content});
  },

  Top: function(element, content) {
    return Element.insert(element, {top:content});
  },

  Bottom: function(element, content) {
    return Element.insert(element, {bottom:content});
  },

  After: function(element, content) {
    return Element.insert(element, {after:content});
  }
};

var $continue = new Error('"throw $continue" is deprecated, use "return" instead');

var Position = {
  includeScrollOffsets: false,

  prepare: function() {
    this.deltaX =  window.pageXOffset
                || document.documentElement.scrollLeft
                || document.body.scrollLeft
                || 0;
    this.deltaY =  window.pageYOffset
                || document.documentElement.scrollTop
                || document.body.scrollTop
                || 0;
  },

  within: function(element, x, y) {
    if (this.includeScrollOffsets)
      return this.withinIncludingScrolloffsets(element, x, y);
    this.xcomp = x;
    this.ycomp = y;
    this.offset = Element.cumulativeOffset(element);

    return (y >= this.offset[1] &&
            y <  this.offset[1] + element.offsetHeight &&
            x >= this.offset[0] &&
            x <  this.offset[0] + element.offsetWidth);
  },

  withinIncludingScrolloffsets: function(element, x, y) {
    var offsetcache = Element.cumulativeScrollOffset(element);

    this.xcomp = x + offsetcache[0] - this.deltaX;
    this.ycomp = y + offsetcache[1] - this.deltaY;
    this.offset = Element.cumulativeOffset(element);

    return (this.ycomp >= this.offset[1] &&
            this.ycomp <  this.offset[1] + element.offsetHeight &&
            this.xcomp >= this.offset[0] &&
            this.xcomp <  this.offset[0] + element.offsetWidth);
  },

  overlap: function(mode, element) {
    if (!mode) return 0;
    if (mode == 'vertical')
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
        element.offsetHeight;
    if (mode == 'horizontal')
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
        element.offsetWidth;
  },


  cumulativeOffset: Element.Methods.cumulativeOffset,

  positionedOffset: Element.Methods.positionedOffset,

  absolutize: function(element) {
    Position.prepare();
    return Element.absolutize(element);
  },

  relativize: function(element) {
    Position.prepare();
    return Element.relativize(element);
  },

  realOffset: Element.Methods.cumulativeScrollOffset,

  offsetParent: Element.Methods.getOffsetParent,

  page: Element.Methods.viewportOffset,

  clone: function(source, target, options) {
    options = options || { };
    return Element.clonePosition(target, source, options);
  }
};

/*--------------------------------------------------------------------------*/

if (!document.getElementsByClassName) document.getElementsByClassName = function(instanceMethods){
  function iter(name) {
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + name + " ')]";
  }

  instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ?
  function(element, className) {
    className = className.toString().strip();
    var cond = /\s/.test(className) ? $w(className).map(iter).join('') : iter(className);
    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
  } : function(element, className) {
    className = className.toString().strip();
    var elements = [], classNames = (/\s/.test(className) ? $w(className) : null);
    if (!classNames && !className) return elements;

    var nodes = $(element).getElementsByTagName('*');
    className = ' ' + className + ' ';

    for (var i = 0, child, cn; child = nodes[i]; i++) {
      if (child.className && (cn = ' ' + child.className + ' ') && (cn.include(className) ||
          (classNames && classNames.all(function(name) {
            return !name.toString().blank() && cn.include(' ' + name + ' ');
          }))))
        elements.push(Element.extend(child));
    }
    return elements;
  };

  return function(className, parentElement) {
    return $(parentElement || document.body).getElementsByClassName(className);
  };
}(Element.Methods);

/*--------------------------------------------------------------------------*/

Element.ClassNames = Class.create();
Element.ClassNames.prototype = {
  initialize: function(element) {
    this.element = $(element);
  },

  _each: function(iterator) {
    this.element.className.split(/\s+/).select(function(name) {
      return name.length > 0;
    })._each(iterator);
  },

  set: function(className) {
    this.element.className = className;
  },

  add: function(classNameToAdd) {
    if (this.include(classNameToAdd)) return;
    this.set($A(this).concat(classNameToAdd).join(' '));
  },

  remove: function(classNameToRemove) {
    if (!this.include(classNameToRemove)) return;
    this.set($A(this).without(classNameToRemove).join(' '));
  },

  toString: function() {
    return $A(this).join(' ');
  }
};

Object.extend(Element.ClassNames.prototype, Enumerable);

/*--------------------------------------------------------------------------*/
// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
// Contributors:
//  Justin Palmer (http://encytemedia.com/)
//  Mark Pilgrim (http://diveintomark.org/)
//  Martin Bialasinki
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// converts rgb() and #xxx to #xxxxxx format,
// returns self (or first argument) if not convertable
String.prototype.parseColor = function() {
  var color = '#';
  if (this.slice(0,4) == 'rgb(') {
    var cols = this.slice(4,this.length-1).split(',');
    var i=0;do {color += parseInt(cols[i]).toColorPart()} while (++i<3);
  } else {
    if (this.slice(0,1) == '#') {
      if (this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();
      if (this.length==7) color = this.toLowerCase();
    }
  }
  return (color.length==7 ? color : (arguments[0] || this));
};

/*--------------------------------------------------------------------------*/

Element.collectTextNodes = function(element) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
};

Element.collectTextNodesIgnoreClass = function(element, className) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
};

Element.setContentZoom = function(element, percent) {
  element = $(element);
  element.setStyle({fontSize: (percent/100) + 'em'});
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);
  return element;
};

Element.getInlineOpacity = function(element){
  return $(element).style.opacity || '';
};

Element.forceRerendering = function(element) {
  try {
    element = $(element);
    var n = document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*--------------------------------------------------------------------------*/

var Effect = {
  _elementDoesNotExistError: {
    name: 'ElementDoesNotExistError',
    message: 'The specified DOM element does not exist, but is required for this effect to operate'
  },
  Transitions: {
    linear: Prototype.K,
    sinoidal: function(pos) {
      return (-Math.cos(pos*Math.PI)/2) + .5;
    },
    reverse: function(pos) {
      return 1-pos;
    },
    flicker: function(pos) {
      var pos = ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;
      return pos > 1 ? 1 : pos;
    },
    wobble: function(pos) {
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;
    },
    pulse: function(pos, pulses) {
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;
    },
    spring: function(pos) {
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));
    },
    none: function(pos) {
      return 0;
    },
    full: function(pos) {
      return 1;
    }
  },
  DefaultOptions: {
    duration:   1.0,   // seconds
    fps:        100,   // 100= assume 66fps max.
    sync:       false, // true for combining
    from:       0.0,
    to:         1.0,
    delay:      0.0,
    queue:      'parallel'
  },
  tagifyText: function(element) {
    var tagifyStyle = 'position:relative';
    if (Prototype.Browser.IE) tagifyStyle += ';zoom:1';

    element = $(element);
    $A(element.childNodes).each( function(child) {
      if (child.nodeType==3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            new Element('span', {style: tagifyStyle}).update(
              character == ' ' ? String.fromCharCode(160) : character),
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if (((typeof element == 'object') ||
        Object.isFunction(element)) &&
       (element.length))
      elements = element;
    else
      elements = $(element).childNodes;

    var options = Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || { });
    var masterDelay = options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, {delay: index * options.speed + masterDelay}));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element = $(element);
    effect = (effect || 'appear').toLowerCase();
    var options = Object.extend({
      queue: {position:'end', scope:(element.id || 'global'), limit: 1}
    }, arguments[2] || { });
    Effect[element.visible() ?
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

Effect.DefaultOptions.transition = Effect.Transitions.sinoidal;

/* ------------- core effects ------------- */

Effect.ScopedQueue = Class.create(Enumerable, {
  initialize: function() {
    this.effects  = [];
    this.interval = null;
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp = new Date().getTime();

    var position = Object.isString(effect.options.queue) ?
      effect.options.queue : effect.options.queue.position;

    switch(position) {
      case 'front':
        // move unstarted effects after this effect
        this.effects.findAll(function(e){return e.state=='idle'}).each( function(e) {
            e.startOn  += effect.finishOn;
            e.finishOn += effect.finishOn;
          });
        break;
      case 'with-last':
        timestamp = this.effects.pluck('startOn').max() || timestamp;
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp = this.effects.pluck('finishOn').max() || timestamp;
        break;
    }

    effect.startOn  += timestamp;
    effect.finishOn += timestamp;

    if (!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))
      this.effects.push(effect);

    if (!this.interval)
      this.interval = setInterval(this.loop.bind(this), 15);
  },
  remove: function(effect) {
    this.effects = this.effects.reject(function(e) {return e==effect});
    if (this.effects.length == 0) {
      clearInterval(this.interval);
      this.interval = null;
    }
  },
  loop: function() {
    var timePos = new Date().getTime();
    for(var i=0, len=this.effects.length;i<len;i++)
      this.effects[i] && this.effects[i].loop(timePos);
  }
});

Effect.Queues = {
  instances: $H(),
  get: function(queueName) {
    if (!Object.isString(queueName)) return queueName;

    return this.instances.get(queueName) ||
      this.instances.set(queueName, new Effect.ScopedQueue());
  }
};
Effect.Queue = Effect.Queues.get('global');

Effect.Base = Class.create({
  position: null,
  start: function(options) {
    function codeForEvent(options,eventName){
      return (
        (options[eventName+'Internal'] ? 'this.options.'+eventName+'Internal(this);' : '') +
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')
      );
    }
    if (options && options.transition === false) options.transition = Effect.Transitions.linear;
    this.options      = Object.extend(Object.extend({ },Effect.DefaultOptions), options || { });
    this.currentFrame = 0;
    this.state        = 'idle';
    this.startOn      = this.options.delay*1000;
    this.finishOn     = this.startOn+(this.options.duration*1000);
    this.fromToDelta  = this.options.to-this.options.from;
    this.totalTime    = this.finishOn-this.startOn;
    this.totalFrames  = this.options.fps*this.options.duration;

    this.render = (function() {
      function dispatch(effect, eventName) {
        if (effect.options[eventName + 'Internal'])
          effect.options[eventName + 'Internal'](effect);
        if (effect.options[eventName])
          effect.options[eventName](effect);
      }

      return function(pos) {
        if (this.state === "idle") {
          this.state = "running";
          dispatch(this, 'beforeSetup');
          if (this.setup) this.setup();
          dispatch(this, 'afterSetup');
        }
        if (this.state === "running") {
          pos = (this.options.transition(pos) * this.fromToDelta) + this.options.from;
          this.position = pos;
          dispatch(this, 'beforeUpdate');
          if (this.update) this.update(pos);
          dispatch(this, 'afterUpdate');
        }
      };
    })();

    this.event('beforeStart');
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if (timePos >= this.startOn) {
      if (timePos >= this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if (this.finish) this.finish();
        this.event('afterFinish');
        return;
      }
      var pos   = (timePos - this.startOn) / this.totalTime,
          frame = (pos * this.totalFrames).round();
      if (frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame = frame;
      }
    }
  },
  cancel: function() {
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).remove(this);
    this.state = 'finished';
  },
  event: function(eventName) {
    if (this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);
    if (this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    var data = $H();
    for(property in this)
      if (!Object.isFunction(this[property])) data.set(property, this[property]);
    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).inspect() + '>';
  }
});

Effect.Parallel = Class.create(Effect.Base, {
  initialize: function(effects) {
    this.effects = effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if (effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Tween = Class.create(Effect.Base, {
  initialize: function(object, from, to) {
    object = Object.isString(object) ? $(object) : object;
    var args = $A(arguments), method = args.last(),
      options = args.length == 5 ? args[3] : null;
    this.method = Object.isFunction(method) ? method.bind(object) :
      Object.isFunction(object[method]) ? object[method].bind(object) :
      function(value) {object[method] = value};
    this.start(Object.extend({from: from, to: to}, options || { }));
  },
  update: function(position) {
    this.method(position);
  }
});

Effect.Event = Class.create(Effect.Base, {
  initialize: function() {
    this.start(Object.extend({duration: 0}, arguments[0] || { }));
  },
  update: Prototype.emptyFunction
});

Effect.Opacity = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    // make this work on IE on elements without 'layout'
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
      this.element.setStyle({zoom: 1});
    var options = Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || { });
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    this.element.makePositioned();
    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
    if (this.options.mode == 'absolute') {
      this.options.x = this.options.x - this.originalLeft;
      this.options.y = this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: (this.options.x  * position + this.originalLeft).round() + 'px',
      top:  (this.options.y  * position + this.originalTop).round()  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy = function(element, toTop, toLeft) {
  return new Effect.Move(element,
    Object.extend({x: toLeft, y: toTop}, arguments[3] || { }));
};

Effect.Scale = Class.create(Effect.Base, {
  initialize: function(element, percent) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or { } with provided values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || { });
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish = this.options.restoreAfterFinish || false;
    this.elementPositioning = this.element.getStyle('position');

    this.originalStyle = { };
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] = this.element.style[k];
    }.bind(this));

    this.originalTop  = this.element.offsetTop;
    this.originalLeft = this.element.offsetLeft;

    var fontSize = this.element.getStyle('font-size') || '100%';
    ['em','px','%','pt'].each( function(fontSizeType) {
      if (fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     = parseFloat(fontSize);
        this.fontSizeType = fontSizeType;
      }
    }.bind(this));

    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;

    this.dims = null;
    if (this.options.scaleMode=='box')
      this.dims = [this.element.offsetHeight, this.element.offsetWidth];
    if (/^content/.test(this.options.scaleMode))
      this.dims = [this.element.scrollHeight, this.element.scrollWidth];
    if (!this.dims)
      this.dims = [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
    if (this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType});
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d = { };
    if (this.options.scaleX) d.width = width.round() + 'px';
    if (this.options.scaleY) d.height = height.round() + 'px';
    if (this.options.scaleFromCenter) {
      var topd  = (height - this.dims[0])/2;
      var leftd = (width  - this.dims[1])/2;
      if (this.elementPositioning == 'absolute') {
        if (this.options.scaleY) d.top = this.originalTop-topd + 'px';
        if (this.options.scaleX) d.left = this.originalLeft-leftd + 'px';
      } else {
        if (this.options.scaleY) d.top = -topd + 'px';
        if (this.options.scaleX) d.left = -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({startcolor: '#ffff99'}, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if (this.element.getStyle('display')=='none') {this.cancel();return;}
    // Disable background image during the effect
    this.oldStyle = { };
    if (!this.options.keepBackgroundImage) {
      this.oldStyle.backgroundImage = this.element.getStyle('background-image');
      this.element.setStyle({backgroundImage: 'none'});
    }
    if (!this.options.endcolor)
      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
    if (!this.options.restorecolor)
      this.options.restorecolor = this.element.getStyle('background-color');
    // init color calculations
    this._base  = $R(0,2).map(function(i){return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16)}.bind(this));
    this._delta = $R(0,2).map(function(i){return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i]}.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPart());}.bind(this))});
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo = function(element) {
  var options = arguments[1] || { },
  scrollOffsets = document.viewport.getScrollOffsets(),
  elementOffsets = $(element).cumulativeOffset();

  if (options.offset) elementOffsets[1] += options.offset;

  return new Effect.Tween(null,
    scrollOffsets.top,
    elementOffsets[1],
    options,
    function(p){scrollTo(scrollOffsets.left, p.round());}
  );
};

/* ------------- combination effects ------------- */

Effect.Fade = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  var options = Object.extend({
    from: element.getOpacity() || 1.0,
    to:   0.0,
    afterFinishInternal: function(effect) {
      if (effect.options.to!=0) return;
      effect.element.hide().setStyle({opacity: oldOpacity});
    }
  }, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Appear = function(element) {
  element = $(element);
  var options = Object.extend({
  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from).show();
  }}, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Puff = function(element) {
  element = $(element);
  var oldStyle = {
    opacity: element.getInlineOpacity(),
    position: element.getStyle('position'),
    top:  element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height
  };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200,
      {sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true}),
     new Effect.Opacity(element, {sync: true, to: 0.0} ) ],
     Object.extend({duration: 1.0,
      beforeSetupInternal: function(effect) {
        Position.absolutize(effect.effects[0].element);
      },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide().setStyle(oldStyle);}
     }, arguments[1] || { })
   );
};

Effect.BlindUp = function(element) {
  element = $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0,
    Object.extend({scaleContent: false,
      scaleX: false,
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping();
      }
    }, arguments[1] || { })
  );
};

Effect.BlindDown = function(element) {
  element = $(element);
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping();
    }
  }, arguments[1] || { }));
};

Effect.SwitchOff = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  return new Effect.Appear(element, Object.extend({
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, {
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) {
          effect.element.makePositioned().makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: oldOpacity});
        }
      });
    }
  }, arguments[1] || { }));
};

Effect.DropOut = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity()};
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true}),
      new Effect.Opacity(element, {sync: true, to: 0.0}) ],
    Object.extend(
      {duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned();
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);
        }
      }, arguments[1] || { }));
};

Effect.Shake = function(element) {
  element = $(element);
  var options = Object.extend({
    distance: 20,
    duration: 0.5
  }, arguments[1] || {});
  var distance = parseFloat(options.distance);
  var split = parseFloat(options.duration) / 10.0;
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left')};
    return new Effect.Move(element,
      {x:  distance, y: 0, duration: split, afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      {x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      {x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      {x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      {x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      {x: -distance, y: 0, duration: split, afterFinishInternal: function(effect) {
        effect.element.undoPositioned().setStyle(oldStyle);
  }});}});}});}});}});}});
};

Effect.SlideDown = function(element) {
  element = $(element).cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a container element with fixed height!
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: window.opera ? 0 : 1,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px'});
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});}
    }, arguments[1] || { })
  );
};

Effect.SlideUp = function(element) {
  element = $(element).cleanWhitespace();
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, window.opera ? 0 : 1,
   Object.extend({scaleContent: false,
    scaleX: false,
    scaleMode: 'box',
    scaleFrom: 100,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px'});
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});
    }
   }, arguments[1] || { })
  );
};

// Bug in opera makes the TD containing this element expand for a instance after finish
Effect.Squish = function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, {
    restoreAfterFinish: true,
    beforeSetup: function(effect) {
      effect.element.makeClipping();
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping();
    }
  });
};

Effect.Grow = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity()};

  var dims = element.getDimensions();
  var initialMoveX, initialMoveY;
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      initialMoveX = initialMoveY = moveX = moveY = 0;
      break;
    case 'top-right':
      initialMoveX = dims.width;
      initialMoveY = moveY = 0;
      moveX = -dims.width;
      break;
    case 'bottom-left':
      initialMoveX = moveX = 0;
      initialMoveY = dims.height;
      moveY = -dims.height;
      break;
    case 'bottom-right':
      initialMoveX = dims.width;
      initialMoveY = dims.height;
      moveX = -dims.width;
      moveY = -dims.height;
      break;
    case 'center':
      initialMoveX = dims.width / 2;
      initialMoveY = dims.height / 2;
      moveX = -dims.width / 2;
      moveY = -dims.height / 2;
      break;
  }

  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01,
    beforeSetup: function(effect) {
      effect.element.hide().makeClipping().makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, {sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition}),
          new Effect.Move(effect.element, {x: moveX, y: moveY, sync: true, transition: options.moveTransition}),
          new Effect.Scale(effect.element, 100, {
            scaleMode: {originalHeight: dims.height, originalWidth: dims.width},
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'}).show();
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldStyle);
             }
           }, options)
      );
    }
  });
};

Effect.Shrink = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity()};

  var dims = element.getDimensions();
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      moveX = moveY = 0;
      break;
    case 'top-right':
      moveX = dims.width;
      moveY = 0;
      break;
    case 'bottom-left':
      moveX = 0;
      moveY = dims.height;
      break;
    case 'bottom-right':
      moveX = dims.width;
      moveY = dims.height;
      break;
    case 'center':
      moveX = dims.width / 2;
      moveY = dims.height / 2;
      break;
  }

  return new Effect.Parallel(
    [ new Effect.Opacity(element, {sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition}),
      new Effect.Scale(element, window.opera ? 1 : 0, {sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, {x: moveX, y: moveY, sync: true, transition: options.moveTransition})
    ], Object.extend({
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned().makeClipping();
         },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle(oldStyle);}
       }, options)
  );
};

Effect.Pulsate = function(element) {
  element = $(element);
  var options    = arguments[1] || { },
    oldOpacity = element.getInlineOpacity(),
    transition = options.transition || Effect.Transitions.linear,
    reverser   = function(pos){
      return 1 - transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);
    };

  return new Effect.Opacity(element,
    Object.extend(Object.extend({duration: 2.0, from: 0,
      afterFinishInternal: function(effect) {effect.element.setStyle({opacity: oldOpacity});}
    }, options), {transition: reverser}));
};

Effect.Fold = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height};
  element.makeClipping();
  return new Effect.Scale(element, 5, Object.extend({
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, {
      scaleContent: false,
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping().setStyle(oldStyle);
      }});
  }}, arguments[1] || { }));
};

Effect.Morph = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      style: { }
    }, arguments[1] || { });

    if (!Object.isString(options.style)) this.style = $H(options.style);
    else {
      if (options.style.include(':'))
        this.style = options.style.parseStyle();
      else {
        this.element.addClassName(options.style);
        this.style = $H(this.element.getStyles());
        this.element.removeClassName(options.style);
        var css = this.element.getStyles();
        this.style = this.style.reject(function(style) {
          return style.value == css[style.key];
        });
        options.afterFinishInternal = function(effect) {
          effect.element.addClassName(effect.options.style);
          effect.transforms.each(function(transform) {
            effect.element.style[transform.style] = '';
          });
        };
      }
    }
    this.start(options);
  },

  setup: function(){
    function parseColor(color){
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) color = '#ffffff';
      color = color.parseColor();
      return $R(0,2).map(function(i){
        return parseInt( color.slice(i*2+1,i*2+3), 16 );
      });
    }
    this.transforms = this.style.map(function(pair){
      var property = pair[0], value = pair[1], unit = null;

      if (value.parseColor('#zzzzzz') != '#zzzzzz') {
        value = value.parseColor();
        unit  = 'color';
      } else if (property == 'opacity') {
        value = parseFloat(value);
        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
          this.element.setStyle({zoom: 1});
      } else if (Element.CSS_LENGTH.test(value)) {
          var components = value.match(/^([\+\-]?[0-9\.]+)(.*)$/);
          value = parseFloat(components[1]);
          unit = (components.length == 3) ? components[2] : null;
      }

      var originalValue = this.element.getStyle(property);
      return {
        style: property.camelize(),
        originalValue: unit=='color' ? parseColor(originalValue) : parseFloat(originalValue || 0),
        targetValue: unit=='color' ? parseColor(value) : value,
        unit: unit
      };
    }.bind(this)).reject(function(transform){
      return (
        (transform.originalValue == transform.targetValue) ||
        (
          transform.unit != 'color' &&
          (isNaN(transform.originalValue) || isNaN(transform.targetValue))
        )
      );
    });
  },
  update: function(position) {
    var style = { }, transform, i = this.transforms.length;
    while(i--)
      style[(transform = this.transforms[i]).style] =
        transform.unit=='color' ? '#'+
          (Math.round(transform.originalValue[0]+
            (transform.targetValue[0]-transform.originalValue[0])*position)).toColorPart() +
          (Math.round(transform.originalValue[1]+
            (transform.targetValue[1]-transform.originalValue[1])*position)).toColorPart() +
          (Math.round(transform.originalValue[2]+
            (transform.targetValue[2]-transform.originalValue[2])*position)).toColorPart() :
        (transform.originalValue +
          (transform.targetValue - transform.originalValue) * position).toFixed(3) +
            (transform.unit === null ? '' : transform.unit);
    this.element.setStyle(style, true);
  }
});

Effect.Transform = Class.create({
  initialize: function(tracks){
    this.tracks  = [];
    this.options = arguments[1] || { };
    this.addTracks(tracks);
  },
  addTracks: function(tracks){
    tracks.each(function(track){
      track = $H(track);
      var data = track.values().first();
      this.tracks.push($H({
        ids:     track.keys().first(),
        effect:  Effect.Morph,
        options: {style: data}
      }));
    }.bind(this));
    return this;
  },
  play: function(){
    return new Effect.Parallel(
      this.tracks.map(function(track){
        var ids = track.get('ids'), effect = track.get('effect'), options = track.get('options');
        var elements = [$(ids) || $$(ids)].flatten();
        return elements.map(function(e){return new effect(e, Object.extend({sync:true}, options))});
      }).flatten(),
      this.options
    );
  }
});

Element.CSS_PROPERTIES = $w(
  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle ' +
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +
  'fontSize fontWeight height left letterSpacing lineHeight ' +
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +
  'right textIndent top width wordSpacing zIndex');

Element.CSS_LENGTH = /^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;

String.__parseStyleElement = document.createElement('div');
String.prototype.parseStyle = function(){
  var style, styleRules = $H();
  if (Prototype.Browser.WebKit)
    style = new Element('div',{style:this}).style;
  else {
    String.__parseStyleElement.innerHTML = '<div style="' + this + '"></div>';
    style = String.__parseStyleElement.childNodes[0].style;
  }

  Element.CSS_PROPERTIES.each(function(property){
    if (style[property]) styleRules.set(property, style[property]);
  });

  if (Prototype.Browser.IE && this.include('opacity'))
    styleRules.set('opacity', this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);

  return styleRules;
};

if (document.defaultView && document.defaultView.getComputedStyle) {
  Element.getStyles = function(element) {
    var css = document.defaultView.getComputedStyle($(element), null);
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {
      styles[property] = css[property];
      return styles;
    });
  };
} else {
  Element.getStyles = function(element) {
    element = $(element);
    var css = element.currentStyle, styles;
    styles = Element.CSS_PROPERTIES.inject({ }, function(results, property) {
      results[property] = css[property];
      return results;
    });
    if (!styles.opacity) styles.opacity = element.getOpacity();
    return styles;
  };
}

Effect.Methods = {
  morph: function(element, style) {
    element = $(element);
    new Effect.Morph(element, Object.extend({style: style}, arguments[2] || { }));
    return element;
  },
  visualEffect: function(element, effect, options) {
    element = $(element);
    var s = effect.dasherize().camelize(), klass = s.charAt(0).toUpperCase() + s.substring(1);
    new Effect[klass](element, options);
    return element;
  },
  highlight: function(element, options) {
    element = $(element);
    new Effect.Highlight(element, options);
    return element;
  }
};

$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+
  'pulsate shake puff squish switchOff dropOut').each(
  function(effect) {
    Effect.Methods[effect] = function(element, options){
      element = $(element);
      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element, options);
      return element;
    };
  }
);

$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes collectTextNodesIgnoreClass getStyles').each(
  function(f) {Effect.Methods[f] = Element[f];}
);

Element.addMethods(Effect.Methods);// script.aculo.us builder.js v1.8.0, Tue Nov 06 15:01:40 +0300 2007

// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

var Builder = {
  NODEMAP: {
    AREA: 'map',
    CAPTION: 'table',
    COL: 'table',
    COLGROUP: 'table',
    LEGEND: 'fieldset',
    OPTGROUP: 'select',
    OPTION: 'select',
    PARAM: 'object',
    TBODY: 'table',
    TD: 'table',
    TFOOT: 'table',
    TH: 'table',
    THEAD: 'table',
    TR: 'table'
  },
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently broken,
  //       due to a Firefox bug
  node: function(elementName) {
    elementName = elementName.toUpperCase();
    
    // try innerHTML approach
    var parentTag = this.NODEMAP[elementName] || 'div';
    var parentElement = document.createElement(parentTag);
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
      parentElement.innerHTML = "<" + elementName + "></" + elementName + ">";
    } catch(e) {}
    var element = parentElement.firstChild || null;
      
    // see if browser added wrapping tags
    if(element && (element.tagName.toUpperCase() != elementName))
      element = element.getElementsByTagName(elementName)[0];
    
    // fallback to createElement approach
    if(!element) element = document.createElement(elementName);
    
    // abort if nothing could be created
    if(!element) return;

    // attributes (or text)
    if(arguments[1])
      if(this._isStringOrNumber(arguments[1]) ||
        (arguments[1] instanceof Array) ||
        arguments[1].tagName) {
          this._children(element, arguments[1]);
        } else {
          var attrs = this._attributes(arguments[1]);
          if(attrs.length) {
            try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
              parentElement.innerHTML = "<" +elementName + " " +
                attrs + "></" + elementName + ">";
            } catch(e) {}
            element = parentElement.firstChild || null;
            // workaround firefox 1.0.X bug
            if(!element) {
              element = document.createElement(elementName);
              for(attr in arguments[1]) 
                element[attr == 'class' ? 'className' : attr] = arguments[1][attr];
            }
            if(element.tagName.toUpperCase() != elementName)
              element = parentElement.getElementsByTagName(elementName)[0];
          }
        } 

    // text, or array of children
    if(arguments[2])
      this._children(element, arguments[2]);

     return element;
  },
  _text: function(text) {
     return document.createTextNode(text);
  },

  ATTR_MAP: {
    'className': 'class',
    'htmlFor': 'for'
  },

  _attributes: function(attributes) {
    var attrs = [];
    for(attribute in attributes)
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] : attribute) +
          '="' + attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');
    return attrs.join(" ");
  },
  _children: function(element, children) {
    if(children.tagName) {
      element.appendChild(children);
      return;
    }
    if(typeof children=='object') { // array can hold nodes and text
      children.flatten().each( function(e) {
        if(typeof e=='object')
          element.appendChild(e);
        else
          if(Builder._isStringOrNumber(e))
            element.appendChild(Builder._text(e));
      });
    } else
      if(Builder._isStringOrNumber(children))
        element.appendChild(Builder._text(children));
  },
  _isStringOrNumber: function(param) {
    return(typeof param=='string' || typeof param=='number');
  },
  build: function(html) {
    var element = this.node('div');
    $(element).update(html.strip());
    return element.down();
  },
  dump: function(scope) { 
    if(typeof scope != 'object' && typeof scope != 'function') scope = window; //global scope 
  
    var tags = ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT BDO BIG BLOCKQUOTE BODY " +
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR DIV DL DT EM FIELDSET " +
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME IMG INPUT INS ISINDEX "+
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT OL OPTGROUP OPTION P "+
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE SUB SUP TABLE TBODY TD "+
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);
  
    tags.each( function(tag){ 
      scope[tag] = function() { 
        return Builder.node.apply(Builder, [tag].concat($A(arguments)));  
      } 
    });
  }
};// Tooltip Object
var Tooltip = Class.create();
Tooltip.prototype = {
  initialize: function(el, options) {
    this.el = $(el);
    this.initialized = false;
    this.setOptions(options);
    
    // Event handlers
    this.showEvent = this.show.bindAsEventListener(this);
    this.hideEvent = this.hide.bindAsEventListener(this);
    this.updateEvent = this.update.bindAsEventListener(this);
    Event.observe(this.el, "mouseover", this.showEvent );
    Event.observe(this.el, "mouseout", this.hideEvent );
    
    // Removing title from DOM element to avoid showing it
    this.content = this.el.title;
    this.el.title = "";
  },
  setOptions: function(options) {
    this.options = {
      backgroundColor: '#999', // Default background color
      borderColor: '#666', // Default border color
      textColor: '', // Default text color (use CSS value)
      textShadowColor: '', // Default text shadow color (use CSS value)
      maxWidth: 250,	// Default tooltip width
      align: "left", // Default align
      delay: 250, // Default delay before tooltip appears in ms
      mouseFollow: false, // Tooltips follows the mouse moving
      opacity: .75, // Default tooltips opacity
      appearDuration: .25, // Default appear duration in sec
      hideDuration: .25 // Default disappear duration in sec
    };
    Object.extend(this.options, options || {});
  },
  show: function(e) {
    this.xCord = Event.pointerX(e);
    this.yCord = Event.pointerY(e);
    if(!this.initialized)
      this.timeout = window.setTimeout(this.appear.bind(this), this.options.delay);
  },
  hide: function(e) {
    if(this.initialized) {
      this.appearingFX.cancel();
      if(this.options.mouseFollow)
        Event.stopObserving(this.el, "mousemove", this.updateEvent);
      new Effect.Fade(this.tooltip, {duration: this.options.hideDuration, afterFinish: function() {Element.remove(this.tooltip)}.bind(this)});
    }
    this._clearTimeout(this.timeout);
    
    this.initialized = false;
  },
  update: function(e){
    this.xCord = Event.pointerX(e);
    this.yCord = Event.pointerY(e);
    this.setup();
  },
  appear: function() {
    // Building tooltip container
    this.tooltip = Builder.node("div", {className: "tooltip", style: "display: none;"}, [
      Builder.node("div", {className:"xtop"}, [
        Builder.node("div", {className:"xb1", style:"background-color:" + this.options.borderColor + ";"}),
        Builder.node("div", {className:"xb2", style: "background-color:" + this.options.backgroundColor + "; border-color:" + this.options.borderColor + ";"}),
        Builder.node("div", {className:"xb3", style: "background-color:" + this.options.backgroundColor + "; border-color:" + this.options.borderColor + ";"}),
        Builder.node("div", {className:"xb4", style: "background-color:" + this.options.backgroundColor + "; border-color:" + this.options.borderColor + ";"})
      ]),
      Builder.node("div", {className: "xboxcontent", style: "background-color:" + this.options.backgroundColor + 
        "; border-color:" + this.options.borderColor + 
        ((this.options.textColor != '') ? "; color:" + this.options.textColor : "") + 
        ((this.options.textShadowColor != '') ? "; text-shadow:2px 2px 0" + this.options.textShadowColor + ";" : "")}, this.content), 
      Builder.node("div", {className:"xbottom"}, [
        Builder.node("div", {className:"xb4", style: "background-color:" + this.options.backgroundColor + "; border-color:" + this.options.borderColor + ";"}),
        Builder.node("div", {className:"xb3", style: "background-color:" + this.options.backgroundColor + "; border-color:" + this.options.borderColor + ";"}),
        Builder.node("div", {className:"xb2", style: "background-color:" + this.options.backgroundColor + "; border-color:" + this.options.borderColor + ";"}),
        Builder.node("div", {className:"xb1", style:"background-color:" + this.options.borderColor + ";"})
      ]),
    ]);
    document.body.insertBefore(this.tooltip, document.body.childNodes[0]);
    
    Element.extend(this.tooltip); // IE needs element to be manually extended
    this.options.width = this.tooltip.getWidth();
    this.tooltip.style.width = this.options.width + 'px'; // IE7 needs width to be defined
    
    this.setup();
    
    if(this.options.mouseFollow)
      Event.observe(this.el, "mousemove", this.updateEvent);
    
    this.initialized = true;
    this.appearingFX = new Effect.Appear(this.tooltip, {duration: this.options.appearDuration, to: this.options.opacity});
  },
  setup: function(){
    // If content width is more then allowed max width, set width to max
    if(this.options.width > this.options.maxWidth) {
      this.options.width = this.options.maxWidth;
      this.tooltip.style.width = this.options.width + 'px';
    }
    
    // Tooltip doesn't fit the current document dimensions
    if(this.xCord + this.options.width >= Element.getWidth(document.body)) {
      this.options.align = "right";
      this.xCord = this.xCord - this.options.width + 20;
    }
    
    this.tooltip.style.left = this.xCord - 7 + "px";
    this.tooltip.style.top = this.yCord + 12 + "px";
  },
  stop: function() {
    this.hide();
    Event.stopObserving(this.el, "mouseover", this.showEvent );
    Event.stopObserving(this.el, "mouseout", this.hideEvent );          
    Event.stopObserving(this.el, "mousemove", this.updateEvent);
  },        
  _clearTimeout: function(timer) {
    clearTimeout(timer);
    clearInterval(timer);
    return null;
  }
};//modified by Quake (added tooltip integration and remove some unused code)

/**
 * modified by badqiu (badqiu(a)gmail.com)
 * blog: http://badqiu.javaeye.com
 * Project Home: http://code.google.com/p/rapid-validation/
 */

/*
 * Really easy field validation with Prototype
 * http://tetlaw.id.au/view/blog/really-easy-field-validation-with-prototype
 * Andrew Tetlaw
 * Version 1.5.3 (2006-07-15)
 * 
 * Copyright (c) 2006 Andrew Tetlaw
 * http://www.opensource.org/licenses/mit-license.php
 */

var ValidationDefaultOptions = function(){};
ValidationDefaultOptions.prototype = {
  onSubmit : true, //是否监听form的submit事件
  stopOnFirst : false, //表单验证时停留在第一个验证的地方,不继续验证下去
  immediate : true, //是否实时检查数据的合法性
  focusOnError : true, //是否出错时将光标指针移到出错的输入框上
  useTitles : false, //是否使用input的title属性作为出错时的提示信息
  onFormValidate : function(result, form) {},//Form验证时的回调函数
  onElementValidate : function(result, elm) {} //某个input验证时的回调函数
};

var ValidatorDefaultOptions = function(){};
ValidatorDefaultOptions.prototype = {
  ignoreEmptyValue : true, //是否忽略空值
  depends : [] //相关依赖项
};
 
Validator = Class.create();

ValidationUtils = {
  getReferenceForm : function(elm) {
    while(elm && elm.tagName != 'BODY') {
      if(elm.tagName == 'FORM') return elm;
      elm = elm.parentNode;
    }
    return null;
  },
  getInputValue : function(elm) {
    var elm = $(elm);
    if(elm.type.toLowerCase() == 'file') {
      return elm.value;
    }else {
      return $F(elm);
    }
  },
  getElmID : function(elm) {
    return elm.id ? elm.id : elm.name;
  },
  format : function(str,args) {
    args = args || [];
    ValidationUtils.assert(args.constructor == Array,"ValidationUtils.format() arguement 'args' must is Array");
    var result = str;
    for (var i = 0; i < args.length; i++){
      result = result.replace(/%s/, args[i]);	
    }
    return result;
  },
  // 通过classname传递的参数必须通过'-'分隔各个参数
  // 返回值包含一个参数singleArgument,例:validate-pattern-/[a-c]/gi,singleArgument值为/[a-c]/gi
  getArgumentsByClassName : function(prefix,className) {
    if(!className || !prefix)
      return [];
    var pattern = new RegExp(prefix+'-(\\S+)');
    var matchs = className.match(pattern);
    if(!matchs)
      return [];
    var results = [];
    results.singleArgument = matchs[1];
    var args =  matchs[1].split('-');
    for(var i = 0; i < args.length; i++) {
      if(args[i] == '') {
        if(i+1 < args.length) args[i+1] = '-'+args[i+1];
      }else{
        results.push(args[i]);
      }
    }
    return results;
  },
  assert : function(condition,message) {
    var errorMessage = message || ("assert failed error,condition="+condition);
    if (!condition) {
      alert(errorMessage);
      throw new Error(errorMessage);
    }else {
      return condition;
    }
  },
  isDate : function(v,dateFormat) {
    var MONTH = "MM";
    var DAY = "dd";
    var YEAR = "yyyy";
    var regex = '^'+dateFormat.replace(YEAR,'\\d{4}').replace(MONTH,'\\d{2}').replace(DAY,'\\d{2}')+'$';
    if(!new RegExp(regex).test(v)) return false;

    var year = v.substr(dateFormat.indexOf(YEAR),4);
    var month = v.substr(dateFormat.indexOf(MONTH),2);
    var day = v.substr(dateFormat.indexOf(DAY),2);
		
    var d = new Date(ValidationUtils.format('%s/%s/%s',[year,month,day]));
    return ( parseInt(month, 10) == (1+d.getMonth()) ) && 
      (parseInt(day, 10) == d.getDate()) && 
      (parseInt(year, 10) == d.getFullYear() );		
  },
  getLanguage : function() {
    var lang = null;
    if (typeof navigator.userLanguage == 'undefined')
      lang = navigator.language.toLowerCase();
    else
      lang = navigator.userLanguage.toLowerCase();
    return lang;
  },
  getMessageSource : function() {
    var lang = ValidationUtils.getLanguage();
    var messageSource = Validator.messageSource['zh-cn'];
    if(Validator.messageSource[lang]) {
      messageSource = Validator.messageSource[lang];
    }
    return messageSource;
  }
};

Validator.messages = {
  'validation-failed' : '验证失败.',
  'required' : '请填写值.',
  'validate-number' : '请填写有效的数字.',
  'validate-digits' : '请填写数字.',
  'validate-alpha' : '请填写英文字母.',
  'validate-alphanum' : '请填写英文字母或是数字,其它字符是不允许的.',
  'validate-email' : '请填写有效的邮件地址,只能使用a-z A-Z 0-9 _ . -\',如 username@example.com。 ',
  'validate-url' : '请填写有效的URL地址.',
  'validate-currency-dollar' : 'Please enter a valid $ amount. For example $100.00 .',
  'validate-one-required' : '在上面选项至少选择一个.',
  'validate-integer' : '请填写正确的整数',
  'validate-pattern' : '填写的值不匹配',
  'validate-ip' : '请填写正确的IP地址',
  'min-value' : '最小值为%s',
  'max-value' : '最大值为%s',
  'min-length' : '最小长度为%s,当前长度为%s.',
  'max-length' : '最大长度为%s,当前长度为%s.',
  'int-range' : '填写值应该为 %s 至 %s 的整数',
  'float-range' : '填写值应该为 %s 至 %s 的数字',
  'length-range' : '填写值的长度应该在 %s 至 %s 之间,当前长度为%s',
  'equals' : '两次填写不一致,请重新填写',
  'less-than' : '请填写小于前面的值',
  'great-than' : '请填写大于前面的值',
  'validate-date' : '请填写有效的日期,格式为 %s. 例如:%s.',
  'validate-file' : function(v,elm,args,metadata) {
    return ValidationUtils.format("文件类型应该为[%s]其中之一",[args.join(',')]);
  },
  'validate-id-number' : '请填写合法的身份证号码',
  'validate-chinese' : '请填写中文',
  'validate-phone' : '请填写正确的电话号码,如:021-87654321,当前长度为%s.',
  'validate-mobile-phone' : '请填写正确的手机号码,当前长度为%s.',
  'validate-zip' : '请填写有效的邮政编码',
  'validate-qq' : '请填写有效的QQ号码.',
  'validate-richeditor' : '请填写值.',
  'validate-combobox' : '请填写值或选取前面的选项.',
  'max-tag' : '请填写1-%s个Tag.'
};

Validator.bad_words=[/fuck/i,/shit/i,/QQ群/i,/MSN群/i,/求(助|救)/,/(跪|裸)求/,/急急|我很急|紧急寻求/,/在线等/,/救(命|我|急|救)/,/急(!|！)/,/(高手|高人|大虾|大侠|达人|前辈|快来|没有人)(指点|解答|帮忙|帮帮|指教|赐教|提点|不吝赐教|到哪)/,/(我是|帮帮)(新手|小弟|菜鸟)/,/帮帮忙/, /万分火急/, /我顶|顶上去|好贴要顶|帮顶|看看先|顶一下/,/有*没有人(回答|帮忙|关注|知道啊|回复)/,/教主|装B|装13/,/关注(ing|中)/i,/收藏先/,/先收藏/,/收藏了/,/图书兼职作者/,/谢谢楼主/,/传智播客/,/FineReport/i];

Validator.prototype = {
  initialize : function(className, test, options) {
    this.options = Object.extend(new ValidatorDefaultOptions(), options || {});
    this._test = test ? test : function(v,elm){return true;};
    this._error = Validator.messages[className] ? Validator.messages[className] : Validator.messages['validation-failed'];
    this.className = className;
    this._dependsTest = this._dependsTest.bind(this);
    this._getDependError = this._getDependError.bind(this);
  },
  _dependsTest : function(v,elm) {
    if(this.options.depends && this.options.depends.length > 0) {
      var dependsResult = $A(this.options.depends).all(function(depend){
        return Validation.get(depend).test(v,elm);
      });
      return dependsResult;
    }
    return true;
  },
  test : function(v, elm) {
    if(!this._dependsTest(v,elm))
      return false;
    if(!elm) elm = {};
    return (this.options.ignoreEmptyValue && ((v == null) || (v.length == 0))) || this._test(v,elm,ValidationUtils.getArgumentsByClassName(this.className,elm.className),this);
  },
  _getDependError : function(v,elm,useTitle) {
    var dependError = null;
    $A(this.options.depends).any(function(depend){
      var validation = Validation.get(depend);
      if(!validation.test(v,elm))  {
        dependError = validation.error(v,elm,useTitle);
        return true;
      }
      return false;
    });
    return dependError;
  }, 
  error : function(v,elm,useTitle) {
    var dependError = this._getDependError(v,elm,useTitle);
    if(dependError != null) return dependError;

    var args  = ValidationUtils.getArgumentsByClassName(this.className,elm.className);
    var error = this._error;
    if(typeof error == 'string') {
      if(v) args.push(v.length);
      error = ValidationUtils.format(this._error,args);
    }else if(typeof error == 'function') {
      error = error(v,elm,args,this);
    }else {
      alert('property "_error" must type of string or function');
    }
    if(!useTitle) useTitle = elm.className.indexOf('useTitle') >= 0;
    return useTitle ? ((elm && elm.title) ? elm.title : error) : error;
  }
};

var Validation = Class.create();

Validation.prototype = {
  initialize : function(form, options){
    this.options = Object.extend(new ValidationDefaultOptions(), options || {});
    this.form = $(form);
    var formId =  ValidationUtils.getElmID($(form));
    Validation.validations[formId] = this;
    if(this.options.onSubmit) Event.observe(this.form,'submit',this.onSubmit.bind(this),false);
    if(this.options.immediate) {
      var useTitles = this.options.useTitles;
      var callback = this.options.onElementValidate;
      Form.getElements(this.form).each(function(input) { // Thanks Mike!
        Event.observe(input, 'blur', function(ev) {Validation.validateElement(Event.element(ev),{useTitle : useTitles, onElementValidate : callback});});
      });
    }
  },
  onSubmit :  function(ev){
    if(this.form.spinner && this.form.spinner.visible()) {
      Event.stop(ev);
    }else if(!this.validate()) {
      Event.stop(ev);
    }else {
      Event.observe(this.form,'submit',function(e){Event.stop(e);}.bind(this.form),false);
      if(this.form.spinner) {
        this.form.spinner.show();
      }else{
        this.form.spinner = $(document.createElement("img"));
        this.form.spinner.className = 'spinner_img';
        this.form.spinner.src = 'http://www.iteye.com/images/spinner.gif';
        Element.insert(this.form.select('input.submit')[0], {"after" : this.form.spinner});
      }
    }
  },
  validate : function() {
    var result = false;
    var useTitles = this.options.useTitles;
    var callback = this.options.onElementValidate;
    if(this.options.stopOnFirst) {
      result = Form.getElements(this.form).all(function(elm) {return Validation.validateElement(elm,{useTitle : useTitles, onElementValidate : callback});});
    } else {
      result = Form.getElements(this.form).collect(function(elm) {return Validation.validateElement(elm,{useTitle : useTitles, onElementValidate : callback});}).all();
    }
    if(!result && this.options.focusOnError) {
      var first = Form.getElements(this.form).findAll(function(elm){return $(elm).hasClassName('validation-failed');}).first();
      try{
        if(first.select) first.select();
        first.focus();
      }catch(e){}
    }
    this.options.onFormValidate(result, this.form);
    return result;
  }
};

Object.extend(Validation, {
  validateElement : function(elm, options){
    options = Object.extend({
      useTitle : false,
      onElementValidate : function(result, elm) {}
    }, options || {});
    elm = $(elm);
    var cn = elm.classNames();
    return cn.all(function(value) {
      var test = Validation.test(value,elm,options.useTitle);
      options.onElementValidate(test, elm);
      return test;
    });
  },
  showErrorMsg : function(name,elm,errorMsg) {           
    if(!elm.tooltip) elm.tooltip = new Tooltip(elm, {backgroundColor: "#FC9", borderColor: "#C96", textColor: "#000", textShadowColor: "#FFF"});
    elm.tooltip.content = errorMsg;
    elm.removeClassName('validation-passed');
    elm.addClassName('validation-failed');
  },
  showErrorMsgByValidator : function(name,elm,useTitle) {
    Validation.showErrorMsg(name,elm,Validation.get(name).error(ValidationUtils.getInputValue(elm),elm,useTitle));
  },
  hideErrorMsg : function(name,elm) {		
    if(elm.tooltip) {
      elm.tooltip.stop();
      elm.tooltip = false;            
    }
    elm.removeClassName('validation-failed');
    elm.addClassName('validation-passed');
  },
  test : function(name, elm, useTitle) {
    var v = Validation.get(name);
    if(!v.test(ValidationUtils.getInputValue(elm),elm)) {
      Validation.showErrorMsgByValidator(name,elm,useTitle);
      return false;
    } else {
      Validation.hideErrorMsg(name,elm);
      return true;
    }
  },
  getAdvice : function(name, elm) {
    return Try.these(
    function(){return $('advice-' + name + '-' + ValidationUtils.getElmID(elm));},
    function(){return $('advice-' + ValidationUtils.getElmID(elm));}
  );
  },
  add : function(className, test, options) {
    var nv = {};
    var testFun = test;
    if(test instanceof RegExp)
      testFun = function(v,elm,args,metadata){return test.test(v);};
    nv[className] = new Validator(className, testFun, options);
    Object.extend(Validation.methods, nv);
  },
  addAllThese : function(validators) {
    $A(validators).each(function(value) {
      Validation.add(value[0], value[1], (value.length > 2 ? value[2] : {}));
    });
  },
  get : function(name) {
    var resultMethodName;
    for(var methodName in Validation.methods) {
      if(name == methodName) {
        resultMethodName = methodName;
        break;
      }
      if(name.indexOf(methodName) >= 0) {
        resultMethodName = methodName;
      }
    }
    return Validation.methods[resultMethodName] ? Validation.methods[resultMethodName] : new Validator();
  },
  $ : function(formId) {
    return Validation.validations[formId];
  },
  methods : {},
  validations : {}
});

Validation.addAllThese([
  ['required', function(v) {
      return !((v == null) || (v.length == 0) || /^[\s|\u3000]+$/.test(v));
    },{ignoreEmptyValue:false}],
  ['validate-number', function(v) {
      return (!isNaN(v) && !/^\s+$/.test(v));
    }],
  ['validate-digits', function(v) {
      return !/[^\d]/.test(v);
    }],
  ['validate-alphanum', function(v) {
      return !/\W/.test(v);
    }],
  ['validate-one-required', function (v,elm) {
      var p = elm.parentNode;
      var options = p.getElementsByTagName('INPUT');
      return $A(options).any(function(elm) {
        return $F(elm);
      });
    },{ignoreEmptyValue : false}],
			
  ['validate-digits',/^[\d]+$/],		
  ['validate-alphanum',/^[a-zA-Z0-9]+$/],		
  ['validate-alpha',/^[a-zA-Z]+$/],

  ['validate-email',/^[\w.+-]+@(?:[-a-z0-9]+\.)+[a-z]{2,4}$/i],
  ['validate-url',/^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+)(:(\d+))?\/?/i],
  // [$]1[##][,###]+[.##]
  // [$]1###+[.##]
  // [$]0.##
  // [$].##
  ['validate-currency-dollar',/^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/]
]);

//custom validate start

Validation.addAllThese([
  /**
   * Usage : equals-$otherInputId
   * Example : equals-username or equals-email etc..
   */
  ['equals', function(v,elm,args,metadata) {
      return $F(args[0]) == v;
    },{ignoreEmptyValue:false}],
  /**
   * Usage : less-than-$otherInputId
   */
  ['less-than', function(v,elm,args,metadata) {
      if(Validation.get('validate-number').test(v) && Validation.get('validate-number').test($F(args[0])))
        return parseFloat(v) < parseFloat($F(args[0]));
      return v < $F(args[0]);
    }],
  /**
   * Usage : great-than-$otherInputId
   */
  ['great-than', function(v,elm,args,metadata) {
      if(Validation.get('validate-number').test(v) && Validation.get('validate-number').test($F(args[0])))
        return parseFloat(v) > parseFloat($F(args[0]));
      return v > $F(args[0]);
    }],
  /*
   * Usage: min-length-$number
   * Example: min-length-10
   */
  ['min-length',function(v,elm,args,metadata) {
      return v.length >= parseInt(args[0]);
    }],
  /*
   * Usage: max-length-$number
   * Example: max-length-10
   */
  ['max-length',function(v,elm,args,metadata) {
      return v.length <= parseInt(args[0]);
    }],
  /*
   * Usage: validate-file-$type1-$type2-$typeX
   * Example: validate-file-png-jpg-jpeg
   */
  ['validate-file',function(v,elm,args,metadata) {
      return $A(args).any(function(extentionName) {
        return new RegExp('\\.'+extentionName+'$','i').test(v);
      });
    }],
  /*
   * Usage: float-range-$minValue-$maxValue
   * Example: -2.1 to 3 = float-range--2.1-3
   */
  ['float-range',function(v,elm,args,metadata) {
      return (parseFloat(v) >= parseFloat(args[0]) && parseFloat(v) <= parseFloat(args[1]));
    },{depends : ['validate-number']}],
  /*
   * Usage: int-range-$minValue-$maxValue
   * Example: -10 to 20 = int-range--10-20
   */
  ['int-range',function(v,elm,args,metadata) {
      return (parseInt(v) >= parseInt(args[0]) && parseInt(v) <= parseInt(args[1]));
    },{depends : ['validate-integer']}],
  /*
   * Usage: length-range-$minLength-$maxLength
   * Example: 10 to 20 = length-range-10-20
   */
  ['length-range',function(v,elm,args,metadata) {
      return (v.length >= parseInt(args[0]) && v.length <= parseInt(args[1]));
    }],
  /*
   * Usage: max-value-$number
   * Example: max-value-10
   */
  ['max-value',function(v,elm,args,metadata) {
      return parseFloat(v) <= parseFloat(args[0]);
    },{depends : ['validate-number']}],
  /*
   * Usage: min-value-$number
   * Example: min-value-10
   */
  ['min-value',function(v,elm,args,metadata) {
      return parseFloat(v) >= parseFloat(args[0]);
    },{depends : ['validate-number']}],
  /*
   * Usage: validate-pattern-$RegExp
   * Example: <input id='sex' class='validate-pattern-/^[fm]$/i'>
   */
  ['validate-pattern',function(v,elm,args,metadata) {
      return eval('('+args.singleArgument+'.test(v))');
    }],
  /*
   * Usage: validate-ajax-$url
   * Example: <input id='email' class='validate-ajax-http://localhost:8080/validate-email.jsp'>
   */
  ['validate-ajax',function(v,elm,args,metadata) {
      var form = ValidationUtils.getReferenceForm(elm);
      var params = (form ? Form.serialize(form) : Form.Element.serialize(elm));
      params += ValidationUtils.format("&what=%s&value=%s",[elm.name,encodeURIComponent(v)]);
      var request = new Ajax.Request(args.singleArgument,{
        parameters : params,
        asynchronous : false,
        method : "post"
      });
		
      var responseText = request.transport.responseText;
      if("" == responseText.strip()) return true;
      metadata._error = responseText;
      return false;
    }],
  /*
   * Usage: validate-date-$dateFormat or validate-date($dateFormat default is yyyy-MM-dd)
   * Example: validate-date-yyyy/MM/dd
   */
  ['validate-date', function(v,elm,args,metadata) {
      var dateFormat = args.singleArgument || 'yyyy-MM-dd';
      metadata._error = ValidationUtils.format(Validator.messages[metadata.className],[dateFormat,dateFormat.replace('yyyy','2006').replace('MM','03').replace('dd','12')]);
      return ValidationUtils.isDate(v,dateFormat);
    }],	
  ['validate-integer',/^[-+]?[1-9]\d*$|^0$/],
  ['validate-ip',/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/],
  //中国相关验证开始
  ['validate-id-number',function(v,elm,args,metadata) {
      if(!(/^\d{17}(\d|x)$/i.test(v) || /^\d{15}$/i.test(v))) return false;
      var provinceCode = parseInt(v.substr(0,2));
      if((provinceCode < 11) || (provinceCode > 91)) return false;
      var forTestDate = v.length == 18 ? v : v.substr(0,6)+"19"+v.substr(6,15);
      var birthday = forTestDate.substr(6,8);
      if(!ValidationUtils.isDate(birthday,'yyyyMMdd')) return false;
      if(v.length == 18) {
        v = v.replace(/x$/i,"a");
        var verifyCode = 0;
        for(var i = 17;i >= 0;i--)   
          verifyCode += (Math.pow(2,i) % 11) * parseInt(v.charAt(17 - i),11);
        if(verifyCode % 11 != 1) return false;
      }
      return true;
    }],
  ['validate-chinese',/^[\u4e00-\u9fa5]+$/],
  ['validate-phone',/^((0[1-9]{3})?(0[12][0-9])?[-])?\d{6,8}$/],
  ['validate-mobile-phone',/(^0?[1][35][0-9]{9}$)/],
  ['validate-zip',/^[1-9]\d{5}$/],
  ['validate-qq',/^[1-9]\d{4,8}$/],
	
  //javaeye added
  ['validate-richeditor', function(v, elm) {
      if(editor.mode == "rich") {
        v = tinyMCE.activeEditor.getContent().stripTags().replace(/&nbsp;/g,' ');	
      }
      return !((v == null) || (v.length == 0) || /^[\s|\u3000]+$/.test(v));			
    },{ignoreEmptyValue:false}],
	
  ['bad-words', function(v) {
      for (var i=0; i < Validator.bad_words.length; i++) {
        var m = v.match(Validator.bad_words[i]);
        if (m) {
          alert("ITeye发贴提示\n\nITeye网站不允许您使用 \"" + m[0] + "\" 这样的词汇发贴！\n\n您很可能违反了网站规则，请仔细阅读并遵守网站规则，否则将被扣分删贴。\n\n");
          return false;
        }}
      return true;		
    }],
  ['validate-combobox', function(v, elm, args) {
      var v = $F(args[0]);
      return Validation.get('required').test(elm.value) || Validation.get('required').test(v);
    },{ignoreEmptyValue:false}],

  /*
   * Usage: max-tag-$number
   * Example: max-tag-3
   */
  ['max-tag', function(v, elm, args){
    return v.replace(/^\s+|\s+$/g, '').split(/,\s*|，\s*/).length <= parseInt(args[0]);
  }]
]);
String.prototype.trim = function() {return this.replace(/^\s+|\s+$/g, '');};

function multiple_upload_attachment(ele, max_size) {
  Event.observe(ele, 'change', function() {
    addAttachmentDiv(ele, max_size);
  });
  if (multiple_upload_attachment_counter >= max_size) ele.disabled = true;
}

var attachment_template = new Template('<table><tr><th>文件:</th><td><span>#{filename}</span><span class="more"><a href="#" class="delete">删除</a></span><div class="clear"></div></td></tr><tr><th>描述:</th><td><textarea name="attachments[][remark]" cols="" rows=""></textarea></td></tr></table>');

function addAttachmentDiv(ele, max_size) {
  if (!$A(['jpg','jpeg','bmp','png','gif','rar','zip', 'tar', 'gz', 'jar', 'war', 'bz2', '7z']).any(function(extName){return new RegExp('\\.'+extName+'$','i').test(ele.value);})){
    alert("如果您上传图片，请上传JPG、BMP、PNG或者GIF格式的图片\n如果您上传附件，请先压缩再上传");
      return false;
  }

  multiple_upload_attachment_counter++;
  var div = attachment_template.evaluate({filename: ele.value}); 
  var new_input = new Element("input", {type: "file", name: ele.name, id: ele.id, disabled: multiple_upload_attachment_counter >= max_size});

  Event.observe(new_input, 'change', function() {
    addAttachmentDiv(new_input, max_size);
  });
  $('groups_upload_button').insert({before : div});
  ele.insert({after: new_input});
  ele.id = ele.id + multiple_upload_attachment_counter;
  ele.name = "attachments[][uploaded_data]";
  div = $('groups_upload_button').previous();
  div.down('.delete').observe('click', function(event) {
    removeAttachmentDiv(this);
  });
  div.appendChild(ele.hide());
}

function removeAttachmentDiv(link) {
  multiple_upload_attachment_counter--;
  link.up('table').remove();
  $('attachment_upload').disabled = false;
}

function multiple_upload_picture(ele, max_size, tags) {
  Event.observe(ele, 'change', function() {
    addPictureDiv(ele, max_size, tags);
  });
  if (multiple_upload_picture_counter >= max_size) ele.disabled = true;
}

function addPictureDiv(ele, max_size, tags) {
  if (!$A(['jpg','jpeg','bmp','png','gif']).any(function(extName){return new RegExp('\\.'+extName+'$','i').test(ele.value);})){
    alert("您上传的图片格式不支持，请您上传JPG、BMP、PNG或者GIF格式的图片");
    return false;
  }
  
  multiple_upload_picture_counter++;
  //fix for opera
  var file_name = ele.value;
  try {file_name = ele.value.match(/(.*)[\/\\]([^\/\\]+)\.\w+$/)[2];} catch(e) {} 
  var tag_select = "";
  if(tags.length > 0) {
    var tag_select = "<select onchange='Element.previous($(this)).value = this.value;'><option value=''>选择已有标签</option>";
    for (var i = 0; i < tags.length; i++)
      tag_select += "<option value='" + tags[i] + "'>" + tags[i] + "</option>";
    tag_select += "</select>";
  }
  var div = new Element("div").update("<ul><li>文件: " + ele.value + " <a href='#' onclick='removePictureDiv(this, \"" + ele.id + "\");return false;'>删除</a></li><li>名称: <input type='text' name='pictures[][name]' value='" + file_name + "' size='50' class='text'/></li><li>描述: <textarea name='pictures[][description]' style='width:400px;height:80px;'></textarea></li></ul>");
  var new_input = new Element("input", {type: "file", name: ele.name, id: ele.id, disabled: multiple_upload_picture_counter >= max_size});
  
  Event.observe(new_input, 'change', function() {
    addPictureDiv(new_input, max_size, tags);
  });
  ele.insert({after : div});
  div.insert({after : new_input});
  ele.id = ele.id + multiple_upload_picture_counter;
  ele.name = "pictures[][uploaded_data]";
  div.appendChild(ele.hide().remove());
}

function removePictureDiv(link, eleId) {
  multiple_upload_picture_counter--;
  link.parentNode.parentNode.parentNode.remove();
  $(eleId).disabled = false;
}

function move_messages(dest) {
  $('dest').value = dest;
  $('messages_form').submit();
}

function digg(type, id, bury) {
    var url = '/' + type + (bury ? '/bury' : '/digg');
    var small_button = !!$('d' + id);
    if(small_button) $('d'+id).innerHTML = "<h3><img src='/images/spinner.gif'/><br/><span>...</span></h3>";

    if($('digg_bottom')){
      $$('#digg_bottom div').each(function(div){div.innerHTML="<img src='/images/spinner.gif'/>";});
      new Ajax.Request(url,{asynchronous:true,evalScripts:true,parameters:{"id":id, "bottom":true, small_button:small_button}});
    }else{
      new Ajax.Request(url,{asynchronous:true,evalScripts:true,parameters:{"id":id, small_button:small_button}});
    }
}

function bury_blog(blog_id) {
    $('b' + blog_id).innerHTML = "<h3><img src='/images/spinner.gif'/><br/><span>...</span></h3>";
    if($('digg_bottom') != undefined) {
        $$('#digg_bottom div').each(function(div){div.innerHTML="<img src='/images/spinner.gif'/>";});
        new Ajax.Request('/blogs/bury',{asynchronous:true,evalScripts:true,parameters:{"id":blog_id, "bottom":true}});
    }else{
        new Ajax.Request('/blogs/bury',{asynchronous:true,evalScripts:true,parameters:{"id":blog_id}});
    }
}

function fix_image_size(images, maxW) {
  if(images.length > 0) {
    Event.observe(window,'load',function() {
      images.each(function(img) {
        var w = img.width;
        var h = img.height;
        if (w > maxW) {
          var f = 1-((w - maxW) / w);
          img.title = "点击查看原始大小图片";
          img.addClassName("magplus");
          img.onclick = function() {window.open(this.src);};
          img.width = w * f;
          img.height = h * f;
        }
      });
    });
  }
}

function highlight_suggested_tags(tags) {
    if ($('suggested_tags_panel') !== null) {
        $('suggested_tags_panel').select('a').each( function(el) {
            var exist_tag = tags.find(function(tag){
                return tag.match(new RegExp('^' + el.text + '$', 'i'));
            });
            if (exist_tag) {
                el.addClassName('added');
            } else {
                el.removeClassName('added');
            }
        });
    }
}

function extract_tag_list(value) {
    var tags = value.trim().split(/,\s*|，\s*/).without('');
    highlight_suggested_tags(tags);
    tag_list = tags.map(function(tag) { 
        return "<span>" + tag + "</span>";
    }).join('');
    if (!tag_list.empty()) {
        tag_list = '当前标签：' + tag_list;
    }
    if ($("current_tags_panel") !== null) {
        $("current_tags_panel").update(tag_list);
    }
}

function observe_tag_list(id) {
    extract_tag_list($(id).value);
    new Form.Element.Observer(
        id,
        0.2,
        function(el, value) {
            extract_tag_list(value);
        }
    )
}

function trigger_suggested_tag() {
  var tag_list_input = this.parentNode.previous("input");
  var current_value = tag_list_input.value.trim();
  if (this.hasClassName('added')) {
    var tag_regex = new RegExp('^' + this.text + '$', 'i')
    tag_list_input.value = current_value.split(/,\s*|，\s*/).findAll(function(tag){
      tag = tag.trim();
      if (tag !== '' && !tag_regex.match(tag)) {
        return true;
      }
    }).join(', ');
    this.removeClassName('added');
  } else {
    if(current_value !== "" && current_value[current_value.length-1] !== ","){
      tag_list_input.value += ", ";
    }
    tag_list_input.value += this.innerHTML;
    this.addClassName('added');
  }
  Validation.validateElement($(tag_list_input));
}

function check_category_list(checkboxes, category_list){
  checkboxes.each(function(element){
    element.checked = category_list.split(',').any(function(name){
      return name.trim().toLowerCase() == this;
    }, element.value.toLowerCase());
  });
}

document.observe("dom:loaded",function(){
    $$("div.quick_menu").each(function(ele) {
        Event.observe(ele.previous(), 'mouseover', function(e) {
            $$("div.quick_menu").invoke('hide');
            ele.style.left = ele.previous().positionedOffset()[0] + "px";
            ele.show();
        });
        Event.observe(ele.previous(), 'mouseout', function(e) {
            if(!Position.within(ele,Event.pointerX(e),Event.pointerY(e) + 5))
                ele.hide();
        });
        Event.observe(ele, 'mouseout', function(e) {
            if(!Position.within(ele,Event.pointerX(e),Event.pointerY(e)))
                ele.hide();
        });
    });
    $$("div.nav_side > ul > li:not(.select)").each(function(ele) {
      Event.observe(ele, 'mouseover', function(e) {
        Event.findElement(e, 'LI').addClassName('select');
      });
      Event.observe(ele, 'mouseout', function(e) {
        Event.findElement(e, 'LI').removeClassName('select');
      });
    });

    $$('#blog_category_checkbox input[type=checkbox]').each(function(element){
      element.observe('change', function(ev){
        var current_value = $('blog_category_list').value.trim();
        if(this.checked) {
          if(current_value == '' || current_value[current_value.length -1] == ',')
            $('blog_category_list').value += this.value;
          else
            $('blog_category_list').value += (','+this.value);
        } else {
          $('blog_category_list').value = current_value.split(',').reject(function(name){
            return name.trim() == this;
          }, this.value).join(',');
        }
      });
    });

});

//IE6 background image cache fix
try {document.execCommand('BackgroundImageCache', false, true);} catch(e) {}



//resume

function add_work_experience(button, content){
  var new_id = new Date().getTime();
  $(button).up().insert({before: content.replace(/new_work_experiences/g, new_id)});
}

function add_project_experience(link, content){
  var new_id = new Date().getTime();
  $(link).up().insert({before: content.replace(/new_project_experiences/g, new_id)});
}

function add_education(button, content){
  var new_id = new Date().getTime();
  $$('.editing .educations')[0].insert({bottom: content.replace(/new_educations/g, new_id)});
}

function add_training(button, content){
  var new_id = new Date().getTime();
  $$('.editing .trainings')[0].insert({bottom: content.replace(/new_trainings/g, new_id)});
}

function add_certificate(button, content){
  var new_id = new Date().getTime();
  $$('.editing .certificates')[0].insert({bottom: content.replace(/new_certificates/g, new_id)});
}

function add_skill(button, content){
  $$('.editing .skills')[0].insert({bottom: content});
}

function add_language(button, content){
  $$('.editing .languages')[0].insert({bottom: content});
}

document.observe("dom:loaded",function(){
  $$('#my_resume .control .expand').each(function(el){
    el.hide();
  });
  document.observe('click', function(event){

    if(el = event.findElement('#my_resume .control .expand')){
      el.up('h1').next('.view_con').show();
      el.previous('.contract').show();
      el.hide();
      event.stop();
    } else if(el = event.findElement('#my_resume .control .contract')){
      el.up('h1').next('.view_con').hide();
      el.next('.expand').show();
      el.hide();
      event.stop();
    } else if (el = event.findElement('#my_resume .control .edit')){
      if($('profile_invalid_flag') && !(/myresume\/edit$/.test(el['href']))){
        alert("个人资料不完整,请先完善个人资料");
      }else{
        new Ajax.Request(el['href'], {
          method: 'get',
          onSuccess: function(res){
            el.up('.view').replace(res.responseText);
          }
        });
      }
      event.stop();
    } else if (el = event.findElement('.work_exp > .del_work a.del')){
      if(confirm("确定要删除该工作经验吗？")){
        if(/\#$/.test(el['href'])){
          el.up('.work_exp').remove();
        } else {
          new Ajax.Request(el['href'], {
            method: 'delete',
            onSuccess: function(res){
              el.up('.work_exp').remove();
            }
          });
        }
      }
      event.stop();
    } else if(el = event.findElement('.project_exp > .del_project a.del')) {
      if(confirm("确定要删除该项目经验吗？")){
        if(/\#$/.test(el['href'])){
          el.up('.project_exp').remove();
        } else {
          new Ajax.Request(el['href'], {
            method: 'delete',
            onSuccess: function(res){
              el.up('.project_exp').remove();
            }
          });
        }
      }
      event.stop();
    } else if(el = event.findElement('.edu_exp a.del')){
      if(confirm("确定要删除吗？")){
        if(/\#$/.test(el['href'])){
          el.up('.edu_exp').remove();
        } else {
          new Ajax.Request(el['href'], {
            method: 'delete',
            onSuccess: function(res){
              el.up('.edu_exp').remove();
            }
          });
        }
      }
      event.stop();
    } else if (el = event.findElement('.skills a.del')){
      if(confirm("确定要删除该技能吗？")){
        if(/\#$/.test(el['href'])){
          el.up('li').remove();
        } else {
          var form = el.up('form');

          el.up('li').getElementsBySelector('.level input[type=radio]').each(function(radio){
            radio['name'] = 'destroied';
          });

          new Ajax.Request(el['href'], {
            method: 'delete',
            parameters: form.serialize(),
            onSuccess: function(){
              el.up('li').remove();
            }
          });
        }
      }
      event.stop();
    } else if (el = event.findElement('.languages a.del')) {
      if (confirm("确定要删除该语种吗?")) { 
        if(/\#$/.test(el['href'])){
          el.up('li').remove();
        }else{
          var form = el.up('form');

          el.up('li').getElementsBySelector('.level select').each(function(select_elem){
            select_elem['name'] = 'destroied';
          });

          new Ajax.Request(el['href'], {
            method: 'delete',
            parameters: form.serialize(),
            onSuccess: function(){
              el.up('li').remove();
            }
          });
        }
      }
      event.stop();
    }

  });

  var resume_submit_precess = function(event){
    if(form = event.findElement('#my_resume .editing form.remote')){
      form.request({
        onSuccess: function(res){
          var prev = form.up('.editing').previous();
          prev.insert({after: res.responseText});
          prev.next().down('.expand').hide();
          form.up('.editing').remove();
        }
      });
      event.stop();
    }
  };
  if(Prototype.Browser.IE){
    document.observe('focusin', function(event){
      var form = event.findElement("#my_resume form");
      if(form && !form.submit_bubbles_on_ie){
        form.submit_bubbles_on_ie = true;
        form.observe('submit', resume_submit_precess);
      }
    });
  }else{
    document.observe('submit', resume_submit_precess);
  }



  var resume_change_process = function(event){
    if(select = event.findElement('#my_resume .skills .title .skill_option_one')){
      var two_elem = select.next();
      var skill_title = '';
      if('手动添加' == select['value']){
        two_elem.replace('<input class="skill_option_two" name="skill_option_two" style="width:80px;" type="text">');
      }else{
        if(two_elem.nodeName.toUpperCase() == "SELECT"){
          two_elem.length = 0;
        }else{
          two_elem.replace(new Element('select', {'class':'skill_option_two', 'name': 'skill_option_two'}));
        }
        window.skill_options_two.get(select['value']).each(function(v){ select.next().appendChild(new Element('option', { 'value': v }).update(v)); });
        skill_title = window.skill_options_two.get(select['value'])[0];
      }
      select.up('.title').next('.level').getElementsBySelector('input').each(function(radio){
        radio.checked = false;
        radio['name'] = 'resume[skills][' + skill_title + ']';
      });
    }else if(select = event.findElement('#my_resume .skills .title .skill_option_two')){
      select.up('.title').next('.level').getElementsBySelector('input').each(function(radio){
        radio.checked = false;
        radio['name'] = 'resume[skills][' + select['value'] + ']';
      });
    }else if(select = event.findElement('#my_resume .languages .title select')){
      select.up('.title').next('.level').getElementsBySelector('select').each(function(select_elem){
        select_elem['name'] = 'resume[languages]['+ select['value'] +'][]';
      });
    }else if(select = (event.findElement('#my_resume .work_exp select.company_industry') || event.findElement('#company_industry_search'))){
      if(select['value'] == '其它'){
         var elem_str = "<input type='text' class='input_1 required' style='margin-left: 10px;' name='" + select['name'] + "' />"
         if(select['id'] == 'company_industry_search'){elem_str = "<input type='text' class='text' style='margin-left: 10px;' name='" + select['name'] + "' />"}
         select.insert({'after': elem_str});
         select['name'] = '';
      }else{
        var ci_text_elem = select.next('input');
        if(ci_text_elem){
          select['name'] = ci_text_elem['name'];
          select.next('input').remove();
        }
      }
    }else if(select = event.findElement('#skills_search')){
      if(select['value'] == '其它'){
        select.insert({'after': "<input type='text' class='text' style='margin-left:10px;' name='"+ select['name'] +"' />"})
        select['name'] = '';
      }else{
        var ci_text_elem = select.next('input');
        if(ci_text_elem){
          select['name'] = ci_text_elem['name'];
          select.next('input').remove();
        }
      }
    }
  };
  if(Prototype.Browser.IE){
    document.observe('focusin', function(event){
      var select = event.findElement("#my_resume select");
      if(select && !select.change_bubbles_on_ie){
        select.change_bubbles_on_ie = true;
        select.observe('change', resume_change_process);
      }
    });
  }else{
    document.observe('change', resume_change_process);
  }
});

function add_vote_option(btn, html_str){
  var new_id = new Date().getTime();
  $(btn).up().previous().insert({bottom: html_str.replace(/new_vote_option_id/g, new_id)});
}
function del_vote_option(vote_option){
  vote_option = $(vote_option);
  var tr1 = vote_option.up(1);
  var tr2 = tr1.next();
  var vote_option_url = vote_option.getAttribute('url');
  if(vote_option_url){
    if(confirm('慎用,如投票选项下有很多投票,会删除其所有投票,而增加服务器压力')){
    new Ajax.Request(vote_option_url, {
        method: 'delete',
        onSuccess: function(transport){ tr1.remove(); tr2.remove();}
        });
    }
  }else{
    tr1.remove();
    tr2.remove();
  }
}
/* JSON-P implementation for Prototype.js somewhat by Dan Dean (http://www.dandean.com)
 * 
 * *HEAVILY* based on Tobie Langel's version: http://gist.github.com/145466.
 * Might as well just call this an iteration.
 * 
 * This version introduces:
 * - Support for predefined callbacks (Necessary for OAuth signed requests, by @rboyce)
 * - Partial integration with Ajax.Responders (Thanks to @sr3d for the kick in this direction)
 * - Compatibility with Prototype 1.7 (Thanks to @soung3 for the bug report)
 * - Will not break if page lacks a <head> element
 *
 * See examples in README for usage
 *
 * VERSION 1.1.2
 *
 * new Ajax.JSONRequest(url, options);
 * - url (String): JSON-P endpoint url.
 * - options (Object): Configuration options for the request.
 */
Ajax.JSONRequest = Class.create(Ajax.Base, (function() {
  var id = 0, head = document.getElementsByTagName('head')[0] || document.body;
  return {
    initialize: function($super, url, options) {
      $super(options);
      this.options.url = url;
      this.options.callbackParamName = this.options.callbackParamName || 'callback';
      this.options.timeout = this.options.timeout || 10; // Default timeout: 10 seconds
      this.options.invokeImmediately = (!Object.isUndefined(this.options.invokeImmediately)) ? this.options.invokeImmediately : true ;
      
      if (!Object.isUndefined(this.options.parameters) && Object.isString(this.options.parameters)) {
        this.options.parameters = this.options.parameters.toQueryParams();
      }
      
      if (this.options.invokeImmediately) {
        this.request();
      }
    },
    
    /**
     *  Ajax.JSONRequest#_cleanup() -> undefined
     *  Cleans up after the request
     **/
    _cleanup: function() {
      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
      }
      if (this.transport && Object.isElement(this.transport)) {
        this.transport.remove();
        this.transport = null;
      }
    },
  
    /**
     *  Ajax.JSONRequest#request() -> undefined
     *  Invokes the JSON-P request lifecycle
     **/
    request: function() {
      
      // Define local vars
      var response = new Ajax.JSONResponse(this);
      var key = this.options.callbackParamName,
        name = '_prototypeJSONPCallback_' + (id++),
        complete = function() {
          if (Object.isFunction(this.options.onComplete)) {
            this.options.onComplete.call(this, response);
          }
          Ajax.Responders.dispatch('onComplete', this, response);
        }.bind(this);
      
      // If the callback parameter is already defined, use that
      if (this.options.parameters[key] !== undefined) {
        name = this.options.parameters[key];
      }
      // Otherwise, add callback as a parameter
      else {
        this.options.parameters[key] = name;
      }
      
      // Build request URL
      this.options.parameters[key] = name;
      var url = this.options.url + ((this.options.url.include('?') ? '&' : '?') + Object.toQueryString(this.options.parameters));
      
      // Define callback function
      window[name] = function(json) {
        this._cleanup(); // Garbage collection
        window[name] = undefined;

        response.status = 200;
        response.statusText = "OK";
        response.setResponseContent(json);

        if (Object.isFunction(this.options.onSuccess)) {
          this.options.onSuccess.call(this, response);
        }
        Ajax.Responders.dispatch('onSuccess', this, response);

        complete();

      }.bind(this);
      
      this.transport = new Element('script', {type: 'text/javascript', src: url});
      
      if (Object.isFunction(this.options.onCreate)) {
        this.options.onCreate.call(this, response);
      }
      Ajax.Responders.dispatch('onCreate', this);
      
      head.appendChild(this.transport);

      this.timeout = setTimeout(function() {
        this._cleanup();
        window[name] = Prototype.emptyFunction;
        if (Object.isFunction(this.options.onFailure)) {
          response.status = 504;
          response.statusText = "Gateway Timeout";
          this.options.onFailure.call(this, response);
        }
        complete();
      }.bind(this), this.options.timeout * 1000);
    },
    toString: function() {return "[object Ajax.JSONRequest]";}
  };
})());

Ajax.JSONResponse = Class.create({
  initialize: function(request) {
    this.request = request;
  },
  request: undefined,
  status: 0,
  statusText: '',
  responseJSON: undefined,
  responseText: undefined,
  setResponseContent: function(json) {
    this.responseJSON = json;
    this.responseText = Object.toJSON(json);
  },
  getTransport: function() {
    if (this.request) return this.request.transport;
  },
  toString: function() {return "[object Ajax.JSONResponse]";}
});document.observe("dom:loaded", function() {
  (function(){
    function is_ie6(){
      return ((window.XMLHttpRequest == undefined) && (ActiveXObject != undefined));
    }

    var notifications;
    var unread_count = 0;
    var notifications_count = $('notifications_count');
    var notifications_menu = $('notifications_menu');
    var notifications_summary, notifications_detail;

    var Render = {
      summary_names : function(names) {
        if (names.length > 3) {
          return new Template('#{names}和另外#{other}人').evaluate({
            'names' : names.clone().splice(0,3).join('，'), 'other' : names.length - 3
          });
        } else {
          return names.join('，');
        }
      },

      template_blog_comment : function(notification) {
        this.render_comments_common_template(notification, 'blog', '回复了您的博客文章');
      },

      template_blog_comment_other : function(notification) {
        this.render_comments_common_template(notification, 'blog', '回复了您回复过的博客文章');
      },

      template_topic_post : function(notification) {
        this.render_comments_common_template(notification, 'topic', '回复了您的论坛主题', 'posts');
      },

      template_topic_post_other : function(notification) {
        this.render_comments_common_template(notification, 'topic', '回复了您回复过的论坛主题', 'posts');
      },

      template_group_topic_post : function(notification) {
        this.render_comments_common_template(notification, 'topic', '回复了您的群组主题', 'posts');
      },

      template_group_topic_post_other : function(notification) {
        this.render_comments_common_template(notification, 'topic', '回复了您回复过的群组主题', 'posts');
      },

      template_news_comment: function(notification) {
        this.render_comments_common_template(notification, 'news', '评论了您的资讯文章');
      },

      template_news_comment_other: function(notification) {
        this.render_comments_common_template(notification, 'news', '评论了您评论过的资讯文章');
      },

      template_essence_comment: function(notification) {
        this.render_comments_common_template(notification, 'essence', '评论了您的精华文章');
      },

      template_essence_comment_other: function(notification) {
        this.render_comments_common_template(notification, 'essence', '评论了您评论过的精华文章');
      },

      template_problem_solution: function(notification) {
        this.render_comments_common_template(notification, 'problem', '回答了您的问题', 'solutions');
      },

      template_problem_solution_other: function(notification) {
        this.render_comments_common_template(notification, 'problem', '回答了您回答过的问题', 'solutions');
      },

      template_problem_solution_follow: function(notification) {
        this.render_comments_common_template(notification, 'problem', '回答了您关注的问题', 'solutions');
      },

      template_problem_comment: function(notification) {
        this.render_comments_common_template(notification, 'problem', '评论了您的问题', 'comments');
      },

      template_problem_comment_follow: function(notification) {
        this.render_comments_common_template(notification, 'problem', '评论了您关注的问题', 'comments');
      },

      template_problem_follow: function(notification) {
        this.render_comments_common_template(notification, 'problem', '关注了您的问题', 'follows');
      },

      template_solution_comment: function(notification) {
        this.render_comments_common_template(notification, 'solution', '评论了您的回答', 'comments');
      },

      template_event_comment: function(notification) {
        this.render_comments_common_template(notification, 'event', '评论了您的活动', 'comments');
      },

      template_event_comment_other: function(notification) {
        this.render_comments_common_template(notification, 'event', '评论了您评论过的活动', 'comments');
      },

      template_event_comment_member: function(notification) {
        this.render_comments_common_template(notification, 'event', '评论了您参与的活动', 'comments');
      },

      template_page_comment: function(notification) {
        this.render_comments_common_template(notification, 'page', '评论了您的知识库', 'comments');
      },

      template_page_comment_other: function(notification) {
        this.render_comments_common_template(notification, 'page', '评论了您评论过的知识库', 'comments');
      },

      render_comments_common_template : function(notification, subject, title, comments) {
        comments = comments || 'comments';
        var names = notification[comments].map(function(comment) {return comment.user.name;}).uniq();
        var summary = this.summary_names(names) + title;

        var link = new Template(' <span class="subject_link"><a href="#{url}" target="_blank">#{title}</a></span>').evaluate({
          'summary' : summary, 'url' : notification[subject].url, 'title' : notification[subject].title
        });
        var detail_items = new Element('div', {'class' : 'detail_items'});
        notification[comments].each(function(comment, index) {
          if (index > 2) {
            var template = new Template('<div class="notification_detail_item clearfix" style="display:none;"><span class="left"><a href="#{user_url}" target="_blank">#{user_name}</a>：#{body} </span><span class="time">#{time}</span></div>')
          } else {
            var template = new Template('<div class="notification_detail_item clearfix"><span class="left"><a href="#{user_url}" target="_blank">#{user_name}</a>：#{body}</span> <span class="time">#{time}</span></div>')
          }
          detail_items.insert(template.evaluate({
            user_url : comment.user.url, user_name : comment.user.name, body : comment.body, time : comment.created_at
          }));
          if (comment.url) {
            var comment_link = ' <a target="_blank" href="' + comment.url + '">查看</a>';
            detail_items.select(":last-child .left")[0].insert(comment_link);
          }
          if (index === 2 && notification[comments].length > 3) {
            var actions = new Element('div', {'class' : 'notification_detail_item clearfix'});
            var show_all = new Element('a', {'class': 'show_all'}).update('查看另外'+ (notification[comments].length - 3) + '条' );
            show_all.observe('click', function(ev) {
              this.up().siblings().each(Element.show);
              this.up().hide();
            });
            actions.insert(show_all);
            detail_items.insert(actions);
          }
        });

        this.render_common_template(notification, {summary : summary, detail_title : summary + link, detail_items : detail_items});
      },

      template_subscription: function(notification) {
        var names = notification.subscribers.map(function(subscriber) {return subscriber.name;}).uniq();
        var summary = new Template('#{names}关注了您').evaluate({
          names : this.summary_names(names)
        });

        var detail_items = new Element('div', {'class' : 'detail_items'});
        notification.subscribers.each(function(subscriber){
          detail_items.insert(new Template('<div class="notification_detail_item clearfix"><div class="logo"><a href="#{user_url}" target="_blank"><img src="#{logo_path}" /></a></div><a href="#{user_url}" target="_blank">#{user_name}</a></div>').evaluate({
            user_url : subscriber.url, user_name : subscriber.name, logo_path : subscriber.logo_path
          }));
        });
        this.render_common_template(notification, {summary : summary, detail_title : summary, detail_items : detail_items});
      },

      template_common: function(notification) {
        this.render_common_template(notification, {summary : notification.title,
          detail_title : notification.title, detail_content : notification.detail,
          detail_notice : notification.notice});
      },

      render_common_template: function(notification, params){
        var summary = new Element('div', {id: 'notification_summary_' + notification.id, 'class' : "notification_summary clearfix"});
        var summary_title = new Element('div', {'class' : 'left'}).update(params.summary);
        var time = '<span class="time">' + notification.updated_at + '</span>';
        if (!notification.read) {
          summary.addClassName("unread");
        }
        summary.update(summary_title).insert(time);
        notifications_summary.insert(summary);

        var detail = new Element('div', {id : 'notification_' + notification.id, 'class' : 'notification_detail clearfix'});
        detail.update('<div class="notification_detail_title clearfix"></div><div class="notification_detail_content clearfix"></div>').hide();
        var detail_title = new Element('div', {'class' : 'left'}).update(params.detail_title);
        detail.down('.notification_detail_title').insert(detail_title).insert(time);
        var content = detail.down('.notification_detail_content');
        if (params.detail_content) {
          content.insert(new Element('div', {'class' : 'system_message'}).insert(params.detail_content));
        }
        if (params.detail_items) {content.insert(params.detail_items);}
        if (params.detail_notice) {
          var notice = new Element('div', {'class' : 'notification_detail_notice clearfix'}).update(params.detail_notice);
          detail.insert({bottom : notice});
        }
        notifications_detail.insert(detail);

        summary.observe('click', function(ev) {
          if (notifications_summary.down('.current')) {
            notifications_summary.down('.current').removeClassName('current');
          }
          this.addClassName('current');
          summary_to_detail();
        });
      }
    }

    function refresh_paginate_button() {
      var current = notifications_detail.down('.current')
      if (current.next('.notification_detail')) {
        $('next_button').removeClassName('disable');
      } else {
        $('next_button').addClassName('disable');
      }
      if (current.previous('.notification_detail')) {
        $('prev_button').removeClassName('disable');
      } else {
        $('prev_button').addClassName('disable');
      }
    }

    var change_page_effect_running = false;
    function change_page_effect(from, to, reverse) {
      var topOffset = from.positionedOffset()[1] + 'px';
      var from_status, to_status;
      change_page_effect_running = true;
      function clean_style(effect){
        if (effect.element.id === from.id) {
          from_status = true;
        } else {
          to_status = true;
        }
        if (from_status && to_status) {
          from.writeAttribute('style', 'display:none');
          to.writeAttribute('style', '');
          change_page_effect_running = false;
          if (!is_ie6() && notifications_detail.visible()) {
            var link = notifications_detail.down('.current').select('a').first();
            if (link) {link.focus();}
          }
        }
      }
      var width = notifications_menu.getWidth();
      var widthPx = width + 'px';
      if (reverse) {
        to.setStyle({position: 'absolute', left: '-' + widthPx, width: widthPx, top: topOffset}).show();
        Effect.multiple([from, to], Effect.Move, {speed: 0, x: width, duration: 0.15, afterFinish: clean_style});
      } else {
        to.setStyle({position: 'absolute', left: widthPx, width: widthPx, top: topOffset}).show();
        Effect.multiple([from, to], Effect.Move, {speed: 0, x: -width, duration: 0.15, afterFinish: clean_style});
      }
    }

    function read_detail(detail) {
      $('notification_summary_' + detail.id.split('_').last()).removeClassName('unread');
    }

    function change_detail_page(current, to, reverse) {
      current.removeClassName('current');
      to.addClassName('current');
      var id = to.id.split('_').last();
      notifications_summary.down('.current').removeClassName('current');
      notifications_summary.down('#notification_summary_' + id).addClassName('current');
      change_page_effect(current, to, reverse);
      read_detail(to);
      refresh_paginate_button();
    }

    function next_detail() {
      var current = notifications_detail.down('.current');
      var next_page = current.next('.notification_detail');
      if (next_page) {
        change_detail_page(current, next_page);
      }
    }

    function prev_detail() {
      var current = notifications_detail.down('.current');
      var prev_page = current.previous('.notification_detail');
      if (prev_page) {
        change_detail_page(current, prev_page, true);
      }
    }

    function init_detail_paginate() {
      var paginate = new Element('span', {'class' : 'paginate'});
      var prev = new Element('a', {id : 'prev_button'}).update('‹ 上一条');
      var next = new Element('a', {id : 'next_button'}).update('下一条 ›');
      next.observe('click', function(ev) {
        if (!this.hasClassName('disable')){
          next_detail();
        }
      });
      prev.observe('click', function(ev) {
        if (!this.hasClassName('disable')){
          prev_detail();
        }
      });
      paginate.insert(prev).insert('<span class="separated">|</span>').insert(next);
      return paginate;
    }

    function summary_to_detail() {
      var summary = notifications_summary.down('.current');
      var detail = notifications_detail.down('#notification_' + summary.id.split('_').last());
      var prev = notifications_detail.down('.current');
      if (prev) {
        prev.removeClassName('current').hide();
      }
      detail.addClassName('current').show();
      read_detail(detail);
      refresh_paginate_button();
      change_page_effect(notifications_summary, notifications_detail);
    }

    function hotkey_left() {
      if (notifications_detail.visible()) {
        if (notifications_detail.down('.current').previous('.notification_detail')) {
          prev_detail();
        } else {
          change_page_effect(notifications_detail, notifications_summary, true);
        }
      }
    }

    function hotkey_right() {
      if (notifications_detail.visible()) {
        next_detail();
      } else {
        if (!notifications_summary.down('.current')) {
          notifications_summary.down('.notification_summary').addClassName('current');
        }
        summary_to_detail();
      }
    }

    function hotkey_up() {
      if (notifications_summary.visible()) {
        var current_summary = notifications_summary.down('.current');
        if (current_summary) {
          if (current_summary.previous('.notification_summary')) {
            current_summary.removeClassName('current');
            current_summary.previous('.notification_summary').addClassName('current');
          }
        }
      }
    }

    function hotkey_down() {
      if (notifications_summary.visible()) {
        var current_summary = notifications_summary.down('.current');
        if (current_summary) {
          if (current_summary.next('.notification_summary')) {
            current_summary.removeClassName('current');
            current_summary.next('.notification_summary').addClassName('current');
          }
        } else {
          notifications_summary.down('.notification_summary').addClassName('current');
        }
      }
    }

    function hotkey_enter(event) {
      if (notifications_summary.visible() && notifications_summary.down('.current')) {
        summary_to_detail();
        event.stop();
      }
    }

    function hotkey_backspace() {
      if (notifications_detail.visible()) {
        change_page_effect(notifications_detail, notifications_summary, true);
      }
    }

    function init_notification_menu() {
      notifications_menu = new Element('div', {'id': 'notifications_menu'});
      notifications_summary = new Element('div', {'id': 'notifications_summary'});
      notifications_summary.update('<div class="menu_title clearfix"><span class="title">提醒</span><span class="all"><a href="http://my.iteye.com/notifications">查看所有 »</a></span></div>');
      notifications_menu.insert(notifications_summary);

      notifications_detail = new Element('div', {'id': 'notifications_detail'});
      var detail_menu_title = new Element('div', {'class' : 'menu_title clearfix'});
      var return_button = new Element('span', {'class' : 'return left'}).update('« 返回通知列表');
      detail_menu_title.insert(return_button).insert(init_detail_paginate());

      return_button.observe('click', function(ev) {
        change_page_effect(notifications_detail, notifications_summary, true);
      });
      notifications_detail.insert(detail_menu_title).hide();
      notifications_menu.insert(notifications_detail);
      $('user_nav').insert({after: notifications_menu});

      $(document).observe('keydown', function(event) {
        if (notifications_menu.visible() && notifications.length > 0 && !change_page_effect_running){
          var keyCode = event.keyCode;
          if (keyCode == Event.KEY_LEFT || keyCode == 72 ) {
            hotkey_left();
            event.stop();
          } else if (keyCode == Event.KEY_RIGHT || keyCode == 76) {
            hotkey_right();
            event.stop();
          } else if (keyCode == Event.KEY_UP || keyCode == 75) {
            hotkey_up();
            event.stop();
          } else if (keyCode == Event.KEY_DOWN || keyCode == 74) {
            hotkey_down();
            event.stop();
          } else if (keyCode == Event.KEY_RETURN) {
            hotkey_enter(event);
          } else if (keyCode == Event.KEY_BACKSPACE) {
            hotkey_backspace();
            event.stop();
          } else if (keyCode == Event.KEY_ESC) {
            hide_notification_menu();
          }
        }
      });

      $(document.body).observe('click', function(event) {
        if (notifications_menu.visible()) {
          var clicked = event.element();
          if (!(clicked === notifications_menu || clicked.up("#notifications_menu"))) {
            hide_notification_menu();
          }
        }
      });

    }

    function update_notifications_menu() {
      $$('#notifications_menu .notification_summary').each(Element.remove);
      $$('#notifications_menu .notification_detail').each(Element.remove);

      if (notifications.length > 0) {
        notifications.each(function(notification) {
          if (notification) {
            if (Render['template_' + notification.type]) {
              Render['template_' + notification.type](notification);
            } else {
              Render['template_common'](notification);
            }
          };
        });
      } else {
        notifications_summary.insert('<div class="notification_summary">当前没有提醒信息</div>');
      }
    }

    function refresh_unread_count(count) {
      unread_count = count;
      notifications_count.update(unread_count);
      if (count > 0) {
        notifications_count.addClassName('new_notice').writeAttribute('title', '有' + count + '条未读消息');
      } else {
        notifications_count.removeClassName('new_notice').writeAttribute('title', '没有未读消息');
      }
    }

    function update_unread_count(pe) {
      new Ajax.JSONRequest('http://n.iteye.com/notifications/unread_count.json', {
        method: "get",
        onComplete: function(response) {
          var json_respone = response.responseJSON;
          refresh_unread_count(json_respone.unread_count);
        }
      });
    }

    function update_notifications() {
      var loading = new Element('div', {id : 'notifications_loading'}).update('载入中...');
      notifications_menu.insert({top: loading});
      new Ajax.Request('/notifications.json', {
        method: "get",
        onComplete: function(response) {
          var json_respone = response.responseJSON;
          notifications = json_respone;
          update_notifications_menu();
          loading.remove();
          mark_as_read();
        }
      });
    }

    function mark_as_read() {
      var unread_ids = notifications.map(function(notification){
        if (!notification.read) {
          return notification.id;
        }
      }).without(undefined);
      if (unread_ids.length > 0) {
        new Ajax.Request('/notifications/read.json?ids=' + unread_ids.join(','), {
          method: "put",
          onComplete: function(response) {
            notifications.each(function(notification){notification.read = true});
            refresh_unread_count(response.responseJSON.unread_count);
          }
        });
      }
    }

    function show_notification_menu() {
      if (notifications_menu === null) {
        init_notification_menu();
      } else {
        notifications_summary.show();
      }
      if (unread_count > 0 || notifications === undefined) {
        update_notifications();
      }
      notifications_menu.show();
      notifications_count.addClassName('clicked');
    }

    function hide_notification_menu() {
      notifications_summary.hide();
      notifications_detail.hide();
      notifications_menu.hide();
      notifications_count.removeClassName('clicked');
    }

    function trigger_menu() {
      if (notifications_count.hasClassName('clicked')) {
        hide_notification_menu();
      } else {
        show_notification_menu();
      }
    }

    if (notifications_count) {
      notifications_count.observe('click', function(event) {
        trigger_menu();
        event.stop();
      });
      $(document).observe('keydown', function(event){
        // alt + n
        if (event.keyCode == 78 && event.altKey) {
          trigger_menu();
        }
      });
      update_unread_count();
      new PeriodicalExecuter(update_unread_count, 60);
    }
  })();
})
document.observe("dom:loaded", function() {(function() {
    var spinner_elem = new Element('img', {
      src: '/images/spinner.gif',
      'class': 'spinner'
    });

    var AskPageAction = Class.create({
      initialize: function() {
        this.data = new Hash();
      },
      toggle_action: function(event, event_element) {
        this._event_element = event_element;
        if (this._check()) {
          this._clean();
          if (this._is_show) this._factory().show();
        }
        event.stop();
      },
      get_event_element_parent_id: function() {
        return this._event_element.readAttribute('data_parent_id');
      },
      set_status: function(status_str) {
        if (status_str == 'showing') this.data.set('status', 'showing');
        else this.data.set('status', undefined);
      },
      get_status: function() {
        return this.data.get('status');
      },
      set_dropdown_status: function(status_str) {
        var parent_id = this.get_event_element_parent_id();
        this.data.set(parent_id + '_status', status_str);
        this.set_status(status_str)
      },
      set_dropdown_current: function(action_obj) {
        var parent_id = this.get_event_element_parent_id();
        this.data.set(parent_id + '_current', action_obj);
      },
      get_dropdown_status: function() {
        var parent_id = this.get_event_element_parent_id();
        return this.data.get(parent_id + '_status');
      },
      get_dropdown_current: function() {
        var parent_id = this.get_event_element_parent_id();
        return this.data.get(parent_id + '_current');
      },
      set_popup_status: function(status_str) {
        this.data.set('popup_status', status_str);
        this.set_status(status_str)
      },
      set_popup_current: function(action_obj) {
        this.data.set('popup_current', action_obj);
      },
      get_popup_status: function() {
        return this.data.get('popup_status');
      },
      get_popup_current: function() {
        return this.data.get('popup_current');
      },
      hide_current_popup: function(event_element) {
        this._event_element = event_element;
        var popup_current;
        if (popup_current = this.get_popup_current()) popup_current.hide();
      },
      hide_current_dropdown: function(event_element) {
        this._event_element = event_element;
        var dropdown_current;
        if (dropdown_current = this.get_dropdown_current()) dropdown_current.hide();
      },
      submit_comment: function(event_element) {
        this._event_element = event_element;
        if (this._event_element.previous('.spinner')) return;
        var parent_id = this.get_event_element_parent_id;
        var form_elem = event_element.up('form');
        var comment_validate;
        if (!this.data.get(parent_id + '_comment_validate')) {
          comment_validate = new Validation(form_elem);
          this.data.set(parent_id + '_comment_validate');
        }
        if (!comment_validate.validate()) return;

        var url = form_elem['action'];
        var right_spinner_elem = spinner_elem.clone();
        right_spinner_elem.style.float = 'right';
        this._event_element.insert({
          before: right_spinner_elem
        });
        new Ajax.Request(url, {
          method: 'post',
          parameters: form_elem.serialize(),
          onFailure:function(response){
            form_elem.insert({top:response.responseText})
            this._event_element.previous('.spinner').remove();
            Element.scrollTo(form_elem);
          }.bind(this),
          onSuccess: function(transport) {
            this._event_element.up(0).previous().value = '';
            this._event_element.up(1).insert({
              before: transport.responseText
            });
            this.get_dropdown_current().event_element().writeAttribute('data_comments_count', Number(this.get_dropdown_current().event_element().readAttribute('data_comments_count')) + 1);
            this._event_element.previous('.spinner').remove();
          }.bind(this)
        });
      },
      destroy_comment: function(event_element) {
        this._event_element = event_element;
        if (this._event_element.previous('.spinner')) return;

        var url = this._event_element.readAttribute('data_url');
        var right_spinner_elem = spinner_elem.clone();
        right_spinner_elem.style.float = 'right';
        this._event_element.insert({
          before: right_spinner_elem
        });
        new Ajax.Request(url, {
          method: 'delete',
          onSuccess: function(transport) {
            this._event_element.up(1).remove();
            this.get_dropdown_current().event_element().writeAttribute('data_comments_count', Number(this.get_dropdown_current().event_element().readAttribute('data_comments_count')) - 1);
            this._event_element.previous('.spinner').remove();
          }.bind(this)
        });
      },
      show_problem_popup_notice: function(params) {
        this._action_type = 'popup';
        this._clean();
        var notice_action = new NoticeAction(this);
        notice_action.show(params);
      },
      //检测当前是否有层在显示中,以确定是否运行clean和show任务
      //返回false表示有任务进行中,不清理和显示
      //this._is_show表示是否显示新的层
      _check: function() {
        this._is_show = false;
        var action_type = this._event_element.readAttribute('data_action_type');
        this._action_type = action_type;
        if (this.get_status() == 'showing') return false;
        switch (action_type) {
        case 'dropdown':
          var dropdown_status = this.get_dropdown_status();
          var dropdown_current = this.get_dropdown_current();
          if (dropdown_status == undefined) { //当前没有下拉层
            this._is_show = true;
          } else if (dropdown_status == 'showed' && dropdown_current.event_element() != this._event_element) { //当前有下拉层,但需要显示新的下拉层
            this._is_show = true;
          } else if (dropdown_status == 'showing') { //有任务进行中
            return false;
          }
          break;
        case 'popup':
          var popup_status = this.get_popup_status();
          var popup_current = this.get_popup_current();
          if (popup_status == undefined) {
            this._is_show = true;
          } else if (popup_status == 'showed' && popup_current.event_element() != this._event_element) {
            this._is_show = true;
          } else if (popup_status == 'showing') {
            return false;
          }
          break;
        default:
          return false;
        }
        return true;
      },
      _clean: function() {
        switch (this._action_type) {
        case 'dropdown':
          var dropdown_current = this.get_dropdown_current();
          if (dropdown_current) {
            dropdown_current.hide();
          }
          break;
        case 'popup':
          var popup_current = this.get_popup_current();
          if (popup_current) {
            popup_current.hide();
          }
          break;
        }
      },
      _factory: function() {
        var action_sub_type = this._event_element.readAttribute('data_action_sub_type');
        var action_obj;
        switch (action_sub_type) {
        case 'comment':
          action_obj = new CommentAction(this, this._event_element);
          break;
        case 'increment_score':
        case 'edit_tags':
        case 'replenish':
          action_obj = new CommonDropdownAction(this, this._event_element);
          break;
        case 'close':
        case 'destroy':
        case 'postpone':
        case 'solution_accept':
        case 'solution_destroy':
          action_obj = new ConfirmAction(this, this._event_element);
          break;
        }
        return action_obj;
      }

    });

    var PageAction = Class.create({
      initialize: function(ask_page_action, event_element) {
        this._ask_page_action = ask_page_action;
        this._event_element = event_element;
      },
      event_element: function() {
        return this._event_element;
      }
    });

    var CommentAction = Class.create(PageAction, {
      initialize: function($super, ask_page_action, event_element) {
        $super(ask_page_action, event_element);
      },
      show: function() {
        this._ask_page_action.set_dropdown_status('showing');
        this._ask_page_action.set_dropdown_current(this);
        this._event_element.appendChild(spinner_elem);
        var url = this._event_element.readAttribute('data_url');
        new Ajax.Request(url, {
          method: 'get',
          onSuccess: function(transport) {
            this._event_element.up().addClassName('action_selected');
            this._event_element.up(2).addClassName('action_bg');
            var img_elem = this._event_element.down();
            this._event_element.update(img_elem);
            this._event_element.appendChild(document.createTextNode('收起评论'));

            this._event_element.up(2).insert({
              after: transport.responseText
            });
            this._ask_page_action.set_dropdown_status('showed');
          }.bind(this)
        });
      },
      hide: function() {
        var img_elem = this._event_element.down();
        this._event_element.up().removeClassName('action_selected');
        this._event_element.up(2).removeClassName('action_bg');
        this._event_element.update(img_elem);
        var comments_count = this._event_element.readAttribute('data_comments_count');
        comments_count = Number(comments_count);
        var comments_count_text;
        if (comments_count > 0) comments_count_text = document.createTextNode(comments_count + '条评论');
        else comments_count_text = document.createTextNode('添加评论');
        this._event_element.appendChild(comments_count_text);
        this._event_element.up(2).next().remove();
        this._ask_page_action.set_dropdown_status(undefined);
        this._ask_page_action.set_dropdown_current(undefined);
      }

    });

    var CommonDropdownAction = Class.create(PageAction, {
      initialize: function($super, ask_page_action, event_element) {
        $super(ask_page_action, event_element);
      },
      show: function() {
        this._ask_page_action.set_dropdown_status('showing');
        this._ask_page_action.set_dropdown_current(this);
        this._event_element.up().addClassName('action_selected');
        this._event_element.up(2).addClassName('action_bg');
        var action_sub_type = this._event_element.readAttribute('data_action_sub_type');
        this._event_element.up(2).insert({
          after: window.html_codes.get(action_sub_type)
        });
        this._ask_page_action.set_dropdown_status('showed');
      },
      hide: function() {
        var img_elem = this._event_element.down();
        this._event_element.up().removeClassName('action_selected');
        this._event_element.up(2).removeClassName('action_bg');
        this._event_element.up(2).next().remove();
        this._ask_page_action.set_dropdown_status(undefined);
        this._ask_page_action.set_dropdown_current(undefined);
      }
    });

    var PopupAction = Class.create(PageAction, {
      initialize: function($super, ask_page_action, event_element) {
        $super(ask_page_action, event_element);
      },
      show: function() {
        this._ask_page_action.set_popup_status('showing');
        this._ask_page_action.set_popup_current(this);
        var action_sub_type = this._event_element.readAttribute('data_action_sub_type');
        $(document.body).insert({
          bottom: window.html_codes.get(action_sub_type)
        });
        this._set_problem_popupbox_style();
        this._ask_page_action.set_popup_status('showed');
      },
      hide: function() {
        $('problem_popupbox').remove();
        this._ask_page_action.set_popup_status(undefined);
        this._ask_page_action.set_popup_current(undefined);
      },
      _set_problem_popupbox_style: function() {
        if (!$('problem_popupbox')) return;
        var viewport = document.viewport.getDimensions();
        $('problem_popupbox').setStyle({
          'position': 'fixed',
          'left': (viewport.width - $('problem_popupbox').getDimensions().width) / 2 + 'px',
          'top': (viewport.height - $('problem_popupbox').getDimensions().height) / 2 + 'px'
        });
        if (navigator.userAgent.indexOf("MSIE 6") > 0) { // IE6
          $('problem_popupbox').setStyle({
            'position': 'absolute',
            'top': document.documentElement.scrollTop + (viewport.height - $('problem_popupbox').getDimensions().height) / 2 + "px"
          });
        }
      }
    });

    var ConfirmAction = Class.create(PopupAction, {
      initialize: function($super, ask_page_action, event_element) {
        $super(ask_page_action, event_element);
      },
      show: function() {
        this._ask_page_action.set_popup_status('showing');
        this._ask_page_action.set_popup_current(this);
        var action_sub_type = this._event_element.readAttribute('data_action_sub_type');
        var html_code = window.html_codes.get(action_sub_type);
        if (this._event_element.readAttribute('replace_url')) {
          html_code = html_code.replace('action_url', this._event_element.readAttribute('data_url'));
        }
        $(document.body).insert({
          bottom: html_code
        });
        this._set_problem_popupbox_style();
        this._ask_page_action.set_popup_status('showed');
      }
    });

    var NoticeAction = Class.create(PopupAction, {
      initialize: function($super, ask_page_action) {
        $super(ask_page_action, null);
      },
      show: function(params) {
        this._ask_page_action.set_popup_status('showing');
        this._ask_page_action.set_popup_current(this);
        var html_code = window.html_codes.get('problem_popup_notice');
        var notice_template = new Template(html_code);
        var delay_number = params['delay_number'] || 0
        var delay_func = params['delay_func']
        if (delay_number > 0) {
          if(delay_func){
            delay_func.delay(delay_number);
          }else{
            this.delay_hide.bind(this).delay(delay_number);
            params['class_name'] = params['class_name'] + ' delay';
          }
        }
        $(document.body).insert({
          bottom: notice_template.evaluate(params)
        });
        this._set_problem_popupbox_style();
        this._ask_page_action.set_popup_status('showed');
      },
      delay_hide: function() {
        var problem_popupbox = $('problem_popupbox');
        if (problem_popupbox && problem_popupbox.className.include('delay')) {
          this.hide();
        }
      }

    });

    var ask_page_action = new AskPageAction();
    window.ask_page_action = ask_page_action;

    if ($$('div.ask_action_handler').length > 0) {
      $(document.body).observe('click', function(event) {
        var event_elem;
        if (event_elem = event.findElement('a.ask_click_action')) {
          ask_page_action.toggle_action(event, event_elem);
        } else if (event_elem = event.findElement('input#close_popup_action')) {
          ask_page_action.hide_current_popup(event_elem);
        } else if (event_elem = event.findElement('input.close_dropdown_action')) {
          ask_page_action.hide_current_dropdown(event_elem);
        } else if (event_elem = event.findElement('input.submit_comment')) {
          ask_page_action.submit_comment(event_elem);
        } else if (event_elem = event.findElement('a.destroy_comment')) {
          ask_page_action.destroy_comment(event_elem);
        } else if (event_elem = event.findElement('input.after_show_spinner')) {
          event_elem.disabled = true;
          event_elem.insert({
            after: spinner_elem
          });
          event_elem.form.submit();
        } else if (event_elem = event.findElement('input.before_show_spinner')) {
          event_elem.disabled = true;
          var before_spinner_elem = spinner_elem.clone();
          before_spinner_elem.className = 'spinner_img';
          event_elem.insert({
            before: before_spinner_elem
          });
          event_elem.form.submit();
        }
      });

      $(document).observe('keyup', function(event){
        var keyCode = event ? (event.which ? event.which : event.keyCode) : window.event.keyCode;
        var event_elem;
        if( (keyCode == 27) && (event_elem = $('close_popup_action')) ){ // escape key only, no enter key 
          ask_page_action.hide_current_popup(event_elem);
        }
      });
    }
  })();
});

function sortSolutionsByTime(){
    title = $$("#solutions #num")[0];
    dls = $$("#solutions dl.for_sort");
    dls.sortBy(function(e){
        return parseInt(e.attributes["time"]["value"])
    })
    .each(function(elem){
        title.insert({after: elem})
    });
    $("sort_time_link").style.color = "black";
    $("sort_vote_link").style.color = "#069";
    return false;
}

function sortSolutionsByVote(){
    title = $$("#solutions #num")[0];
    dls = $$("#solutions dl.for_sort");
    dls.sortBy(function(e){
        return parseInt(e.attributes["votes"]["value"])
    })
    .each(function(elem){
        title.insert({
            after: elem
        })
    });
    $("sort_vote_link").style.color = "black";
    $("sort_time_link").style.color = "#069";
    return false;
}

function highlightNewAddContent(css_rules) {
  renameElements(css_rules, 'new-code');
  dp.SyntaxHighlighter.HighlightAll('new-code', true, true);
  renameElements(css_rules, 'code');
}

function renameElements(css_rules, new_name) {
  $$(css_rules).each(function(element) {
    element.writeAttribute('name', new_name);
    console.log(element);
  });
}

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=SyntaxHighlighter.css
Content-Type: text/css; name=SyntaxHighlighter.css
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1348819953
Content-Transfer-Encoding: 8bit

.dp-highlighter
{
  font-family: Monaco, DejaVu Sans Mono, Bitstream Vera Sans Mono, Consolas, Courier New, monospace;
  font-size: 12px;
  background-color: transparent;
  width: 97%;
  overflow: auto;
  margin-left: 9px;
  padding: 1px; /* adds a little border on top when controls are hidden */
  word-break: break-all;
  word-wrap: break-word;
}

.dp-highlighter ol 
{
  border: 1px solid #D1D7DC;  
  list-style: decimal; /* for ie */
  background-color: #fff;
  margin: 0px 0px 1px 0px; /* 1px bottom margin seems to fix occasional Firefox scrolling */
  padding: 2px 0;
  color: #2B91AF;
}

.dp-highlighter ol li,
.dp-highlighter .columns div
{
  border-left: 1px solid #D1D7DC;
  background-color: #FAFAFA;
  padding-left: 10px;
  line-height: 18px;
  margin: 0 0 0 38px;
}

.dp-highlighter .columns 
{
  color: gray;
  overflow: hidden;
  width: 100%;
}

.dp-highlighter .columns div 
{
  padding-bottom: 5px;
}

.dp-highlighter ol li span 
{
  color: Black;
}

/* Styles for the tools */

.dp-highlighter .tools 
{
  padding: 3px;
  text-align: left;
  margin: 0;
  color: black;
  font-weight: bold;
}

/* About dialog styles */

.dp-about { background-color: #fff; margin: 0px; padding: 0px; }
.dp-about table { width: 100%; height: 100%; font-size: 11px; font-family: Tahoma, Verdana, Arial, sans-serif !important; }
.dp-about td { padding: 10px; vertical-align: top; }
.dp-about .copy { border-bottom: 1px solid #ACA899; height: 95%; }
.dp-about .title { color: red; font-weight: bold; }
.dp-about .para { margin: 0 0 4px 0; }
.dp-about .footer { background-color: #ECEADB; border-top: 1px solid #fff; text-align: right; }
.dp-about .close { font-size: 11px; font-family: Tahoma, Verdana, Arial, sans-serif !important; background-color: #ECEADB; width: 60px; height: 22px; }

/* Language specific styles */

.dp-highlighter .comment, .dp-highlighter .comments { color: #008200; padding: 0; margin: 0; width: auto; border: 0}
.dp-highlighter .string { color: blue; }
.dp-highlighter .keyword { color: #7f0055; font-weight: bold; }
.dp-highlighter .preprocessor { color: gray; }

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=shCoreCommon.js
Content-Type: text/javascript; name=shCoreCommon.js
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1325907333
Content-Transfer-Encoding: 8bit

/**
 * Modified by quake, add new clipboard swf to support none IE browser and generic language highlight
 * Code Syntax Highlighter.
 * Version 1.5.1
 * Copyright (C) 2004-2007 Alex Gorbatchev.
 * http://www.dreamprojections.com/syntaxhighlighter/
 * 
 * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General 
 * Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) 
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to 
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 
 */

//
// create namespaces
//
var dp = {
    sh :
    {
        Toolbar : {},
        Utils	: {},
        RegexLib: {},
        Brushes	: {},
        Version : '1.5.1'
    }
};

// make an alias
dp.SyntaxHighlighter = dp.sh;

//
// Toolbar functions
//

dp.sh.Toolbar.CopyToClipboard = function(sender)
{
    var n = sender;

    while(n != null && n.className.indexOf('dp-highlighter') == -1)
        n = n.parentNode;

    var highlighter = n.highlighter;

    var code = highlighter.originalCode.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;/g,'&');
    window.clipboardData.setData('text', code);
    alert('代码已被复制到剪贴板');
}

// creates a <div /> with all toolbar links
dp.sh.Toolbar.Create = function(highlighter)
{
    var div = document.createElement('DIV');
    div.className = 'tools';
    div.innerHTML = highlighter.language.capitalize()+'代码';
    if(window.clipboardData) {
        div.innerHTML += ' <a href="#" onclick="dp.sh.Toolbar.CopyToClipboard(this);return false;" title="复制代码"><img src="/images/icon_copy.gif" alt="复制代码"/></a>';
    }else{
        var code = highlighter.originalCode.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;/g,'&');
        div.innerHTML += ' <embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard='+encodeURIComponent(code)+'" quality="high" allowScriptAccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer"/>';
    }
    return div;
}

//
// Common reusable regular expressions
//
dp.sh.RegexLib = {
    MultiLineCComments : new RegExp('/\\*[\\s\\S]*?\\*/', 'gm'),
    SingleLineCComments : new RegExp('//.*$', 'gm'),
    SingleLinePerlComments : new RegExp('#.*$', 'gm'),
    DoubleQuotedString : new RegExp('"(?:\\.|(\\\\\\")|[^\\""\\n])*"','g'),
    SingleQuotedString : new RegExp("'(?:\\.|(\\\\\\')|[^\\''\\n])*'", 'g')
};

//
// Match object
//
dp.sh.Match = function(value, index, css)
{
    this.value = value;
    this.index = index;
    this.length = value.length;
    this.css = css;
}

//
// Highlighter object
//
dp.sh.Highlighter = function()
{
    this.noGutter = false;
    this.addControls = true;
    this.collapse = false;
    this.tabsToSpaces = true;
    this.wrapColumn = 80;
    this.showColumns = true;
}

// static callback for the match sorting
dp.sh.Highlighter.SortCallback = function(m1, m2)
{
    // sort matches by index first
    if(m1.index < m2.index)
        return -1;
    else if(m1.index > m2.index)
        return 1;
    else
    {
        // if index is the same, sort by length
        if(m1.length < m2.length)
            return -1;
        else if(m1.length > m2.length)
            return 1;
    }
    return 0;
}

dp.sh.Highlighter.prototype.CreateElement = function(name)
{
    var result = document.createElement(name);
    result.highlighter = this;
    return result;
}

// gets a list of all matches for a given regular expression
dp.sh.Highlighter.prototype.GetMatches = function(regex, css)
{
    var index = 0;
    var match = null;

    while((match = regex.exec(this.code)) != null)
        this.matches[this.matches.length] = new dp.sh.Match(match[0], match.index, css);
}

dp.sh.Highlighter.prototype.AddBit = function(str, css)
{
    if(str == null || str.length == 0)
        return;

    var span = this.CreateElement('SPAN');
	
    //	str = str.replace(/&/g, '&amp;');
    str = str.replace(/ /g, '&nbsp;');
    str = str.replace(/</g, '&lt;');
    //	str = str.replace(/&lt;/g, '<');
    //	str = str.replace(/>/g, '&gt;');
    str = str.replace(/\n/gm, '&nbsp;<br>');

    // when adding a piece of code, check to see if it has line breaks in it
    // and if it does, wrap individual line breaks with span tags
    if(css != null)
    {
        if((/br/gi).test(str))
        {
            var lines = str.split('&nbsp;<br>');
			
            for(var i = 0; i < lines.length; i++)
            {
                span = this.CreateElement('SPAN');
                span.className = css;
                span.innerHTML = lines[i];
				
                this.div.appendChild(span);
				
                // don't add a <BR> for the last line
                if(i + 1 < lines.length)
                    this.div.appendChild(this.CreateElement('BR'));
            }
        }
        else
        {
            span.className = css;
            span.innerHTML = str;
            this.div.appendChild(span);
        }
    }
    else
    {
        span.innerHTML = str;
        this.div.appendChild(span);
    }
}

// checks if one match is inside any other match
dp.sh.Highlighter.prototype.IsInside = function(match)
{
    if(match == null || match.length == 0)
        return false;
	
    for(var i = 0; i < this.matches.length; i++)
    {
        var c = this.matches[i];
		
        if(c == null)
            continue;

        if((match.index > c.index) && (match.index < c.index + c.length))
            return true;
    }
	
    return false;
}

dp.sh.Highlighter.prototype.ProcessRegexList = function()
{
    for(var i = 0; i < this.regexList.length; i++)
        this.GetMatches(this.regexList[i].regex, this.regexList[i].css);
}

dp.sh.Highlighter.prototype.ProcessSmartTabs = function(code)
{
    var lines	= code.split('\n');
    var result	= '';
    var tabSize	= 4;
    var tab		= '\t';

    // This function inserts specified amount of spaces in the string
    // where a tab is while removing that given tab.
    function InsertSpaces(line, pos, count)
    {
        var left	= line.substr(0, pos);
        var right	= line.substr(pos + 1, line.length);	// pos + 1 will get rid of the tab
        var spaces	= '';
		
        for(var i = 0; i < count; i++)
            spaces += ' ';
		
        return left + spaces + right;
    }

    // This function process one line for 'smart tabs'
    function ProcessLine(line, tabSize)
    {
        if(line.indexOf(tab) == -1)
            return line;

        var pos = 0;

        while((pos = line.indexOf(tab)) != -1)
        {
            // This is pretty much all there is to the 'smart tabs' logic.
            // Based on the position within the line and size of a tab,
            // calculate the amount of spaces we need to insert.
            var spaces = tabSize - pos % tabSize;
			
            line = InsertSpaces(line, pos, spaces);
        }
		
        return line;
    }

    // Go through all the lines and do the 'smart tabs' magic.
    for(var i = 0; i < lines.length; i++)
        result += ProcessLine(lines[i], tabSize) + '\n';
	
    return result;
}

dp.sh.Highlighter.prototype.SwitchToList = function()
{
    // thanks to Lachlan Donald from SitePoint.com for this <br/> tag fix.
    var html = this.div.innerHTML.replace(/<(br)\/?>/gi, '\n');
    var lines = html.split('\n');
	
    if(this.addControls == true)
        this.bar.appendChild(dp.sh.Toolbar.Create(this));

    // add columns ruler
    if(this.showColumns)
    {
        var div = this.CreateElement('div');
        var columns = this.CreateElement('div');
        var showEvery = 10;
        var i = 1;
		
        while(i <= 150)
        {
            if(i % showEvery == 0)
            {
                div.innerHTML += i;
                i += (i + '').length;
            }
            else
            {
                div.innerHTML += '&middot;';
                i++;
            }
        }
		
        columns.className = 'columns';
        columns.appendChild(div);
        this.bar.appendChild(columns);
    }

    for(var i = 0, lineIndex = this.firstLine; i < lines.length - 1; i++, lineIndex++)
    {
        var li = this.CreateElement('LI');
        var span = this.CreateElement('SPAN');
        span.innerHTML = lines[i] + '&nbsp;';
        li.appendChild(span);
        this.ol.appendChild(li);
    }
	
    this.div.innerHTML	= '';
}

dp.sh.Highlighter.prototype.Highlight = function(code)
{
    function Trim(str)
    {
        return str.replace(/^\s*(.*?)[\s\n]*$/g, '$1');
    }
	
    function Chop(str)
    {
        return str.replace(/\n*$/, '').replace(/^\n*/, '');
    }

    function Unindent(str)
    {
        var lines = str.split('\n');
        var indents = new Array();
        var regex = new RegExp('^\\s*', 'g');
        var min = 1000;

        // go through every line and check for common number of indents
        for(var i = 0; i < lines.length && min > 0; i++)
        {
            if(Trim(lines[i]).length == 0)
                continue;
				
            var matches = regex.exec(lines[i]);

            if(matches != null && matches.length > 0)
                min = Math.min(matches[0].length, min);
        }

        // trim minimum common number of white space from the begining of every line
        if(min > 0)
            for(var i = 0; i < lines.length; i++)
                lines[i] = lines[i].substr(min);

        return lines.join('\n');
    }
	
    // This function returns a portions of the string from pos1 to pos2 inclusive
    function Copy(string, pos1, pos2)
    {
        return string.substr(pos1, pos2 - pos1);
    }

    var pos	= 0;
	
    if(code == null)
        code = '';
	
    this.originalCode = code;
    this.code = Chop(Unindent(code));
    this.div = this.CreateElement('DIV');
    this.bar = this.CreateElement('DIV');
    this.ol = this.CreateElement('OL');
    this.matches = new Array();

    this.div.className = 'dp-highlighter';
    this.div.highlighter = this;
	
    this.bar.className = 'bar';
	
    // set the first line
    this.ol.start = this.firstLine;

    if(this.CssClass != null)
        this.ol.className = this.CssClass;

    if(this.collapse)
        this.div.className += ' collapsed';
	
    if(this.noGutter)
        this.div.className += ' nogutter';

    // replace tabs with spaces
    if(this.tabsToSpaces == true)
        this.code = this.ProcessSmartTabs(this.code);

    this.ProcessRegexList();

    // if no matches found, add entire code as plain text
    if(this.matches.length == 0)
    {
        this.AddBit(this.code, null);
        this.SwitchToList();
        this.div.appendChild(this.bar);
        this.div.appendChild(this.ol);
        return;
    }

    // sort the matches
    this.matches = this.matches.sort(dp.sh.Highlighter.SortCallback);

    // The following loop checks to see if any of the matches are inside
    // of other matches. This process would get rid of highligted strings
    // inside comments, keywords inside strings and so on.
    for(var i = 0; i < this.matches.length; i++)
        if(this.IsInside(this.matches[i]))
            this.matches[i] = null;

    // Finally, go through the final list of matches and pull the all
    // together adding everything in between that isn't a match.
    for(var i = 0; i < this.matches.length; i++)
    {
        var match = this.matches[i];

        if(match == null || match.length == 0)
            continue;

        this.AddBit(Copy(this.code, pos, match.index), null);
        this.AddBit(match.value, match.css);

        pos = match.index + match.length;
    }
	
    this.AddBit(this.code.substr(pos), null);

    this.SwitchToList();
    this.div.appendChild(this.bar);
    this.div.appendChild(this.ol);
}

dp.sh.Highlighter.prototype.GetKeywords = function(str) 
{
    return '\\b' + str.replace(/ /g, '\\b|\\b') + '\\b';
}

// highlightes all elements identified by name and gets source code from specified property
dp.sh.HighlightAll = function(name, showGutter /* optional */, showControls /* optional */, collapseAll /* optional */, firstLine /* optional */, showColumns /* optional */)
{
    function FindValue()
    {
        var a = arguments;
		
        for(var i = 0; i < a.length; i++)
        {
            if(a[i] == null)
                continue;
				
            if(typeof(a[i]) == 'string' && a[i] != '')
                return a[i] + '';
		
            if(typeof(a[i]) == 'object' && a[i].value != '')
                return a[i].value + '';
        }
		
        return null;
    }
	
    function IsOptionSet(value, list)
    {
        for(var i = 0; i < list.length; i++)
            if(list[i] == value)
                return true;
		
        return false;
    }
	
    function GetOptionValue(name, list, defaultValue)
    {
        var regex = new RegExp('^' + name + '\\[(\\w+)\\]$', 'gi');
        var matches = null;

        for(var i = 0; i < list.length; i++)
            if((matches = regex.exec(list[i])) != null)
                return matches[1];
		
        return defaultValue;
    }
	
    function FindTagsByName(list, name, tagName)
    {
        var tags = document.getElementsByTagName(tagName);

        for(var i = 0; i < tags.length; i++)
            if(tags[i].getAttribute('name') == name)
                list.push(tags[i]);
    }

    var elements = [];
    var highlighter = null;
    var registered = {};
    var propertyName = 'innerHTML';

    // for some reason IE doesn't find <pre/> by name, however it does see them just fine by tag name...
    FindTagsByName(elements, name, 'pre');
    FindTagsByName(elements, name, 'textarea');

    if(elements.length == 0)
        return;

    // register all brushes
    for(var brush in dp.sh.Brushes)
    {
        var aliases = dp.sh.Brushes[brush].Aliases;

        if(aliases == null)
            continue;
		
        for(var i = 0; i < aliases.length; i++)
            registered[aliases[i]] = brush;
    }

    for(var i = 0; i < elements.length; i++)
    {
        var element = elements[i];
        var options = FindValue(
            element.attributes['class'], element.className,
            element.attributes['language'], element.language
            );
        var language = '';
		
        if(options == null)
            continue;
		
        options = options.split(':');
		
        language = options[0].toLowerCase();

        if(registered[language] == null)
            registered[language] = registered['default'];
		
        // instantiate a brush
        highlighter = new dp.sh.Brushes[registered[language]]();
        highlighter.language = language;
		
        // hide the original element
        element.style.display = 'none';

        highlighter.noGutter = (showGutter == null) ? IsOptionSet('nogutter', options) : !showGutter;
        highlighter.addControls = (showControls == null) ? !IsOptionSet('nocontrols', options) : showControls;
        highlighter.collapse = (collapseAll == null) ? IsOptionSet('collapse', options) : collapseAll;
        highlighter.showColumns = (showColumns == null) ? IsOptionSet('showcolumns', options) : showColumns;

        // write out custom brush style
        var headNode = document.getElementsByTagName('head')[0];
        if(highlighter.Style && headNode)
        {
            var styleNode = document.createElement('style');
            styleNode.setAttribute('type', 'text/css');

            if(styleNode.styleSheet) // for IE
            {
                styleNode.styleSheet.cssText = highlighter.Style;
            }
            else // for everyone else
            {
                var textNode = document.createTextNode(highlighter.Style);
                styleNode.appendChild(textNode);
            }

            headNode.appendChild(styleNode);
        }
		
        // first line idea comes from Andrew Collington, thanks!
        highlighter.firstLine = (firstLine == null) ? parseInt(GetOptionValue('firstline', options, 1)) : firstLine;

        highlighter.Highlight(element[propertyName]);
		
        highlighter.source = element;

        element.parentNode.insertBefore(highlighter.div, element);
    }
}
dp.sh.Brushes.JScript = function()
{
	var keywords =	'abstract boolean break byte case catch char class const continue debugger ' +
					'default delete do double else enum export extends false final finally float ' +
					'for function goto if implements import in instanceof int interface long native ' +
					'new null package private protected public return short static super switch ' +
					'synchronized this throw throws transient true try typeof var void volatile while with';

	this.regexList = [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// single quoted strings
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// preprocessor tags like #region and #endregion
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' }			// keywords
		];

	this.CssClass = 'dp-c';
}

dp.sh.Brushes.JScript.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.JScript.Aliases	= ['js', 'jscript', 'javascript'];
dp.sh.Brushes.Java = function()
{
	var keywords =	'abstract assert boolean break byte case catch char class const ' +
			'continue default do double else enum extends ' +
			'false final finally float for goto if implements import ' +
			'instanceof int interface long native new null ' +
			'package private protected public return ' +
			'short static strictfp super switch synchronized this throw throws true ' +
			'transient try void volatile while';

	this.regexList = [
		{ regex: dp.sh.RegexLib.SingleLineCComments,							css: 'comment' },		// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,								css: 'comment' },		// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		// strings
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	css: 'number' },		// numbers
		{ regex: new RegExp('(?!\\@interface\\b)\\@[\\$\\w]+\\b', 'g'),			css: 'annotation' },	// annotation @anno
		{ regex: new RegExp('\\@interface\\b', 'g'),							css: 'keyword' },		// @interface keyword
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),					css: 'keyword' }		// java keyword
		];

	this.CssClass = 'dp-j';
	this.Style =	'.dp-j .annotation { color: #646464; }' +
					'.dp-j .number { color: #C00000; }';
}

dp.sh.Brushes.Java.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.Java.Aliases	= ['java'];
/* Ruby 1.8.4 syntax contributed by Erik Peterson */
dp.sh.Brushes.Ruby = function()
{
  var keywords =	'alias and BEGIN begin break case class def define_method defined do each else elsif ' +
					'END end ensure false for if in module new next nil not or raise redo rescue retry return ' +
					'self super then throw true undef unless until when while yield';

  var builtins =	'Array Bignum Binding Class Continuation Dir Exception FalseClass File::Stat File Fixnum Fload ' +
					'Hash Integer IO MatchData Method Module NilClass Numeric Object Proc Range Regexp String Struct::TMS Symbol ' +
					'ThreadGroup Thread Time TrueClass'

	this.regexList = [
		{ regex: dp.sh.RegexLib.SingleLinePerlComments,			css: 'comment' },	// one line comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,				css: 'string' },	// double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,				css: 'string' },	// single quoted strings
		{ regex: new RegExp(':[a-z][A-Za-z0-9_]*', 'g'),		css: 'symbol' },	// symbols
		{ regex: new RegExp('(\\$|@@|@)\\w+', 'g'),				css: 'variable' },	// $global, @instance, and @@class variables
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),	css: 'keyword' },	// keywords
		{ regex: new RegExp(this.GetKeywords(builtins), 'gm'),	css: 'builtin' }	// builtins
		];

	this.CssClass = 'dp-rb';
	this.Style =	'.dp-rb .symbol { color: #a70; }' +
					'.dp-rb .variable { color: #a70; font-weight: bold; }';
}

dp.sh.Brushes.Ruby.prototype = new dp.sh.Highlighter();
dp.sh.Brushes.Ruby.Aliases = ['ruby', 'rails', 'ror'];
dp.sh.Brushes.Xml = function()
{
	this.CssClass = 'dp-xml';
	this.Style =	'.dp-xml .cdata { color: #ff1493; }' +
					'.dp-xml .tag, .dp-xml .tag-name { color: #069; font-weight: bold; }' +
					'.dp-xml .attribute { color: red; }' +
					'.dp-xml .attribute-value { color: blue; }';
}

dp.sh.Brushes.Xml.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.Xml.Aliases	= ['xml', 'xhtml', 'xslt', 'html', 'xhtml'];

dp.sh.Brushes.Xml.prototype.ProcessRegexList = function()
{
	function push(array, value)
	{
		array[array.length] = value;
	}
	
	/* If only there was a way to get index of a group within a match, the whole XML
	   could be matched with the expression looking something like that:
	
	   (<!\[CDATA\[\s*.*\s*\]\]>)
	   | (<!--\s*.*\s*?-->)
	   | (<)*(\w+)*\s*(\w+)\s*=\s*(".*?"|'.*?'|\w+)(/*>)*
	   | (</?)(.*?)(/?>)
	*/
	var index	= 0;
	var match	= null;
	var regex	= null;

	// Match CDATA in the following format <![ ... [ ... ]]>
	// (\&lt;|<)\!\[[\w\s]*?\[(.|\s)*?\]\](\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\&gt;|>)', 'gm'), 'cdata');
	
	// Match comments
	// (\&lt;|<)!--\s*.*?\s*--(\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)!--\\s*.*?\\s*--(\&gt;|>)', 'gm'), 'comments');

	// Match attributes and their values
	// (:|\w+)\s*=\s*(".*?"|\'.*?\'|\w+)*
	regex = new RegExp('([:\\w-\.]+)\\s*=\\s*(".*?"|\'.*?\'|\\w+)*|(\\w+)', 'gm'); // Thanks to Tomi Blinnikka of Yahoo! for fixing namespaces in attributes
	while((match = regex.exec(this.code)) != null)
	{
		if(match[1] == null)
		{
			continue;
		}
			
		push(this.matches, new dp.sh.Match(match[1], match.index, 'attribute'));
	
		// if xml is invalid and attribute has no property value, ignore it	
		if(match[2] != undefined)
		{
			push(this.matches, new dp.sh.Match(match[2], match.index + match[0].indexOf(match[2]), 'attribute-value'));
		}
	}

	// Match opening and closing tag brackets
	// (\&lt;|<)/*\?*(?!\!)|/*\?*(\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)/*\\?*(?!\\!)|/*\\?*(\&gt;|>)', 'gm'), 'tag');

	// Match tag names
	// (\&lt;|<)/*\?*\s*(\w+)
	regex = new RegExp('(?:\&lt;|<)/*\\?*\\s*([:\\w-\.]+)', 'gm');
	while((match = regex.exec(this.code)) != null)
	{
		push(this.matches, new dp.sh.Match(match[1], match.index + match[0].indexOf(match[1]), 'tag-name'));
	}
}
dp.sh.Brushes.CSharp = function()
{
	var keywords =	'abstract as base bool break byte case catch char checked class const ' +
					'continue decimal default delegate do double else enum event explicit ' +
					'extern false finally fixed float for foreach get goto if implicit in int ' +
					'interface internal is lock long namespace new null object operator out ' +
					'override params private protected public readonly ref return sbyte sealed set ' +
					'short sizeof stackalloc static string struct switch this throw true try ' +
					'typeof uint ulong unchecked unsafe ushort using virtual void while';

	this.regexList = [
		// There's a slight problem with matching single line comments and figuring out
		// a difference between // and ///. Using lookahead and lookbehind solves the
		// problem, unfortunately JavaScript doesn't support lookbehind. So I'm at a 
		// loss how to translate that regular expression to JavaScript compatible one.
//		{ regex: new RegExp('(?<!/)//(?!/).*$|(?<!/)////(?!/).*$|/\\*[^\\*]*(.)*?\\*/', 'gm'),	css: 'comment' },			// one line comments starting with anything BUT '///' and multiline comments
//		{ regex: new RegExp('(?<!/)///(?!/).*$', 'gm'),											css: 'comments' },		// XML comments starting with ///

		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// strings
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// preprocessor tags like #region and #endregion
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' }			// c# keyword
		];

	this.CssClass = 'dp-c';
	this.Style = '.dp-c .vars { color: #d00; }';
}

dp.sh.Brushes.CSharp.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.CSharp.Aliases	= ['c#', 'c-sharp', 'csharp'];
/**
 * Code Syntax Highlighter for C++(Windows Platform).
 * Version 0.0.2
 * Copyright (C) 2006 Shin, YoungJin.
 * http://www.jiniya.net/lecture/techbox/test.html
 * 
 * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General 
 * Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) 
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to 
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 
 */

dp.sh.Brushes.Cpp = function()
{
	var datatypes = 
	'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD DWORDLONG DWORD_PTR ' +
	'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' + 
	'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP ' +
	'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY ' +
	'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT ' +
	'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE ' +
	'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE LPCOLORREF ' +
	'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR ' +
	'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR PCWSTR ' +
	'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE PHKEY PINT ' +
	'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 PLONG64 POINTER_32 ' +
	'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR ' +
	'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 ' +
	'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SHORT ' + 
	'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 ULONG ' +
	'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM WPARAM WPARAM ' +
	'char bool short int __int32 __int64 __int8 __int16 long float double __wchar_t ' +
	'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception _EXCEPTION_POINTERS ' +
	'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t __finddata64_t ' +
	'__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t ' +
	'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t _purecall_handler ' +
	'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function ' +
	'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
	'va_list wchar_t wctrans_t wctype_t wint_t signed';

	var keywords = 
	'break case catch class const __finally __exception __try ' +
	'const_cast continue private public protected __declspec ' + 
	'default delete deprecated dllexport dllimport do dynamic_cast ' + 
	'else enum explicit extern if for friend goto inline ' + 
	'mutable naked namespace new noinline noreturn nothrow ' + 
	'register reinterpret_cast return selectany ' + 
	'sizeof static static_cast struct switch template this ' + 
	'thread throw true false try typedef typeid typename union ' + 
	'using uuid virtual void volatile whcar_t while';

	this.regexList = [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// strings
		{ regex: new RegExp('^ *#.*', 'gm'),						css: 'preprocessor' },
		{ regex: new RegExp(this.GetKeywords(datatypes), 'gm'),		css: 'datatypes' },
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' }
		];

	this.CssClass = 'dp-cpp';
	this.Style =	'.dp-cpp .datatypes { color: #2E8B57; font-weight: bold; }';
}

dp.sh.Brushes.Cpp.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.Cpp.Aliases	= ['cpp', 'c', 'c++'];
/* Python 2.3 syntax contributed by Gheorghe Milas */
dp.sh.Brushes.Python = function()
{
    var keywords =  'and assert break class continue def del elif else ' +
                    'except exec finally for from global if import in is ' +
                    'lambda not or pass print raise return try yield while';

    var special =  'None True False self cls class_'

    this.regexList = [
        { regex: dp.sh.RegexLib.SingleLinePerlComments, css: 'comment' },
        { regex: new RegExp("^\\s*@\\w+", 'gm'), css: 'decorator' },
        { regex: new RegExp("(['\"]{3})([^\\1])*?\\1", 'gm'), css: 'comment' },
        { regex: new RegExp('"(?!")(?:\\.|\\\\\\"|[^\\""\\n\\r])*"', 'gm'), css: 'string' },
        { regex: new RegExp("'(?!')*(?:\\.|(\\\\\\')|[^\\''\\n\\r])*'", 'gm'), css: 'string' },
        { regex: new RegExp("\\b\\d+\\.?\\w*", 'g'), css: 'number' },
        { regex: new RegExp(this.GetKeywords(keywords), 'gm'), css: 'keyword' },
        { regex: new RegExp(this.GetKeywords(special), 'gm'), css: 'special' }
        ];

    this.CssClass = 'dp-py';
	this.Style =	'.dp-py .builtins { color: #ff1493; }' +
					'.dp-py .magicmethods { color: #808080; }' +
					'.dp-py .exceptions { color: brown; }' +
					'.dp-py .types { color: brown; font-style: italic; }' +
					'.dp-py .commonlibs { color: #8A2BE2; font-style: italic; }';
}

dp.sh.Brushes.Python.prototype  = new dp.sh.Highlighter();
dp.sh.Brushes.Python.Aliases    = ['py', 'python'];
dp.sh.Brushes.Sql = function()
{
	var funcs	=	'abs avg case cast coalesce convert count current_timestamp ' +
					'current_user day isnull left lower month nullif replace right ' +
					'session_user space substring sum system_user upper user year';

	var keywords =	'absolute action add after alter as asc at authorization begin bigint ' +
					'binary bit by cascade char character check checkpoint close collate ' +
					'column commit committed connect connection constraint contains continue ' +
					'create cube current current_date current_time cursor database date ' +
					'deallocate dec decimal declare default delete desc distinct double drop ' +
					'dynamic else end end-exec escape except exec execute false fetch first ' +
					'float for force foreign forward free from full function global goto grant ' +
					'group grouping having hour ignore index inner insensitive insert instead ' +
					'int integer intersect into is isolation key last level load local max min ' +
					'minute modify move name national nchar next no numeric of off on only ' +
					'open option order out output partial password precision prepare primary ' +
					'prior privileges procedure public read real references relative repeatable ' +
					'restrict return returns revoke rollback rollup rows rule schema scroll ' +
					'second section select sequence serializable set size smallint static ' +
					'statistics table temp temporary then time timestamp to top transaction ' +
					'translation trigger true truncate uncommitted union unique update values ' +
					'varchar varying view when where with work';

	var operators =	'all and any between cross in join like not null or outer some';

	this.regexList = [
		{ regex: new RegExp('--(.*)$', 'gm'),						css: 'comment' },			// one line and multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// single quoted strings
		{ regex: new RegExp(this.GetKeywords(funcs), 'gmi'),		css: 'func' },				// functions
		{ regex: new RegExp(this.GetKeywords(operators), 'gmi'),	css: 'op' },				// operators and such
		{ regex: new RegExp(this.GetKeywords(keywords), 'gmi'),		css: 'keyword' }			// keyword
		];

	this.CssClass = 'dp-sql';
	this.Style =	'.dp-sql .func { color: #ff1493; }' +
					'.dp-sql .op { color: #808080; }';
}

dp.sh.Brushes.Sql.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.Sql.Aliases	= ['sql'];
dp.sh.Brushes.Php = function()
{
	var funcs	=	'abs acos acosh addcslashes addslashes ' +
					'array_change_key_case array_chunk array_combine array_count_values array_diff '+
					'array_diff_assoc array_diff_key array_diff_uassoc array_diff_ukey array_fill '+
					'array_filter array_flip array_intersect array_intersect_assoc array_intersect_key '+
					'array_intersect_uassoc array_intersect_ukey array_key_exists array_keys array_map '+
					'array_merge array_merge_recursive array_multisort array_pad array_pop array_product '+
					'array_push array_rand array_reduce array_reverse array_search array_shift '+
					'array_slice array_splice array_sum array_udiff array_udiff_assoc '+
					'array_udiff_uassoc array_uintersect array_uintersect_assoc '+
					'array_uintersect_uassoc array_unique array_unshift array_values array_walk '+
					'array_walk_recursive atan atan2 atanh base64_decode base64_encode base_convert '+
					'basename bcadd bccomp bcdiv bcmod bcmul bindec bindtextdomain bzclose bzcompress '+
					'bzdecompress bzerrno bzerror bzerrstr bzflush bzopen bzread bzwrite ceil chdir '+
					'checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split class_exists '+
					'closedir closelog copy cos cosh count count_chars date decbin dechex decoct '+
					'deg2rad delete ebcdic2ascii echo empty end ereg ereg_replace eregi eregi_replace error_log '+
					'error_reporting escapeshellarg escapeshellcmd eval exec exit exp explode extension_loaded '+
					'feof fflush fgetc fgetcsv fgets fgetss file_exists file_get_contents file_put_contents '+
					'fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype '+
					'floatval flock floor flush fmod fnmatch fopen fpassthru fprintf fputcsv fputs fread fscanf '+
					'fseek fsockopen fstat ftell ftok getallheaders getcwd getdate getenv gethostbyaddr gethostbyname '+
					'gethostbynamel getimagesize getlastmod getmxrr getmygid getmyinode getmypid getmyuid getopt '+
					'getprotobyname getprotobynumber getrandmax getrusage getservbyname getservbyport gettext '+
					'gettimeofday gettype glob gmdate gmmktime ini_alter ini_get ini_get_all ini_restore ini_set '+
					'interface_exists intval ip2long is_a is_array is_bool is_callable is_dir is_double '+
					'is_executable is_file is_finite is_float is_infinite is_int is_integer is_link is_long '+
					'is_nan is_null is_numeric is_object is_readable is_real is_resource is_scalar is_soap_fault '+
					'is_string is_subclass_of is_uploaded_file is_writable is_writeable mkdir mktime nl2br '+
					'parse_ini_file parse_str parse_url passthru pathinfo readlink realpath rewind rewinddir rmdir '+
					'round str_ireplace str_pad str_repeat str_replace str_rot13 str_shuffle str_split '+
					'str_word_count strcasecmp strchr strcmp strcoll strcspn strftime strip_tags stripcslashes '+
					'stripos stripslashes stristr strlen strnatcasecmp strnatcmp strncasecmp strncmp strpbrk '+
					'strpos strptime strrchr strrev strripos strrpos strspn strstr strtok strtolower strtotime '+
					'strtoupper strtr strval substr substr_compare';

	var keywords =	'and or xor __FILE__ __LINE__ array as break case ' +
					'cfunction class const continue declare default die do else ' +
					'elseif empty enddeclare endfor endforeach endif endswitch endwhile ' +
					'extends for foreach function include include_once global if ' +
					'new old_function return static switch use require require_once ' +
					'var while __FUNCTION__ __CLASS__ ' +
					'__METHOD__ abstract interface public implements extends private protected throw';

	this.regexList = [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// single quoted strings
		{ regex: new RegExp('\\$\\w+', 'g'),						css: 'vars' },				// variables
		{ regex: new RegExp(this.GetKeywords(funcs), 'gmi'),		css: 'func' },				// functions
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' }			// keyword
		];

	this.CssClass = 'dp-c';
}

dp.sh.Brushes.Php.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.Php.Aliases	= ['php'];
dp.sh.Brushes.Default = function()
{
	this.regexList = [
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		// strings
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	css: 'number' }
		];

	this.CssClass = 'dp-default';
	this.Style = '.dp-default .number { color: #C00000; }';
}

dp.sh.Brushes.Default.prototype	= new dp.sh.Highlighter();
dp.sh.Brushes.Default.Aliases	= ['default'];

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=hotkey.js
Content-Type: text/javascript; name=hotkey.js
Content-Location: http://www.iteye.com/javascripts/hotkey.js?1324994303
Content-Transfer-Encoding: 8bit

Object.Event={
extend:function(object){
object._objectEventSetup=function(event_name){
this._observers=this._observers||{};
this._observers[event_name]=this._observers[event_name]||[];
};
object.observe=function(event_name,observer){
if(typeof(event_name)=='string'&&typeof(observer)!='undefined'){
this._objectEventSetup(event_name);
if(!this._observers[event_name].include(observer))
this._observers[event_name].push(observer);
}else
for(var e in event_name)
this.observe(e,event_name[e]);
};
object.stopObserving=function(event_name,observer){
this._objectEventSetup(event_name);
if(event_name&&observer)
this._observers[event_name]=this._observers[event_name].without(observer);
else if(event_name)
this._observers[event_name]=[];
else
this._observers={};
};
object.observeOnce=function(event_name,outer_observer){
var inner_observer=function(){
outer_observer.apply(this,arguments);
this.stopObserving(event_name,inner_observer);
}.bind(this);
this._objectEventSetup(event_name);
this._observers[event_name].push(inner_observer);
};
object.notify=function(event_name){
this._objectEventSetup(event_name);
var collected_return_values=[];
var args=$A(arguments).slice(1);
try{
for(var i=0;i<this._observers[event_name].length;++i)
collected_return_values.push(this._observers[event_name][i].apply(this._observers[event_name][i],args)||null);
}catch(e){
if(e==$break)
return false;
else
throw e;
}
return collected_return_values;
};
if(object.prototype){
object.prototype._objectEventSetup=object._objectEventSetup;
object.prototype.observe=object.observe;
object.prototype.stopObserving=object.stopObserving;
object.prototype.observeOnce=object.observeOnce;
object.prototype.notify=function(event_name){
if(object.notify){
var args=$A(arguments).slice(1);
args.unshift(this);
args.unshift(event_name);
object.notify.apply(object,args);
}
this._objectEventSetup(event_name);
var args=$A(arguments).slice(1);
var collected_return_values=[];
try{
if(this.options&&this.options[event_name]&&typeof(this.options[event_name])=='function')
collected_return_values.push(this.options[event_name].apply(this,args)||null);
for(var i=0;i<this._observers[event_name].length;++i)
collected_return_values.push(this._observers[event_name][i].apply(this._observers[event_name][i],args)||null);
}catch(e){
if(e==$break)
return false;
else
throw e;
}
return collected_return_values;
};
}
}
};
var HotKey=Class.create({
initialize:function(letter,callback,options){
if(!(letter instanceof Number))letter=letter.toUpperCase().charCodeAt(0);
HotKey.hotkeys.push(this);
this.options=Object.extend({
element:false,
shiftKey:false,
altKey:false,
ctrlKey:true
},options||{});
this.letter=letter;
this.callback=callback;
this.element=$(this.options.element||document);
this.handler=function(event){
if(!event||(this.letter==event.keyCode&&((!this.options.shiftKey||(this.options.shiftKey&&event.shiftKey))&&(!this.options.altKey||(this.options.altKey&&event.altKey))&&(!this.options.ctrlKey||(this.options.ctrlKey&&event.ctrlKey))))){
this.callback(event);
event.cancelBubble=true;
event.returnValue=false;
if(event.stopPropagation){
event.stopPropagation();
event.preventDefault();
}
return false;
}
}.bind(this);
this.enable();
},
trigger:function(){
this.handler();
},
enable:function(){
this.element.observe('keydown',this.handler);
},
disable:function(){
this.element.stopObserving('keydown',this.handler);
},
destroy:function(){
this.disable();
HotKey.hotkeys=Control.HotKey.hotkeys.without(this);
}
});
Object.extend(HotKey,{
hotkeys:[]
});
Object.Event.extend(HotKey);
------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=weiboshare.js
Content-Type: text/javascript; name=weiboshare.js
Content-Location: http://www.iteye.com/javascripts/weiboshare.js?1324994303
Content-Transfer-Encoding: 8bit

function open_window(url) {
  function o(){
    if(!window.open(url,'iteye',['toolbar=0,status=0,resizable=1,width=440,height=430,left=',(screen.width-440)/2,',top=',(screen.height-430)/2].join('')))
      window.location.href = url;
  }

  if(/Firefox/.test(navigator.userAgent)) {
    setTimeout(o,0);
  } else {
    o();
  }
}

var WeiboShare = Class.create({
  initialize: function(opts) {
    var imgs = opts['img_scope'].select('img:not(.star):not(.spinner)');
    var img_url = '';
    if(imgs.size() > 0) img_url = imgs[0]['src'];

    this.params = {
      title: opts['title'] || document.title,
      url: encodeURIComponent(opts['url'] || document.location.href),
      pic: encodeURIComponent(img_url)
    }
    this.share_buttons = opts['share_buttons'];

    this.share_buttons.select('a').each(function(link){
      link.observe('click', (function(event){
        var url = WeiboShare.make_share_url(link.readAttribute('data-type'), this.params);
        open_window(url);
        event.stop();
      }).bindAsEventListener(this));
    }, this);
  }
});

WeiboShare.register = function(sites) {
  this.sites = (this.sites || new Hash()).merge(sites);
};

WeiboShare.make_share_url = function(key, params) {
  var site_info = this.sites.get(key);
  params['appkey'] = site_info['appkey'];

  var param_array = [];
  for(var p in params) {
    param_array.push(p + '=' + params[p]);
  }

  return (site_info['url'] + '?' + param_array.join('&'));
}

WeiboShare.register({
  sina: {
    url: 'http://service.weibo.com/share/share.php',
    appkey: '3842512498'
  },
  qq: {
    url: 'http://v.t.qq.com/share/share.php',
    appkey: '050a47d9d5d848029e1de3198d2abcda'
  }
});

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=logo.gif
Content-Type: image/gif; name=logo.gif
Content-Location: http://www.iteye.com/images/logo.gif?1324994303
Content-Transfer-Encoding: Base64

R0lGODlhyABaANUAAMfT3lZ6nI6mvdRQJCxZg/H099Xe5qq8zUhvlOPp7jpkjIGc
tWWGpJyxxXORrbjH1vfe1tdbMvz08e+9rdxxTdlmP/TTyOGHafrp5OmnkfLIuuSS
duyyn+edhN98Wx5Oe////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78i
IGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxu
czp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4w
LWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8
cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjIt
cmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4
bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnht
cE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJl
Zj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVm
IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3Mi
IHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6QUI2NTJFQjE1QUFDMTFFMEFDRjlD
NzYwNkFFQkUwRTAiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6QUI2NTJFQjI1
QUFDMTFFMEFDRjlDNzYwNkFFQkUwRTAiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RS
ZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpBQjY1MkVBRjVBQUMxMUUwQUNGOUM3NjA2
QUVCRTBFMCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpBQjY1MkVCMDVBQUMx
MUUwQUNGOUM3NjA2QUVCRTBFMCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6
UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf2
9fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfG
xcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeW
lZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdm
ZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2
NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcG
BQQDAgEAACH5BAAAAAAALAAAAADIAFoAAAb/QJBwSCwaj8ikcslsOp/QqHRKrVqv
2Kx2y+16v+CweEwum8/otHrNbrvf8Lh8Tq/b7/gophOR5P+AVBIZA4UTgYiJShAV
hYUXipGSE46OFJKYgZSVFBaZn3ibjhlDnqCncBaVERBCFo2tqLJqEhGOrCASG44d
s75nu46tEhSVFb/IYhCVHLnFo37J0l0Xjh5C1YW4udPdWBiVrRqOFX4SF33e6lMc
jpAgjQO4ELYDh+v4Ts8DGiCizRjqDeiVr6CSZxGEPDsGwoO2ewYjIrHQD8QoEKoK
VZTIMQkGDRkwgAi2QUgBAChTqjRAJIHKlzBjygTQ8Q6ECRtiAfjAs6fP/wBEBPgc
SrSo0Q9SXAoQwCBAgAUCDrBsEuAoTwIJoDSwyvOAEwMHBCxwGmDpg6xndh4FOkQo
17dFnxhYoIArAQYPlhh4y+BJAQJcETB54ACwVQULpo5Ra5StELdwI/NscqCq5A8E
BBRIsuAtzSYOPCcpIKDuZQRexTAu6hgE5MtvlwCwDPtqAyR/uSpostqogyQHDNf+
gODzl95DW78eblRJZ+Y/0RY58Pb2EgR2NxspQBv6hwVgkP8M6v0obuzlexIwTqR7
UQLakVDnar2IAeHpEcTfIr6n8vRxGWEAegD2lBoRe3H1G274FSWYEfMVeJViWvTH
038S9rSdaRl2Zf/Ec1axRwSIR4kIQoQdEkAhFhZ+gGGHRRRAYIc8iZibVQ/a99aC
CDaYoX78WfVihkUwQONQ8BWxFX1GuEdUkkQUwOGRH/RVoZBEALDUllyWJmSXXBLx
AJXJGTHje/uhaJQARhhJZk/1XdFia0s46RObS9z4Jk95ZbnjEHoatVsRLWYIpZxY
OmFnT3gqsVxgCxwAwANMXTYoEaFx9RmJRpk45VtlPQDAAQucqWAWcz6xKE+NMhgZ
AyuaJICPRh1oEq0+CZagVVYSoeZRme03RAJuwiVdFakqalWrRyxpV59JJGCqg0Y4
e1QDq151rBDZ9oTAtkYAgOtQzE6RLFXLLvH/6XuxHiEjXLFOC1u5CcAFJBP3vXUp
somie1S5LcFlogGF8cTAZ+9yVW6h+jarr7AnWqaAA2jtalW7UJzLRLYAD2HtmhAW
taDFjR2RKXMmgtDtBzYWq15qjxLV8RMa15luEicbdagQY4IMQs7NbTcuV70W8WcR
nPo01dBVIrqWqjcj0S14Rayr3mYkF9Xux5FhdUS9XEErRNbjgZD0UPua2+/GUR8h
GoJcpcZ0yiBYrTAShRJgRMw+bcaw0yUr+68SbwlbKJ7dxumnpRALUSidKmsqRGxW
1KwEx4RzFe7dZnN+hMtvia0kV5CDTtRnlPP7tOA+I5H6EGT71KdLMwEA/+6wTPun
xK9ljm7VELWjBDhrUA+eROFNAtu4FHwTdTvwpBsBtm9mWJ4E5sdLrmOtW9h9p2x2
HcG312VYL3XbZnJFdREP+Ggri7otP2zoRyStAMbHrW2z8UiYjmTjBcCWUxbwPCvI
y0NMOFq4HECWBsgvf6vzV+sc5rk0ZItuRVgZBttgviNgDwmxGwr+xHDBJnCNKPea
QweTxz8keE89IwRDCZkwPRw9UA0rzCD6qgUXAoiODDNk21u+pUL9XW6HMcqdwW5H
GsVhIYhL4N17NHMEgsWQCzlsDxKL0DwHRQUllcJMAacARXVdhgECQElY0AO5MGRx
CB8cjRL5woUyKv+hZ+l5nxuNeL0tsq9AG4yCHZXgv9rsbI8RFOIECQmgtFlhkHIE
0PpUw8fztVAJCSvPzAQZoiiEEDZXhF8i97dIJSRgjlYh3xUguTsAtbELb+SWH6v4
wsjw6JGdlIIUYfNDWFbSg7N01wElE0gJFqWYeEOloG44PKK8EpiXdMLZTvPEXE4h
ASuroBdiGbloOgEAw7RLKI9Yois0QJlDyREEA2dMmVnhAOF8EhVXac0qkAadqFnM
L1lYSinMpZZ30WMVWKlLBjANMeO8QgLAxCWByoehW0KmExJAqbE4xQFRSegTwgJR
AYyRCmARAAMHKICz1OSkKE2pSlfK0pa69KUmMI2pTGdK05ra9KY4zalOd8rTnvr0
p0ANqlCHStSiGvWoSC1CEAAAOw==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=mobile.gif
Content-Type: image/gif; name=mobile.gif
Content-Location: http://www.iteye.com/images/icon/whole_category/mobile.gif?1324994303
Content-Transfer-Encoding: Base64

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
6azDztntuONOO2efjQ4GXsUt99x0qxQQADs=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=fy.gif
Content-Type: image/gif; name=fy.gif
Content-Location: http://www.iteye.com/images/news/fy.gif?1324994303
Content-Transfer-Encoding: Base64

R0lGODlhFgAWAOYAAO9XD/FfGvFiHrNCDPBYELFBDOtWD9NNDv7+/vBbFLdDDLVC
DPr6+rxFDL5FDNxQDqs+C8BHDbpEDOdUD9VODrhDDOJTD69AC8lJDcZIDcRIDc9L
DdhPDtpQDvv7+81LDeZUD/BcFv39/e1WD9FNDuzs7Kk+C+RTD8tKDfj4+Ojo6Pz8
/PBZEvFgHMdJDcjIyOlVD/BdGPf39+np6fHx8erq6s3NzfT09PX19fn5+e/v79dP
Dt5RDvJvMeNgI+9oKNHR0eHh4fJzNufk49TU1MVVH8nJyfLy8v/7+qlJHKc9C/iu
i9zc3NDQ0M+PcePj49zZ2MrKyu7u7seGaPWog72Eaa5MHblQHvGkgNra2tbW1uvr
67h+YvisiMvLy/77+a0/C+BSD8JHDfP2+P///wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAAAWABYAAAf/gEhLQgKFAi0BATEhCSwE
AD9UX2SUXYaHiYwJBI8jBjATWJRkPZiKjI4AAAYGEyAnFj6jiKeNnZ+usGE8D6MB
mgRjACNjxcZhDx0dHKO2qgZjrmMWYWFjyzsUB6O3oLDUYw9jHNokGx+jrNJj1cnF
2ucoGC6jueDi7wfG8xkao9S7xJE7YG6MvH5ixEQYhQzbmAMbjBlLGMFBg1HLyo35
MAZDvzEULUqoMKrcuWIZJBobqWDBqHjzxmgIOYZlywEFRh2cqdCByDE3cV4AswIB
AoQ9G4yscLNAgaFgIMjwgKBIUpYLFgiFCgGCFR0pRDhpoJSpVqFg0nY1YaLKDBwe
VIZMudL0qVoIbJUk4QKlhIwVR2oEyUKkiY0oLxIb8WIDiBYmT0rgYCCCgYwbNKSU
qDFDhWcVM7aU0EHjRgqqRkWIWOGBgescKVLkcM3AwwoRRikFAgA7

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=04e6a393-c05d-3c6a-afce-db192bb3f30e.png
Content-Type: text/html; name=04e6a393-c05d-3c6a-afce-db192bb3f30e.png
Content-Location: http://dl.iteye.com/upload/attachment/565439/04e6a393-c05d-3c6a-afce-db192bb3f30e.png
Content-Transfer-Encoding: Base64

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
yo5cvj6NAAAAAElFTkSuQmCC

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=34992ae1-7fb7-3011-af7f-d0af44d80b9f.png
Content-Type: text/html; name=34992ae1-7fb7-3011-af7f-d0af44d80b9f.png
Content-Location: http://dl.iteye.com/upload/attachment/565441/34992ae1-7fb7-3011-af7f-d0af44d80b9f.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAIQAAACWCAYAAAAfWiA3AAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
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
P/0u1157JUuOrkM1DrJmuBcpBLYrcFMSr16STkkaUg5+ppl0xiKdEXi+hZeSeCkr
ee9bOI7EshJzIa1kWNbOqmjMTip73P+sfSYAaQle9tZuBvsCVt0/yr23ruULF99H
5QKXZUum8fwXtnPUMZ1ksjOwbJ8ohmJFUw1z8sQTVzBv/lJ5+S9/+cH777//VOA9
JGWE/3L5V+TPHQd847jjjlvy7x/5qGpoaLCu+dvfdk7W1K74sccfRU/PNvp6h/jt
r6/gnvtuYPYSwQtfPYNDljXguhKta5lLYuymmfGbZ0ztM2PG35td3k+cvNiXTDRt
IoRUOK6N67gEFcP6Rwrc/Lde7r5pCF1pYP78JbzwRS/g2GOPZf36tax6ZC1gcBwH
Y9D33XeP+dMf/6iGhoY+A3z2if7m+V/9Fl3TZhIGAcVyhTCKKJfLB6wdwFMNiM82
NDT+x/vPO0+/8lWvitLpdGbbtq3c+c87a3yDhes6lMpFent3cPkvf03v0CMccXId
p798Kt2zsmhlCKr6X/oUGTRKh9T508mluqhEAwyVViGEwPNcbEdQrWjWPjjM9X/e
zl03jNKQmcWSJYdxyKGH0N09FWlZBNUqXV1dYaVSCT9w3vuzW7du/W/g3f9KQDyV
JuOjCxd2fvzir/8gmD5jAaOjIykArTRKKaSUFAoj3HjDzdxww3U4uQFOPbuD456/
nMZWj7CqqJT+9dldhkTFLJ/+PhZ0vBpLuhgMmwau4Za1n6NaLSADGyFg3uIGDl3e
xOhwyN039fGPP/6Bq6/9P5ryU1l5+FEsXDSf+vp6vWDBIfKS//7m6Mc/9tF3PfjA
A9cCv3pU7zudIeWnMebJeyCeKkBkgDc///QO9eCDd8ubb77H0Toil8szNDTItdde
w/atO9jRt5XOWTGv+/culh83C9+3CKqacuHpUwMTqwqHTnkdC6e8cYLdFUxrOhml
A25Y9UkQFsYIwkATBhrXtTj29E6OPaOTHZsr3HF9L7dd8xuu+VtWG4yaM2eO29ra
6qmEFGt7TA/8hFPo7J5KqVh8xgOiyfdlvRQxmzZuNYgM2gRs2rSR66+7kfUbHmLJ
0TnO/fBUFq5oQFqCoKIol55e+Z4Gg2P5zGg541G3dzc+j1yqi2KwDSmcnb6GNlQr
yW9pavN40Wumcdo5beSCM+W2+6b2fv6/LvjdjTfeMLVGbT9qHua8hUt46avfRBgE
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

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=b0a942c2-5fa8-32a9-9c9c-d4347c6413bc.png
Content-Type: text/html; name=b0a942c2-5fa8-32a9-9c9c-d4347c6413bc.png
Content-Location: http://dl.iteye.com/upload/attachment/565443/b0a942c2-5fa8-32a9-9c9c-d4347c6413bc.png
Content-Transfer-Encoding: Base64

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
AAAASUVORK5CYII=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c.png
Content-Type: text/html; name=e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c.png
Content-Location: http://dl.iteye.com/upload/attachment/565445/e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c.png
Content-Transfer-Encoding: Base64

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

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=04e6a393-c05d-3c6a-afce-db192bb3f30e-thumb.png
Content-Type: image/png; name=04e6a393-c05d-3c6a-afce-db192bb3f30e-thumb.png
Content-Location: http://dl.iteye.com/upload/attachment/0056/5439/04e6a393-c05d-3c6a-afce-db192bb3f30e-thumb.png
Content-Transfer-Encoding: Base64

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

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=34992ae1-7fb7-3011-af7f-d0af44d80b9f-thumb.png
Content-Type: image/png; name=34992ae1-7fb7-3011-af7f-d0af44d80b9f-thumb.png
Content-Location: http://dl.iteye.com/upload/attachment/0056/5441/34992ae1-7fb7-3011-af7f-d0af44d80b9f-thumb.png
Content-Transfer-Encoding: Base64

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
V7/6FYuLi3zve99jZmaGLMv2zGa2uKB2JDgsBAWpThdbil0N1eEdcNLzrtLO7Bno
xjgRYyfyVlSHFfL05rZiH2N3wbFvYNvdwqC94LTWYIUpPrPY99qRdKW1u69lF2R7
gb4LSicTY4ekveKxu14WrxEGI3dXGind9q7VavHG62/y1luv0Y6vc/a7Pg9/b4qj
p2t4vnAKJWYoKnD7bXJLU5qkaJlz/MRB5seOk5k2XjvCmq+mQ2Kt+5y1Mcn8SXj/
rYzWuizyMj5aQVBJCcsazxfo/PP1SLHWifFVyyXKpYg8y1laWaO5s0OWDjBZQp4M
SOM+WRyTJzFxmvDqKy9z8MAsT33vSebm5pibm2VycoIs1yRJSqffJ05SslyPggFR
GFKtlCiFIYHvopwuYvjVro0Hjol79epV/vt//+9sb2/zxBNPcPzEcQRiFIbcrZqz
RRbaww+CkZh0ELh6id3ZfG91n1+UXVosHtr4aBOgtcRoJ7AglUQqTRB4BXlR7CvY
l8ZVnvnDCkJEQV4seFyj4TxM2gUoGSBwBVPWeuQ2QOsAYwpKiaewVpAVn93zvVFy
cFjbLcDxpwJXCWmxRbIuKJz0PXs3kSOEjyc9wrAEIqLZyrnw7nucP/8BiysXKE/t
cP/9EacfdeHZUtmtLuYzlRPFCNhhGBEEESbrDSH86Xyrz22u4Ex6jLLwoqjx10jS
JMNi8X3IErej+DzHHH6odqfLyuo6OzvbJIMeJo3JkgFpMiCJ+8XPATpLOHXsMEeO
HKZarRZlC26MlABqMGnGyPaU6FL4p76n7njtigewsrLCK6+8wvUb17n/7Fl+/JOf
YIym2WwWogS7g2YIkKjkqNdKSfI8p1qt7hk0w4uDq72QOUr0gAxLjdzU0aaCySXG
5IXT5Y6TpYljr+b7Y4nGGIIgKM7pABFGkZvllHfb1k4ihUXJGPexixyIraO1o5oI
KVBFeFhJV/9t7N4KweEM6MBfq9ecHGkSUK/ViUrRbVEs4ULaniDwE3TeZ21twIX3
lnnt9fe4tXKRsbkODz9d59x3p6hPOL5ZEn+e6FOxXRMSKXyEdTUe2jhZHWvNVxez
Ek7KNY0tRruD5drpFRsNnZah286JY5cPAQpxvk/vbSKL6xgnKdvbO6ytr5PGPWyW
kA8BEvdJ4wHJoI/EMr8wz5/96Z/wvSefpF6vf+KAdwzrOwuETzPPWss777zDc889
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
SAAAAABJRU5ErkJggg==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=b0a942c2-5fa8-32a9-9c9c-d4347c6413bc-thumb.png
Content-Type: image/png; name=b0a942c2-5fa8-32a9-9c9c-d4347c6413bc-thumb.png
Content-Location: http://dl.iteye.com/upload/attachment/0056/5443/b0a942c2-5fa8-32a9-9c9c-d4347c6413bc-thumb.png
Content-Transfer-Encoding: Base64

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

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c-thumb.png
Content-Type: image/png; name=e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c-thumb.png
Content-Location: http://dl.iteye.com/upload/attachment/0056/5445/e55cd7c6-d4a6-3aa6-992b-f1c7c3d48a4c-thumb.png
Content-Transfer-Encoding: Base64

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
QGfPkaXwHFkHEbs0Z5fuWC8mLGbnjE/POD0dcjIa0O+0iUNJINmrXbYxzkXDxB7r
5Z6ZePGebRdsZmPmszHjyYTxdMZ0Mmc+X7Fa79jlJXnlVa1Hkegn86XmjDqICKMN
m82K7XrGYnbHw8kpJ+cXnJyecjboMOxFtAK9P+yPt/5wgI/PtMM/nxAOW2bs1gvW
8xnz+YzZbM5sPme+mLNcLlmtt6x3OWlWUZmDanWwuI4knxAoFRBuU7a7HdvNkvVq
ynR8yunZKacnZwz7XbpJQCuo1cRGVfssnbzkMBBejTUZ5W7O/K7k/dIh8yXThxvu
7j4xnq2Z1RLE1pu4N+b39t5BYutgy2absVmvWS+nLBczzs/PuDw/4Xw0oJNEhNIh
hWsCBEf+pcfkeyBAAVIgHSAqbJmyXS1YTCbMpmMmkzGTyYTJfMFssWa9zbwEMezt
PP3YfAPhLNZkVNmC9eyBm9/e8dvP77l7mDHbpGyygryoqIzxP5XxnNvaR8Zjs2lC
SpRUKKUwxlCVGbv1lMX4E3d3Z/RHV1y9fs133zteXWpOuhEqFEglDoaVEAh3MCob
xuGcXyohDKbcsZndcvvrT3y8ueH93YLb2YZdmmMqrweXVUVl/EF7NNf98HgjKRVK
aaqypCwy8nTJen7Lw21Ae3DG8OoPXF4XZG8uCYIhgdaoRkc99uOLY63k4MlygBMW
QUlRrJiPP/Dp19/49Omej/dzpssNaVFinPXzLkuqql5r6/bOhQNR13aTUihlMFVF
kW7YLCdM7mNuegPOX33H6x/+hlevJFenbVQ3JJLiKAbxWBI+NgqPfFVC1q4vi8nX
pMs7HtaOVb6h3K1ZrJfM1ht2WU5eGMr6fOydCs18lfIOhdp7WJUlRbZlu5qymN5z
//DA3cUrNn/4A04GoDTdSBCpY/d3bdw/EdkHhEFtbziDK1Oy7YzZ3Xve/fGP3Hy8
5X6+YbrN2WW1PV35c+01EYux7igO4hzOlpgqJd3MWc7ueLi94bdf3/Pbbzc8zNZs
CkNuHMYdH9J6ItKrGy+LOYsxDmOMF8s40t0OtcvZbL0hapygKAzF+ZCzYUKnFaBk
Uzz4yBf+SG1zWFNgii3paszk7iMf3r/j3cdbbiZbppuCorJI6b+9r8ohJOpzGIL6
MFhT4myFMZKy8J4vgWCb5mxLSVaCkoI4DHBIurEmVCDFUSCw/vdYcvgXLFWRUeVL
FrM7bj++59fffuPm05j72ZblLvdrrGpishZnHQ6JkKCUOlLojqZuvTplKP39sy0g
2KxXFBVUIqa0AsE5SvbpJSGBcKhazz/4hQ6S4phg9sxKKaw1lLs125mjqArYrinS
Las0Y5OXVLYmJvznZbMWexr0h/DRPaxB5ClZlrHepmR5ThCGxO02UilkP0a3NFoe
P/tjV++e6TkAgzMVZU148/EtN+9/47df3/Hpbsx0U7AuoTCu1qKO3PH1edYNt8da
XLkl30yZ3N7wy6+/8v7DDXf3C6bzlG1usY1x5DyVISRSh6ggJAw04ZGb0TmLrUpM
VVKWJXnhPTEIb0giJK5MKdb3TGxJusuYz1as//A9hbvmYqTpxYJYH4UT3YFMmsh2
WWzZTT8yu3vHx9/e8cvHBz6N12yyym+2oBbxAmSAVJog0IShJtDKc7AGnONq7lvk
5EWJqaVio2ZI6TDFlvXkI6YsUQAiJqsUb88STnuapmzB84h+rQxIwFqK3Yrlwztu
b97x888f+On9A7PFlqKyIBXCGpy1WAemdhoEYUgcBbXEErUubrCmpCqr2ltnsHjD
1x8fgy13rGZ3VE6S5xk4g1ABFsWgJdDaX8vWThBxHCwXR4zQudrL54kxXS8p0i3S
GShzqqJglxXklQWp0TpEB36+gRJ4z7nFmooyzymLgsoKrFBerdU+LuGsodot2E4t
D0mLoNUGIQjVGa2w60sMudrB6w2pIz3oQDSYApOvWU/H3Pz2K+9/fcenu3vupgvm
25K8OjiSrfFSWeoAFYYEQUCkFY3yjDEF5XbBevqJu4+/8fMff+WXD/cstxWF1YBG
Kw/eElZipEPqiKjVodXu0E4i2nFAFHju5mxFlWfk2ZZ0u2O1ydimBRZfMkZKEK7C
FgWbvGCxTFmuU4zQqFaCUAotQyKtHrn09wa1dEBJma9ZTj5x9/5Xbm5u+TRZMlkX
CCnQWiOkj88IGaCjFnGrTZLEdNoRcRT4g+Zqu8tWlHnGZrtms9mwy0ry0n9fSdAK
zzm3M9ZlyZ1qQTBEqJheSzHoaLQWe8Nmb0cebaBwFlul7FZTxh/f8eGXX3n/YczN
ZE1aWKIwIAwlzkiMNQgUUkfewdFp0+smJFFIoKRHmtoCU2ak6Y7lcsNmk1Eai63j
OJIKgaHYLclyr64FcYsw6RFoTawiYq28BHHHHP4xpKSxfbzXSWCtJd9tj+xAby9a
qdGBREcxUdKl1WrRbkXEoapdzf5c7DYrtusNWWEorMQc5Zi4qqAqdpidYTG+h6hP
EMQMu20G3TZaKYKa+TknHgU664fGWUuV78iWE2Z3H3j/8y/88z//xsNiw8o4ClfH
jhQIIalwIDVhq03S6fozEodonEW4EpOtWc3uuf34npubT9yNF8xWBXkFSjvPYYz1
Ro+OCcI2SbdPf3jCcDhg2Evot0Oi2ndtjaHMaq/MYs5kMmM2X7FNcwrjPTIOixNg
bEFVLtgtBfe3bYKkhRSWdnhKp9UmEoI6WtH4XoASYbcU2ZLJbMrHuyn30w2btKI0
DunqyLIIkWFE3OrSH44YjoYMB10GvZgkDupaTrVHxhQU2Y7lcsZsNmW2WDFfpmzT
Emub+5ta2uZkmyXLyQOLXpvtVUxJQrjnX0fiWuBtKFfhzI5yN2U1/cSnD7fcfBgz
n28pTe3ethXOSC+tVUQYt2l1h3QHA05HQ06HPbpJRKiE90SZHFPs2KyXTKZTptMF
i9WOzS6nLKvatSiwVUVVrEiXAdOHO5LukFak6LVGJHGbQNWM4pma/MzlQKOQudo5
Y61XzKQOCOKYOGnT7vXp9Yf0el36nRbtVuBVUFtSZBtW8ymL6YTlcs1ik7LLDRXC
SwPBXtqk2y32YUo7GTA7P+VsNCDSCqlqhEZt++1jO4J6LzPS9YzJpw/cvHvPze0D
D/MNizSnUhqnpNdyjECokKidELV7hzPSa9Nvx2hsBdWOcjtnev+JD7+95+ZmzGJT
UrgAqRyhbtQqgyMgjDt0T14xOrvk6uqSi7MRZ4MOg05IHDYSxFBmG9L1nMX0gdtP
N9x+umM8nTFfbdjlFUYGoAKUcEgKZLVkNbnhvVQEynE2iBkN27Ut4vYRYi/uczBr
8mzBeLHi43THbFNirEBJhUNgnUIFCWEypD864/r6FdfXF5yf9hn1/aapZtudAVtS
pBsW8zHj8S23d2PCTxPG0xVpVuvVgApASgnljnz5wG7ZZpcOyewJER6ecMzURGMs
mpIqm7FbfGT6cMPNzZhP92t2FYRBgNYGUZW4ykLQQrV6dIZnnF5ecXF5yauLUy5P
B/SSiFCCxCJMgS22rFdzHsa33N7e8enmgbvbOcuiwiBBSqQo0a7C5Rs2szH3SY9O
EnE2aNPtduhIgTrGVLjnZPH0FSkb6e4wRqJVm97whOHZGaPTM05PThkN+wz7Cd0k
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
Mzk6MzArMDg6MDAZXnvWAAAAAElFTkSuQmCC

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=sina.jpg
Content-Type: image/jpeg; name=sina.jpg
Content-Location: http://www.iteye.com/images/sina.jpg
Content-Transfer-Encoding: Base64

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2Jl
AGTAAAAAAf/bAIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMD
AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AA
EQgAEAAQAwERAAIRAQMRAf/EAGsAAAMBAAAAAAAAAAAAAAAAAAMHCAkBAAIDAQAA
AAAAAAAAAAAAAAUHAgMICRAAAQUBAQADAQAAAAAAAAAABQIDBAYHAQgAERITEQAC
AgICAgMBAQAAAAAAAAACAwEEEQUSBhMHACEiIxT/2gAMAwEAAhEDEQA/ANifKXk0
96OzU3v2v28NSaVOjE265ZbIMqDxzQbSw1KjSCs2w2xpLDAhk8x1l6VJW49NebeQ
nrf4698zz17rNzfVG7raWIRRmSgCLhyYcZjMkf1AwUYmZzJTExGMZ+de/b3uzrnq
vf0PWvR9SW07OIIKylM2PFTQUAXAU18kTiUXMVhAioSApg+Xj+Gv1Kr/AJewxUbZ
6/UxeiWYbZrfkmu5HX2is8FZooV+TUoPdJrsYcEZjLPAuj5cLqH3GuFGp0OT9MSO
JlYqx13VCvcwEXm8jS9McpEoj8R5RwOOQ8SGYnHODAvyXyjU7xnuDvjbnrhlg+sU
fFW2Ws2TIULUSzFlkUXSbucKdD1OggEprHWsJ/qqZlfHfb2TgCOM91o6Hpdq88ZI
1hRfEt0p2gP00TaaxcWpxLRKYQpON7vyHYbmDidGH4xCuCy7KuuoilWkdbdbD67t
OvU+sWyIVPpVv88osLZK4MWZlq5WixgmDHBkEoDj7gWRGJhh9v8AR/a72s3aenKb
d1XZtxG2Daam3SG2xDqnjCjaC1tNRJJquLz0zTdsViiAJ1M5ggJA6F7JrDOBWzx7
gC7BrBTfNlj3+5HR9OKVWjAp0g2Lngc0wShElyraqA6XHRf6EZ7I2S820mOiDzi+
rSEs9jSGnPq+mhlg7lyGsKFkCxnkMiquucnjMRkigZmI4wH3n4ydH6d2Fn2FV93e
xyqahHXevHRqJK2qzccPhYtt7b3F8a/OFsZxQkngJFLSsZHjP//Z

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=tec.jpg
Content-Type: image/jpeg; name=tec.jpg
Content-Location: http://www.iteye.com/images/tec.jpg
Content-Transfer-Encoding: Base64

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2Jl
AGTAAAAAAf/bAIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMD
AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AA
EQgAEAAQAwERAAIRAQMRAf/EAG0AAAMBAAAAAAAAAAAAAAAAAAUHCAkBAAIDAQAA
AAAAAAAAAAAAAAQHBQYICRAAAQUBAAIBBQAAAAAAAAAABQIDBAYHAQARCCESIhMV
EQACAwACAgMBAQAAAAAAAAACAwEEBREGABIhEwcUIv/aAAwDAQACEQMRAD8A32zN
AErT6HdrhU06retjs8+rZ1T1rGDlWEiESLZslkt9pkQ1k1p4TMMtNI5IYUtXHHHX
koT9NXaapXZfnUWBRzc+qDbL5GTkIZBStal8+vMiElMyJcfAiMzPnMzrrxfn097Z
Q7Z3t3SdVz6cMFUNJJALn2bHHvxBtABGDCZmDM2QMeH9GFCRQ/U2hGfsYpsuJAoV
xNVwXOHmxk6rzJA2Kix1ewoakFhJcRIPwXvXJz7bkdf4qS6lSPA86RYNRjXjpde0
iNS2kuVmDhEy+tgfAkJQs459BmCj5iRmJ8k95RIZporUWdf7z18E2X1gdD0tqmxQ
S5Dp9mLYuXqLj7jEll/mRYMj5BuP/IMnk2HHJWnf3ID9E1IhnGbR4AQZy/5nZLgH
jydYsoNZnsGTCPC6/X2Iw5LjzbUElOXK6lT7TH2Hdqv0tr9eqfm/U/5m7drrE7Fz
7WmNZ1VFmKtFTZWJ8g2yxks4AiNKfSOBI5lKdL7jpdP/ADW7udwG4tOf2JmdnwpA
Tdo2Lavt0rCZb6SLl10gCOTEUvcTpiWAv1X9t+WQU4CtWd40O1i63jbZgUNfdP1Y
hHO6VbB8QhDeEUmthgjxRAuCRKQ4q5K1Tp0uX+ltj2lpPE+MHF6VurYvX7uzGp5+
cthVqef7/wAyiICg3tc4EyZCJFADCVgHMn8lPlO1v1qhar2et9Ar79/e33oXd0dM
oZesLBgEuqhSpbCgNgLlky5zG+gr5gIiPP/Z

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=icon_biggrin.gif
Content-Type: image/gif; name=icon_biggrin.gif
Content-Location: http://www.iteye.com/images/smiles/icon_biggrin.gif
Content-Transfer-Encoding: Base64

R0lGODlhEwATAMQAAFUfANS/qtS/VSofVarf/6qfVf+/VapfAP/fqqpfVf/78ICA
AP//VX9fVf//qv/fVdSfVdTfVcDcwNSfANTf/38fAMzM/6p/Vap/AP///39/VdTf
qio/Vf///wAAAAAAACH5BAUUAB0ALAAAAAATABMAAAXYYCeOHfIIBkKuI3JFiOMI
hcGKCKJkl/M4hUwmslkhIhdhgSFL8lKkB6IAqPRM1ErhARlJGRcAB4NgHgADskEg
EjgQgsvBHYtjBFJB7sf8+RwMMSYmAgEGb4h/bwxSDw8GBhBuDAJ3P3xHcXguBlIa
FhgNAjAnCRgWGpAFRw4YFAQUGBcLCQuvGQcnAR2dAgsZChYWFMQKCncGqx16cAkb
xtABGhAnXW2OAg0YARvSGNSREi16jhALF8iPBbskGxMpj50pAhDsLPQoCJEQBUU3
OAEKXFjnj0QIADs=

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=icon_surprised.gif
Content-Type: image/gif; name=icon_surprised.gif
Content-Location: http://www.iteye.com/images/smiles/icon_surprised.gif
Content-Transfer-Encoding: Base64

R0lGODlhEwATAMQAAFUfAP/fANSfANTfqqpfANS/qn9/VdSfVaqfqv/78Kp/Vf//
VYCAgMDcwP+/VdTfVX8fVf+/AKbK8KqfVdTf/9S/VYCAAH8fAP/fqtS/AP/fVf//
/6p/AP///wAAAAAAACH5BAUUAB0ALAAAAAATABMAAAXTYCeOHeZUDpY0F8CQYwUA
UKVpDqCIBmkCh8UEsFjcKhUYRlNsFm+PyaFAqhgXGIWicFVsNknR7elNTJiayVcR
Zl7VG0UXYT5gltiiArE5GzkXCAoZBTdoCwoAgkYaBgAXHA4TVm4agJCGFQoWBxET
DmNMFRwGNow4DpJ4aIaGGQ4BDhECVDaGp6MKArIVBwMdoK03GQoSFAo4GQcjGcIa
ChQbZhkRCr8iGDYBGrEc0RsHDlMwBbupEQYNcaNUMCIVAhURBwQGHAcN7j4FE/0F
FO5CAAA7

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=icon_idea.gif
Content-Type: image/gif; name=icon_idea.gif
Content-Location: http://www.iteye.com/images/smiles/icon_idea.gif
Content-Transfer-Encoding: Base64

R0lGODlhEwATAMQAAKp/AKCgpP+fVap/VdTfqtR/VcDcwNSfqv/fVdTf/9S/Vaqf
Vf+/Vaq/qv/fqtS/qtR/ANSfVaqfqv///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAUUABMALAAAAAATABMAAAWV4CQS0SOeaCpGzGKq8BQ5
ihurD6NLxI0+CgeCUfKdFozHMGK7PSIAJmO5iD2QQoZDR4xEFK/JQ4DIDqdcXcQg
GggH3HOa2BABEAAtV7FnCCJ1MgNLfHNcERIjcIOGOgIKgCd5cn0DAAJNEweLfQUD
CxIBB2wnUFwDEJ8BDwatCSgGEZafEhINBq83Bg8NErhGJwm5NyEAOw==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=icon_razz.gif
Content-Type: image/gif; name=icon_razz.gif
Content-Location: http://www.iteye.com/images/smiles/icon_razz.gif
Content-Transfer-Encoding: Base64

R0lGODlhEwATAOYAAFMeDfXIM96vLLWLKPbgqp8/H9y9erefbqiOhvviR/v47pl4
J9ykLs69m9eYJeLRq+zAMs2JJ/3vU/fXP3VLPeu2JbuQKO3Kd+e6ROG1L9SlKKeG
O+mzIsmrbP7eQtiZJv3wV/nVO8uiO62EOuK2QOTPotCiKP///+/FRPbPOMmfOvHR
gd61Ke68KdXHps+fKf7mSqN/KfXks7KOPea1Oeu/RuGsM/70WOOvJu/YptaZMPXh
svDOePfeQvHDMOa1KfTMNdqhNu24J+a9SuO4MaOAKv///wAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAUUAEYALAAAAAATABMAAAf9gEaCgzI8NT8YFzuDjIME
KACRMDAhPiSRAI0rKQAgngCTMBREBgqZgishN6s3Eq6THh4ZBo4pnp4LC68wHrka
JYIoMLcLJycLocXHIkYyKa6uCwgAyDAJ0tQmDzw90BLY1dfTCwIdNQkJr8rICRPr
ODM/ocnsE/a5LRUxGLHzobETUgRo0QLHhgspYnn4B1Cgj3wvDuyAoHBSgSC8JoSw
QZCDBRdGSKSwFyvIRRoodRRooWGDoBwZgKSYmUJlgZsFInwY0GCQAQE+gvpgwOCD
g6MOOBxoZEDDD4L5KrTgoGHA0kZGSqh4oQEHBxwmLGzoiXXQgw4zimw4ALJRIAA7

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=login_icon.png
Content-Type: image/png; name=login_icon.png
Content-Location: http://www.iteye.com/images/login_icon.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABoAAAAgCAYAAAAMq2gFAAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKTWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f
92UPVkLY8LGXbIEAIiOsCMgQWaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKg
KLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec5/zOec8PgBESJpHmomoAOVKFPDrY
H49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28AAgBw1S4kEsfh/4O6
UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0ST4F
ANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcC
gL0FAHaOWJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2X
S9IzFLiV0Bp38vDg4iHiwmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q
5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryMAgQAEE7P79pf5eXWA3DHAbB1v2upWwDa
VgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0lYqG9MOOLPv8z4W/gi372
/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHiNLFcLBWK
8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y
0nYAQH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESg
gSqwQQcMwRSswA6cwR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqg
EZrhELTBMTgN5+ASXIHrcBcGYBiewhi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJh
SDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1cQPqQ28ggMor8irxHMZSBslED
1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqOY4DRMQ5mjNlh
XIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hM
WEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+T
SCQOyZLkTgohJZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BP
kvvJw+S3FDrFiOJMCaIkUqSUEko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQ
L1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/pdLoJ3YMeRZfQl9Jr6Afp5+mD9HcM
DYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Yb1VYKvYqfBWRyhKV
OpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7OUndS
j1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L5
7Ex2Bfsbdi97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqt
Zq1+rTfaetq+2mLtcu0W7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02Pr
eekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGo
EctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxrPGFiaTLbpMSkxeS+Kc2U
a5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW2pZ8ywWW
TZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p
0in1U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTD
qcSpw+lXZxtnoXOd8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt
2W3U3cw9xX2r+00umxvJXcM970H08PdY4nHM452nm6fC85DnL152Xlle+70eT7Oc
Jp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+Hvqa+It89viN+1n6Zfgf8nvs7
+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsGLww+FUIMCQ1Z
H3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjg
R2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xq
bFJsY+ybuIC4qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXc
orkX5unOy553PFk1WZB8OIWYEpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGx
t7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1IreZEZkrkj801WRNberM/ZcdktOZSc
lJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/PbFWyFTNGjtFKuUA4W
TC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYji1MX
dy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRa
uWMVYZVkVe9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk
626s91m/r0q9akHV0IbwDa0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvy
oTaj9nqdf13LVv2tq7e+2Sba1r/dd3vzDoMdFTve75TsvLUreFdrvUV99W7S7oLd
jxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+yCW1SNo0eSDpw5ZuAb9qb
7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawto22gPaG9
7+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8
mWtdUV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv
62X3y+1XPK509E3rO9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0X
dwruTNxdeo94r/y+2v3qB/oP6n+0/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJH
zEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv9563Or59/94vtLz1j82PAL+YvP
v655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+UPPR+mPHp9BP
9z7nfP78L/eE8/sl0p8zAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAA
ADqYAAAXb5JfxUYAAAJjSURBVHjavJbBS1RRFMZ/584bGSEwJoLATQshaFWoRWpI
Rf9AJS7aFAy0SWdcCC3aBu3GoVCCosCVZAUStGiliGU2IUSGi6BFZVAaE5I1Nve0
6GHPp867T9MD3+Zxvvud75537z2iqkSF9BRPA+eARuAQkABmgFlgGBjSfGOl6hrV
hEzPy4PAbeBYRC2zwCWbbxqNLWRyU+3AE6AWtygDGdvXPOgslMhNNgCTQJp4UQaO
V/qOvlhT+LrqaL+gaUEJYEbQLkGbfGQEfRbKqRH0rpd7noh0lMxOHPHdBGME6Fgu
tJTDCySzEzeAy6HPHcuFluGqjgS9EKpyUdCL64n4+TnfbZDTGbl1gm0TLAGMlAut
Cxs2pdBaEexgiHMyWkj1gKgSwOvIc6Y6HuKkU91j6Q2FUt2ju0BrQAmgFP2zaSnE
AXTv6p3KTbGV0HyTU55hh0Ikt3K22oFe/y6r3+K6i0ARGLT55jt/hbKTAFmgb5vM
DAHnPUHbtlEEoBOY9gR7ZQda1OuJalscxv49KWqThreff8ShpT3B1rlmZ1r20d/Z
AMCt8Tm67r9zVjKiFlfkTtSvEt2dMs5cT7DOVdUm5d+bZYS6lOH7khvfM2o33WGj
Fld+LEfr3PS48j1xmIKq3Nq48nfOUZweWbu6+l/l3849MqGXsSoeT8+tEMdm55lf
/OnM9SSGo6sP3vDq/TdSyQQPi5+Iw/UEuxBnfntU/BDoEXFuhjXv/XbgoxHsdcFW
4vRqE7hm/GkzI+hSaDb7X7j5deDMgEEVVO+hehjVIVRL/retoILqU1RPfRk42wXw
ZwANTs5Uo85DgAAAAABJRU5ErkJggg==

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=760.htm
Content-Type: text/html; name=760.htm
Content-Location: http://www.iteye.com/iframe_ggbd/760
Content-Transfer-Encoding: 8bit

        <html>
        <head></head>
        <body style="margin:0"><script type="text/javascript">/*728*90，iteye新闻内页页顶*/ var cpro_id = 'u671990';</script><script src="http://cpro.baidu.com/cpro/ui/c.js" type="text/javascript"></script></body>
        </html>

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=c.js
Content-Type: application/x-javascript; name=c.js
Content-Location: http://cpro.baidu.com/cpro/ui/c.js
Content-Transfer-Encoding: Base64

dHJ5e2lmKCF3aW5kb3cuX19faXMzYil7d2luZG93Ll9fX2lzM2I9InByZXBhcmUi
fWZ1bmN0aW9uIHRlc3QzYigpe3dpbmRvdy5fX19pczNiPSJsb2FkaW5nIjt2YXIg
Yz1uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7aWYoIWMubWF0Y2go
L21zaWUgKFtcZC5dKykvKSl7d2luZG93Ll9fX2lzM2I9ImZhbHNlIjtyZXR1cm59
dmFyIGE9bmV3IEltYWdlKCk7dmFyIGI9ImJkdGVzdF9fXyIrTWF0aC5mbG9vcihN
YXRoLnJhbmRvbSgpKjIxNDc0ODM2NDgpLnRvU3RyaW5nKDM2KTt3aW5kb3dbYl09
YTthLm9ubG9hZD1mdW5jdGlvbigpe3dpbmRvdy5fX19pczNiPSJ0cnVlIjthLm9u
bG9hZD1hLm9uZXJyb3I9YS5vbmFib3J0PW51bGw7d2luZG93W2JdPW51bGw7YT1u
dWxsfTthLm9uZXJyb3I9ZnVuY3Rpb24oKXt3aW5kb3cuX19faXMzYj0iZmFsc2Ui
O2Eub25sb2FkPWEub25lcnJvcj1hLm9uYWJvcnQ9bnVsbDt3aW5kb3dbYl09bnVs
bDthPW51bGx9O2Euc3JjPSJyZXM6Ly8zNjBzZS5leGUvMi8yMDI1In1pZih3aW5k
b3cuX19faXMzYj09PSJwcmVwYXJlIil7dGVzdDNiKCl9fWNhdGNoKGV4KXt9Zmlu
YWxseXt9dmFyIF9fX2Jhc2VOYW1lc3BhY2VOYW1lPSJDcHJvTmFtZXNwYWNlIjso
ZnVuY3Rpb24oKXt2YXIgYz1fX19iYXNlTmFtZXNwYWNlTmFtZTt2YXIgZz13aW5k
b3csYT0wLGY9ZmFsc2UsYj1mYWxzZTt3aGlsZSgoZyE9d2luZG93LnRvcHx8ZyE9
Zy5wYXJlbnQpJiZhPDEwKXtmPXRydWU7dHJ5e2cucGFyZW50LmxvY2F0aW9uLnRv
U3RyaW5nKCl9Y2F0Y2goZSl7Yj10cnVlO2JyZWFrfWErKztnPWcucGFyZW50fWlm
KGE+PTEwKXtiPXRydWV9aWYoIWImJih0b3AubG9jYXRpb24uaHJlZi5pbmRleE9m
KCJ1bmlvbi5iYWlkdS5jb20iKT4wfHx0b3AubG9jYXRpb24uaHJlZi5pbmRleE9m
KCJ1bmlvbnFhLmJhaWR1LmNvbSIpPjApKXtiPXRydWV9dmFyIGQ9ZnVuY3Rpb24o
aCxqLGkpe2guYmFzZU5hbWU9YztoLmlzSW5JZnJhbWU9ajtoLmlzQ3Jvc3NEb21h
aW49aTtoLm5lZWRJbml0VG9wPWomJiFpO2guYnVpbGRJbk9iamVjdD17IltvYmpl
Y3QgRnVuY3Rpb25dIjoxLCJbb2JqZWN0IFJlZ0V4cF0iOjEsIltvYmplY3QgRGF0
ZV0iOjEsIltvYmplY3QgRXJyb3JdIjoxLCJbb2JqZWN0IFdpbmRvd10iOjF9O2gu
Y2xvbmU9ZnVuY3Rpb24obyl7dmFyIGw9byxtLGs7aWYoIW98fG8gaW5zdGFuY2Vv
ZiBOdW1iZXJ8fG8gaW5zdGFuY2VvZiBTdHJpbmd8fG8gaW5zdGFuY2VvZiBCb29s
ZWFuKXtyZXR1cm4gbH1lbHNle2lmKG8gaW5zdGFuY2VvZiBBcnJheSl7bD1bXTt2
YXIgbj0wO2ZvcihtPTAsaz1vLmxlbmd0aDttPGs7bSsrKXtsW24rK109dGhpcy5j
bG9uZShvW21dKX19ZWxzZXtpZigib2JqZWN0Ij09PXR5cGVvZiBvKXtpZih0aGlz
LmJ1aWxkSW5PYmplY3RbT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8p
XSl7cmV0dXJuIGx9bD17fTtmb3IobSBpbiBvKXtpZihvLmhhc093blByb3BlcnR5
KG0pKXtsW21dPXRoaXMuY2xvbmUob1ttXSl9fX19fXJldHVybiBsfTtoLmNyZWF0
ZT1mdW5jdGlvbihtLHApe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxs
KGFyZ3VtZW50cywwKTtsLnNoaWZ0KCk7dmFyIG49ZnVuY3Rpb24ocSl7dGhpcy5p
bml0aWFsaXplPXRoaXMuaW5pdGlhbGl6ZXx8ZnVuY3Rpb24oKXt9O3RoaXMuaW5p
dGlhbGl6ZURPTT10aGlzLmluaXRpYWxpemVET018fGZ1bmN0aW9uKCl7fTt0aGlz
LmluaXRpYWxpemVFdmVudD10aGlzLmluaXRpYWxpemVFdmVudHx8ZnVuY3Rpb24o
KXt9O3RoaXMuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLHEpO3RoaXMuaW5pdGlhbGl6
ZURPTS5hcHBseSh0aGlzLHEpO3RoaXMuaW5pdGlhbGl6ZUV2ZW50LmFwcGx5KHRo
aXMscSl9O24ucHJvdG90eXBlPW07dmFyIGs9bmV3IG4obCk7Zm9yKHZhciBvIGlu
IG0pe2lmKGtbb10mJnR5cGVvZiBrW29dPT09Im9iamVjdCImJmtbb10ubW9kaWZp
ZXImJmtbb10ubW9kaWZpZXIuaW5kZXhPZigiZHluYW1pYyIpPi0xKXtrW29dPXRo
aXMuY2xvbmUoa1tvXSl9fWsuaW5zdGFuY2VzPW51bGw7bS5pbnN0YW5jZXM9bS5p
bnN0YW5jZXN8fFtdO20uaW5zdGFuY2VzLnB1c2goayk7cmV0dXJuIGt9O2gucmVn
aXN0ZXJNZXRob2Q9ZnVuY3Rpb24obyxrKXt2YXIgcD17fTt2YXIgbD17fTt2YXIg
cyxxLHI7Zm9yKHEgaW4gayl7cz1rW3FdO2lmKCFxfHwhcyl7Y29udGludWV9aWYo
dHlwZW9mIHM9PT0ib2JqZWN0IiYmcy5tb2RpZmllciYmcy5tb2RpZmllcj09PSJk
eW5hbWljIil7b1txXT1vW3FdfHx7fTt0aGlzLnJlZ2lzdGVyTWV0aG9kKG9bcV0s
cyl9ZWxzZXtpZih0eXBlb2Ygcz09PSJmdW5jdGlvbiIpe3BbcV09c31lbHNle2xb
cV09c319fWZvcihxIGluIHApe3M9cFtxXTtpZihxJiZzKXtvW3FdPXN9fWlmKG8m
Jm8uaW5zdGFuY2VzJiZvLmluc3RhbmNlcy5sZW5ndGgmJm8uaW5zdGFuY2VzLmxl
bmd0aD4wKXtmb3IodmFyIG09MCxuPW8uaW5zdGFuY2VzLmxlbmd0aDttPG47bSsr
KXtyPW8uaW5zdGFuY2VzW21dO3RoaXMucmVnaXN0ZXJNZXRob2QocixrKX19fTto
LnJlZ2lzdGVyT2JqPWZ1bmN0aW9uKG0sbyl7dmFyIGw9QXJyYXkucHJvdG90eXBl
LnNsaWNlLmNhbGwoYXJndW1lbnRzLDApO2wuc2hpZnQoKTt2YXIgbj1mdW5jdGlv
bihwKXt0aGlzLnJlZ2lzdGVyPXRoaXMucmVnaXN0ZXJ8fGZ1bmN0aW9uKCl7fTt0
aGlzLnJlZ2lzdGVyLmFwcGx5KHRoaXMscCl9O24ucHJvdG90eXBlPW07bi5wcm90
b3R5cGUuaW5zdGFuY2VzPW51bGw7dmFyIGs9bmV3IG4obCk7cmV0dXJuIGt9O2gu
cmVnaXN0ZXJOYW1lc3BhY2VCeVdpbj1mdW5jdGlvbihtLG8pe3ZhciBvPW0ud2lu
PW98fHdpbmRvdzt2YXIgbD1tLmZ1bGxOYW1lLnJlcGxhY2UoIiRiYXNlTmFtZSIs
dGhpcy5iYXNlTmFtZSk7dmFyIHM9bC5zcGxpdCgiLiIpO3ZhciBwPXMubGVuZ3Ro
O3ZhciB0PW87dmFyIHI7Zm9yKHZhciBuPTA7bjxwLTE7bisrKXt2YXIgaz1zW25d
O2lmKHQ9PW8pe3Rba109b1trXT1vW2tdfHx7fTtyPWs7bS5iYXNlTmFtZT1yfWVs
c2V7dFtrXT10W2tdfHx7fX10PXRba119dmFyIHE9dFtzW3AtMV1dfHx7fTtpZihx
LmZ1bGxOYW1lJiZxLnZlcnNpb24pe3RoaXMucmVnaXN0ZXJNZXRob2QocSxtKX1l
bHNle3E9dGhpcy5yZWdpc3Rlck9iaihtKTtxLmluc3RhbmNlcz1udWxsO3Rbc1tw
LTFdXT1xfX07aC5yZWdpc3Rlck5hbWVzcGFjZT1mdW5jdGlvbihrKXtpZigha3x8
IWsuZnVsbE5hbWV8fCFrLnZlcnNpb24pe3JldHVybn10aGlzLnJlZ2lzdGVyTmFt
ZXNwYWNlQnlXaW4oayx3aW5kb3cpO2lmKHRoaXMubmVlZEluaXRUb3Ape3RoaXMu
cmVnaXN0ZXJOYW1lc3BhY2VCeVdpbihrLHdpbmRvdy50b3ApfX07aC5yZWdpc3Rl
ckNsYXNzPWgucmVnaXN0ZXJOYW1lc3BhY2U7aC51c2luZz1mdW5jdGlvbihtLHAp
e3ZhciBrO2lmKCFwJiZ0aGlzLmlzSW5JZnJhbWUmJiF0aGlzLmlzQ3Jvc3NEb21h
aW4mJnRvcCYmdHlwZW9mIHRvcD09PSJvYmplY3QiJiZ0b3AuZG9jdW1lbnQmJiJz
ZXRJbnRlcnZhbCIgaW4gdG9wKXtwPXRvcH1lbHNle3A9cHx8d2luZG93fW09bS5y
ZXBsYWNlKCIkYmFzZU5hbWUiLHRoaXMuYmFzZU5hbWUpO3ZhciBsPW0uc3BsaXQo
Ii4iKTtrPXBbbFswXV07Zm9yKHZhciBuPTEsbz1sLmxlbmd0aDtuPG87bisrKXtp
ZihrJiZrW2xbbl1dKXtrPWtbbFtuXV19ZWxzZXtrPW51bGx9fXJldHVybiBrfX07
d2luZG93W2NdPXdpbmRvd1tjXXx8e307ZCh3aW5kb3dbY10sZixiKTtpZihmJiYh
Yil7d2luZG93LnRvcFtjXT13aW5kb3cudG9wW2NdfHx7fTtkKHdpbmRvdy50b3Bb
Y10sZixiKX19KSgpOyhmdW5jdGlvbihiKXt2YXIgYT17ZnVsbE5hbWU6IiRiYXNl
TmFtZS5VdGlsaXR5Iix2ZXJzaW9uOiIxLjAuMCIscmVnaXN0ZXI6ZnVuY3Rpb24o
KXt0aGlzLmJyb3dzZXI9dGhpcy5icm93c2VyfHx7fTtpZigvbXNpZSAoXGQrXC5c
ZCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKXt0aGlzLmJyb3dzZXIuaWU9
ZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHwrUmVnRXhwWyJceDI0MSJdfWlmKC9vcGVy
YVwvKFxkK1wuXGQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSl7dGhpcy5i
cm93c2VyLm9wZXJhPStSZWdFeHBbIlx4MjQxIl19aWYoL2ZpcmVmb3hcLyhcZCtc
LlxkKS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe3RoaXMuYnJvd3Nlci5m
aXJlZm94PStSZWdFeHBbIlx4MjQxIl19aWYoLyhcZCtcLlxkKT8oPzpcLlxkKT9c
cytzYWZhcmlcLz8oXGQrXC5cZCspPy9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2Vu
dCkmJiEvY2hyb21lL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSl7dGhpcy5i
cm93c2VyLnNhZmFyaT0rKFJlZ0V4cFsiXHgyNDEiXXx8UmVnRXhwWyJceDI0MiJd
KX1pZigvY2hyb21lXC8oXGQrXC5cZCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdl
bnQpKXt0aGlzLmJyb3dzZXIuY2hyb21lPStSZWdFeHBbIlx4MjQxIl19dHJ5e2lm
KC8oXGQrXC5cZCkvLnRlc3Qod2luZG93LmV4dGVybmFsLm1heF92ZXJzaW9uKSl7
dGhpcy5icm93c2VyLm1heHRob249K1JlZ0V4cFsiXHgyNDEiXX19Y2F0Y2goYyl7
fXRoaXMuYnJvd3Nlci5pc1dlYmtpdD0vd2Via2l0L2kudGVzdChuYXZpZ2F0b3Iu
dXNlckFnZW50KTt0aGlzLmJyb3dzZXIuaXNHZWNrbz0vZ2Vja28vaS50ZXN0KG5h
dmlnYXRvci51c2VyQWdlbnQpJiYhL2xpa2UgZ2Vja28vaS50ZXN0KG5hdmlnYXRv
ci51c2VyQWdlbnQpO3RoaXMuYnJvd3Nlci5pc1N0cmljdD1kb2N1bWVudC5jb21w
YXRNb2RlPT0iQ1NTMUNvbXBhdCJ9LGJyb3dzZXI6e30saXNXaW5kb3c6ZnVuY3Rp
b24oZSl7dmFyIGM9ZmFsc2U7dHJ5e2lmKGUmJnR5cGVvZiBlPT09Im9iamVjdCIm
JmUuZG9jdW1lbnQmJiJzZXRJbnRlcnZhbCIgaW4gZSl7Yz10cnVlfX1jYXRjaChk
KXtjPWZhbHNlfXJldHVybiBjfSxpc0luSWZyYW1lOmZ1bmN0aW9uKGMpe2M9Y3x8
d2luZG93O3JldHVybiBjIT13aW5kb3cudG9wJiZjIT1jLnBhcmVudH0saXNJbkNy
b3NzRG9tYWluSWZyYW1lOmZ1bmN0aW9uKGcsZCl7dmFyIGM9ZmFsc2U7Zz1nfHx3
aW5kb3c7ZD1kfHx3aW5kb3cudG9wO3ZhciBmPTA7aWYoIXRoaXMuaXNXaW5kb3co
ZCl8fCF0aGlzLmlzV2luZG93KGQucGFyZW50KSl7Yz10cnVlfWVsc2V7d2hpbGUo
KGchPWQpJiZmPDEwKXtmKys7aWYodGhpcy5pc1dpbmRvdyhnKSYmdGhpcy5pc1dp
bmRvdyhnLnBhcmVudCkpe3RyeXtnLnBhcmVudC5sb2NhdGlvbi50b1N0cmluZygp
fWNhdGNoKGUpe2M9dHJ1ZTticmVha319ZWxzZXtjPXRydWU7YnJlYWt9Zz1nLnBh
cmVudH19aWYoZj49MTApe2M9dHJ1ZX1yZXR1cm4gY30sZzpmdW5jdGlvbihkLGMp
e2M9Y3x8d2luZG93O2lmKCJzdHJpbmciPT09dHlwZW9mIGR8fGQgaW5zdGFuY2Vv
ZiBTdHJpbmcpe3JldHVybiBjLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGQpfWVs
c2V7aWYoZCYmZC5ub2RlTmFtZSYmKGQubm9kZVR5cGU9PTF8fGQubm9kZVR5cGU9
PTkpKXtyZXR1cm4gZH19cmV0dXJuIGR9LHNlbmRSZXF1ZXN0VmlhSW1hZ2U6ZnVu
Y3Rpb24oZCxmKXt2YXIgYz1uZXcgSW1hZ2UoKTt2YXIgZT0iY3Byb19sb2dfIitN
YXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMjE0NzQ4MzY0OCkudG9TdHJpbmcoMzYp
O2Y9Znx8d2luZG93O2ZbZV09YztjLm9ubG9hZD1jLm9uZXJyb3I9Yy5vbmFib3J0
PWZ1bmN0aW9uKCl7Yy5vbmxvYWQ9Yy5vbmVycm9yPWMub25hYm9ydD1udWxsO2Zb
ZV09bnVsbDtjPW51bGx9O2Muc3JjPWR9LGdldERvY3VtZW50OmZ1bmN0aW9uKGMp
e2lmKCFjKXtyZXR1cm4gZG9jdW1lbnR9Yz10aGlzLmcoYyk7cmV0dXJuIGMubm9k
ZVR5cGU9PTk/YzpjLm93bmVyRG9jdW1lbnR8fGMuZG9jdW1lbnR9LGdldFdpbmRv
dzpmdW5jdGlvbihjKXtjPXRoaXMuZyhjKTt2YXIgZD10aGlzLmdldERvY3VtZW50
KGMpO3JldHVybiBkLnBhcmVudFdpbmRvd3x8ZC5kZWZhdWx0Vmlld3x8bnVsbH0s
Z2V0VG9wV2luZG93OmZ1bmN0aW9uKGMpe2M9Y3x8d2luZG93O2lmKHRoaXMuaXNJ
bklmcmFtZShjKSYmIXRoaXMuaXNJbkNyb3NzRG9tYWluSWZyYW1lKGMsYy50b3Ap
JiZ0aGlzLmlzV2luZG93KGMudG9wKSl7cmV0dXJuIGMudG9wfXJldHVybiBjfSxi
aW5kOmZ1bmN0aW9uKGMsZCxlKXtjPXRoaXMuZyhjKTtkPWQucmVwbGFjZSgvXm9u
L2ksIiIpLnRvTG93ZXJDYXNlKCk7aWYoYy5hZGRFdmVudExpc3RlbmVyKXtjLmFk
ZEV2ZW50TGlzdGVuZXIoZCxlLGZhbHNlKX1lbHNle2lmKGMuYXR0YWNoRXZlbnQp
e2MuYXR0YWNoRXZlbnQoIm9uIitkLGUpfX1yZXR1cm4gY30sdW5CaW5kOmZ1bmN0
aW9uKGMsZCxlKXtjPXRoaXMuZyhjKTtkPWQucmVwbGFjZSgvXm9uL2ksIiIpLnRv
TG93ZXJDYXNlKCk7aWYoYy5yZW1vdmVFdmVudExpc3RlbmVyKXtjLnJlbW92ZUV2
ZW50TGlzdGVuZXIoZCxlLGZhbHNlKX1lbHNle2lmKGMuZGV0YWNoRXZlbnQpe2Mu
ZGV0YWNoRXZlbnQoIm9uIitkLGUpfX1yZXR1cm4gY30scHJveHk6ZnVuY3Rpb24o
ZSxkLGMpe3ZhciBnPWU7dmFyIGY9ZDtyZXR1cm4gZnVuY3Rpb24oKXtpZihjJiZj
Lmxlbmd0aCl7cmV0dXJuIGcuYXBwbHkoZnx8e30sYyl9ZWxzZXtyZXR1cm4gZy5h
cHBseShmfHx7fSxhcmd1bWVudHMpfX19LGdldFN0eWxlOmZ1bmN0aW9uKGUsZCl7
dmFyIGM7ZT10aGlzLmcoZSk7dmFyIGc9dGhpcy5nZXREb2N1bWVudChlKTt2YXIg
aD0iIjtpZihkLmluZGV4T2YoIi0iKT4tMSl7aD1kLnJlcGxhY2UoL1stX11bXi1f
XXsxfS9nLGZ1bmN0aW9uKGkpe3JldHVybiBpLmNoYXJBdCgxKS50b1VwcGVyQ2Fz
ZSgpfSl9ZWxzZXtoPWQucmVwbGFjZSgvW0EtWl17MX0vZyxmdW5jdGlvbihpKXty
ZXR1cm4iLSIraS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKX0pfXZhciBmO2lmKGcm
JmcuZGVmYXVsdFZpZXcmJmcuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSl7
Zj1nLmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKTtpZihmKXtj
PWYuZ2V0UHJvcGVydHlWYWx1ZShkKX1pZih0eXBlb2YgYyE9PSJib29sZWFuIiYm
IWMpe2M9Zi5nZXRQcm9wZXJ0eVZhbHVlKGgpfX1lbHNle2lmKGUuY3VycmVudFN0
eWxlKXtmPWUuY3VycmVudFN0eWxlO2lmKGYpe2M9ZltkXX1pZih0eXBlb2YgYyE9
PSJib29sZWFuIiYmIWMpe2M9ZltoXX19fXJldHVybiBjfSxnZXRQb3NpdGlvbkNv
cmU6ZnVuY3Rpb24oYyl7Yz10aGlzLmcoYyk7dmFyIGs9dGhpcy5nZXREb2N1bWVu
dChjKSxmPXRoaXMuYnJvd3NlcixkPWYuaXNHZWNrbz4wJiZrLmdldEJveE9iamVj
dEZvciYmdGhpcy5nZXRTdHlsZShjLCJwb3NpdGlvbiIpPT0iYWJzb2x1dGUiJiYo
Yy5zdHlsZS50b3A9PT0iInx8Yy5zdHlsZS5sZWZ0PT09IiIpLGk9e2xlZnQ6MCx0
b3A6MH0saD0oZi5pZSYmIWYuaXNTdHJpY3QpP2suYm9keTprLmRvY3VtZW50RWxl
bWVudCxsLGU7aWYoYz09aCl7cmV0dXJuIGl9aWYoYy5nZXRCb3VuZGluZ0NsaWVu
dFJlY3Qpe2U9Yy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpLmxlZnQ9TWF0aC5m
bG9vcihlLmxlZnQpK01hdGgubWF4KGsuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExl
ZnQsay5ib2R5LnNjcm9sbExlZnQpO2kudG9wPU1hdGguZmxvb3IoZS50b3ApK01h
dGgubWF4KGsuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCxrLmJvZHkuc2Nyb2xs
VG9wKTtpLmxlZnQtPWsuZG9jdW1lbnRFbGVtZW50LmNsaWVudExlZnQ7aS50b3At
PWsuZG9jdW1lbnRFbGVtZW50LmNsaWVudFRvcDt2YXIgaj1rLmJvZHksbT1wYXJz
ZUludCh0aGlzLmdldFN0eWxlKGosImJvcmRlckxlZnRXaWR0aCIpKSxnPXBhcnNl
SW50KHRoaXMuZ2V0U3R5bGUoaiwiYm9yZGVyVG9wV2lkdGgiKSk7aWYoZi5pZSYm
IWYuaXNTdHJpY3Qpe2kubGVmdC09aXNOYU4obSk/MjptO2kudG9wLT1pc05hTihn
KT8yOmd9fWVsc2V7bD1jO2Rve2kubGVmdCs9bC5vZmZzZXRMZWZ0O2kudG9wKz1s
Lm9mZnNldFRvcDtpZihmLmlzV2Via2l0PjAmJnRoaXMuZ2V0U3R5bGUobCwicG9z
aXRpb24iKT09ImZpeGVkIil7aS5sZWZ0Kz1rLmJvZHkuc2Nyb2xsTGVmdDtpLnRv
cCs9ay5ib2R5LnNjcm9sbFRvcDticmVha31sPWwub2Zmc2V0UGFyZW50fXdoaWxl
KGwmJmwhPWMpO2lmKGYub3BlcmE+MHx8KGYuaXNXZWJraXQ+MCYmdGhpcy5nZXRT
dHlsZShjLCJwb3NpdGlvbiIpPT0iYWJzb2x1dGUiKSl7aS50b3AtPWsuYm9keS5v
ZmZzZXRUb3B9bD1jLm9mZnNldFBhcmVudDt3aGlsZShsJiZsIT1rLmJvZHkpe2ku
bGVmdC09bC5zY3JvbGxMZWZ0O2lmKCFmLm9wZXJhfHxsLnRhZ05hbWUhPSJUUiIp
e2kudG9wLT1sLnNjcm9sbFRvcH1sPWwub2Zmc2V0UGFyZW50fX1yZXR1cm4gaX0s
Z2V0UG9zaXRpb246ZnVuY3Rpb24oaSxoKXtoPWh8fHdpbmRvdzt2YXIgZT10aGlz
LmcoaSxoKTtpZighZSl7cmV0dXJufXZhciBjPXRoaXMuZ2V0UG9zaXRpb25Db3Jl
KGUpO3ZhciBkO3ZhciBnPTEwLGY9MDt3aGlsZShoIT1oLnBhcmVudCYmZjxnKXtm
Kys7ZD17dG9wOjAsbGVmdDowfTtpZighdGhpcy5pc0luQ3Jvc3NEb21haW5JZnJh
bWUoaCxoLnBhcmVudCkmJmguZnJhbWVFbGVtZW50KXtkPXRoaXMuZ2V0UG9zaXRp
b25Db3JlKGguZnJhbWVFbGVtZW50KX1lbHNle2JyZWFrfWMubGVmdCs9ZC5sZWZ0
O2MudG9wKz1kLnRvcDtoPWgucGFyZW50fXJldHVybiBjfSxnZXRPdXRlcldpZHRo
OmZ1bmN0aW9uKGUsZCl7ZT10aGlzLmcoZSk7ZD1kfHxmYWxzZTt2YXIgYz1lLm9m
ZnNldFdpZHRoO2lmKGQpe3ZhciBnPXRoaXMuZ2V0U3R5bGUoZSwibWFyZ2luTGVm
dCIpLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCJweCIsIiIpLnJl
cGxhY2UoImF1dG8iLCIwIik7dmFyIGY9dGhpcy5nZXRTdHlsZShlLCJtYXJnaW5S
aWdodCIpLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCJweCIsIiIp
LnJlcGxhY2UoImF1dG8iLCIwIik7Yz1jK3BhcnNlSW50KGd8fDApK3BhcnNlSW50
KGZ8fDApfXJldHVybiBjfSxnZXRPdXRlckhlaWdodDpmdW5jdGlvbihlLGQpe2U9
dGhpcy5nKGUpO2Q9ZHx8ZmFsc2U7dmFyIGM9ZS5vZmZzZXRIZWlnaHQ7aWYoZCl7
dmFyIGY9dGhpcy5nZXRTdHlsZShlLCJtYXJnaW5Ub3AiKS50b1N0cmluZygpLnRv
TG93ZXJDYXNlKCkucmVwbGFjZSgicHgiLCIiKS5yZXBsYWNlKCJhdXRvIiwiMCIp
O3ZhciBnPXRoaXMuZ2V0U3R5bGUoZSwibWFyZ2luQm90dG9tIikudG9TdHJpbmco
KS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoInB4IiwiIikucmVwbGFjZSgiYXV0byIs
IjAiKTtjPWMrcGFyc2VJbnQoZnx8MCkrcGFyc2VJbnQoZ3x8MCl9cmV0dXJuIGN9
LGdldFRvcElmcmFtZTpmdW5jdGlvbihmKXt2YXIgYz10aGlzLmcoZik7dmFyIGQ9
dGhpcy5nZXRXaW5kb3coYyk7dmFyIGU9MDtpZih0aGlzLmlzSW5JZnJhbWUod2lu
ZG93KSYmIXRoaXMuaXNJbkNyb3NzRG9tYWluSWZyYW1lKHdpbmRvdykpe3doaWxl
KGQucGFyZW50IT13aW5kb3cudG9wJiZlPDEwKXtlKys7ZD1kLnBhcmVudH1pZihl
PDEwKXtjPWQuZnJhbWVFbGVtZW50fHxjfX1yZXR1cm4gY30sZ2V0T3BhY2l0eUlu
V2luOmZ1bmN0aW9uKGspe3ZhciBqPXRoaXMuZyhrKTt2YXIgaD10aGlzLmdldFdp
bmRvdyhqKTt2YXIgYz0xMDA7dmFyIGY9ajt2YXIgaTt0cnl7d2hpbGUoZiYmZi50
YWdOYW1lKXtpPTEwMDtpZih0aGlzLmJyb3dzZXIuaWUpe2lmKHRoaXMuYnJvd3Nl
ci5pZT41KXt0cnl7aT1mLmZpbHRlcnMuYWxwaGEub3BhY2l0eXx8MTAwfWNhdGNo
KGcpe319Yz1jPmk/aTpjfWVsc2V7dHJ5e2k9KGguZ2V0Q29tcHV0ZWRTdHlsZShm
LG51bGwpLm9wYWNpdHl8fDEpKjEwMH1jYXRjaChnKXt9Yz1jKihpLzEwMCl9Zj1m
LnBhcmVudE5vZGV9fWNhdGNoKGQpe31yZXR1cm4gY3x8MTAwfSxnZXRPcGFjaXR5
OmZ1bmN0aW9uKGkpe3ZhciBoPXRoaXMuZyhpKTt2YXIgZz10aGlzLmdldFdpbmRv
dyhoKTt2YXIgYz10aGlzLmdldE9wYWNpdHlJbldpbihoKTt2YXIgZD0xMDA7dmFy
IGU9MCxmPTEwO3doaWxlKHRoaXMuaXNJbklmcmFtZShnKSl7ZSsrO2lmKCF0aGlz
LmlzSW5Dcm9zc0RvbWFpbklmcmFtZShnLGcucGFyZW50KSl7ZD0xMDA7aWYoZy5m
cmFtZUVsZW1lbnQpe2Q9dGhpcy5nZXRPcGFjaXR5SW5XaW4oZy5mcmFtZUVsZW1l
bnQpfWM9YyooZC8xMDApfWVsc2V7YnJlYWt9Zz1nLnBhcmVudH1yZXR1cm4gY30s
ZGF0ZVRvU3RyaW5nOmZ1bmN0aW9uKGQsYyl7dmFyIGc9eyJNKyI6ZC5nZXRNb250
aCgpKzEsImQrIjpkLmdldERhdGUoKSwiaCsiOmQuZ2V0SG91cnMoKSUxMj09MD8x
MjpkLmdldEhvdXJzKCklMTIsIkgrIjpkLmdldEhvdXJzKCksIm0rIjpkLmdldE1p
bnV0ZXMoKSwicysiOmQuZ2V0U2Vjb25kcygpLCJxKyI6TWF0aC5mbG9vcigoZC5n
ZXRNb250aCgpKzMpLzMpLFM6ZC5nZXRNaWxsaXNlY29uZHMoKX07dmFyIGY9eyIw
IjoiXHU2NWU1IiwiMSI6Ilx1NGUwMCIsIjIiOiJcdTRlOGMiLCIzIjoiXHU0ZTA5
IiwiNCI6Ilx1NTZkYiIsIjUiOiJcdTRlOTQiLCI2IjoiXHU1MTZkIn07aWYoLyh5
KykvLnRlc3QoYykpe2M9Yy5yZXBsYWNlKFJlZ0V4cC4kMSwoZC5nZXRGdWxsWWVh
cigpKyIiKS5zdWJzdHIoNC1SZWdFeHAuJDEubGVuZ3RoKSl9aWYoLyhFKykvLnRl
c3QoYykpe2M9Yy5yZXBsYWNlKFJlZ0V4cC4kMSwoKFJlZ0V4cC4kMS5sZW5ndGg+
MSk/KFJlZ0V4cC4kMS5sZW5ndGg+Mj8iXHU2NjFmXHU2NzFmIjoiXHU1NDY4Iik6
IiIpK2ZbZC5nZXREYXkoKSsiIl0pfWZvcih2YXIgZSBpbiBnKXtpZihuZXcgUmVn
RXhwKCIoIitlKyIpIikudGVzdChjKSl7Yz1jLnJlcGxhY2UoUmVnRXhwLiQxLChS
ZWdFeHAuJDEubGVuZ3RoPT0xKT8oZ1tlXSk6KCgiMDAiK2dbZV0pLnN1YnN0cigo
IiIrZ1tlXSkubGVuZ3RoKSkpfX1yZXR1cm4gY30scGFyYW06ZnVuY3Rpb24oaCxp
KXt2YXIgYz1uZXcgQXJyYXkoKSxnLGYsZDtmb3IodmFyIGUgaW4gaCl7ZD10cnVl
O2lmKGkpe2c9aVtlXT9pW2VdOmU7ZD1pW2VdP3RydWU6ZmFsc2V9aWYoIWQpe2Nv
bnRpbnVlfXZhciBmPWhbZV07c3dpdGNoKHR5cGVvZiBmKXtjYXNlInN0cmluZyI6
Y2FzZSJudW1iZXIiOmMucHVzaChnKyI9IitmLnRvU3RyaW5nKCkpO2JyZWFrO2Nh
c2UiYm9vbGVhbiI6Yy5wdXNoKGcrIj0iKyhmPyIxIjoiMCIpKTticmVhaztjYXNl
Im9iamVjdCI6aWYoZiBpbnN0YW5jZW9mIERhdGUpe2MucHVzaChnKyI9Iit0aGlz
LmRhdGVUb1N0cmluZyhmLCJ5eXl5TU1kZGhobW1zc1MiKSl9YnJlYWs7ZGVmYXVs
dDpicmVha319cmV0dXJuIGMuam9pbigiJiIpfSxnZXRMZW5ndGg6ZnVuY3Rpb24o
ZSl7dmFyIGM9MDtpZih0eXBlb2YgZT09PSJvYmplY3QiKXtpZihlIGluc3RhbmNl
b2YgQXJyYXkpe2M9ZS5sZW5ndGh9ZWxzZXt2YXIgZDtmb3IoZCBpbiBlKXtpZihk
KXtjKyt9fX19cmV0dXJuIGN9LG1kNTpmdW5jdGlvbihzKXtmdW5jdGlvbiBOKGQs
Yyl7cmV0dXJuKGQ8PGMpfChkPj4+KDMyLWMpKX1mdW5jdGlvbiBNKEYsZCl7dmFy
IEgsYyx4LEcsazt4PShGJjIxNDc0ODM2NDgpO0c9KGQmMjE0NzQ4MzY0OCk7SD0o
RiYxMDczNzQxODI0KTtjPShkJjEwNzM3NDE4MjQpO2s9KEYmMTA3Mzc0MTgyMykr
KGQmMTA3Mzc0MTgyMyk7aWYoSCZjKXtyZXR1cm4oa14yMTQ3NDgzNjQ4XnheRyl9
aWYoSHxjKXtpZihrJjEwNzM3NDE4MjQpe3JldHVybihrXjMyMjEyMjU0NzJeeF5H
KX1lbHNle3JldHVybihrXjEwNzM3NDE4MjReeF5HKX19ZWxzZXtyZXR1cm4oa154
XkcpfX1mdW5jdGlvbiByKGMsayxkKXtyZXR1cm4oYyZrKXwoKH5jKSZkKX1mdW5j
dGlvbiBxKGMsayxkKXtyZXR1cm4oYyZkKXwoayYofmQpKX1mdW5jdGlvbiBwKGMs
ayxkKXtyZXR1cm4oY15rXmQpfWZ1bmN0aW9uIG4oYyxrLGQpe3JldHVybihrXihj
fCh+ZCkpKX1mdW5jdGlvbiB1KEcsRixhYyxhYixrLEgsSSl7Rz1NKEcsTShNKHIo
RixhYyxhYiksayksSSkpO3JldHVybiBNKE4oRyxIKSxGKX1mdW5jdGlvbiBnKEcs
RixhYyxhYixrLEgsSSl7Rz1NKEcsTShNKHEoRixhYyxhYiksayksSSkpO3JldHVy
biBNKE4oRyxIKSxGKX1mdW5jdGlvbiBKKEcsRixhYyxhYixrLEgsSSl7Rz1NKEcs
TShNKHAoRixhYyxhYiksayksSSkpO3JldHVybiBNKE4oRyxIKSxGKX1mdW5jdGlv
biB0KEcsRixhYyxhYixrLEgsSSl7Rz1NKEcsTShNKG4oRixhYyxhYiksayksSSkp
O3JldHVybiBNKE4oRyxIKSxGKX1mdW5jdGlvbiBlKEYpe3ZhciBJO3ZhciB4PUYu
bGVuZ3RoO3ZhciBrPXgrODt2YXIgZD0oay0oayU2NCkpLzY0O3ZhciBIPShkKzEp
KjE2O3ZhciBhYj1BcnJheShILTEpO3ZhciBjPTA7dmFyIEc9MDt3aGlsZShHPHgp
e0k9KEctKEclNCkpLzQ7Yz0oRyU0KSo4O2FiW0ldPShhYltJXXwoRi5jaGFyQ29k
ZUF0KEcpPDxjKSk7RysrfUk9KEctKEclNCkpLzQ7Yz0oRyU0KSo4O2FiW0ldPWFi
W0ldfCgxMjg8PGMpO2FiW0gtMl09eDw8MzthYltILTFdPXg+Pj4yOTtyZXR1cm4g
YWJ9ZnVuY3Rpb24gRChrKXt2YXIgZD0iIix4PSIiLEYsYztmb3IoYz0wO2M8PTM7
YysrKXtGPShrPj4+KGMqOCkpJjI1NTt4PSIwIitGLnRvU3RyaW5nKDE2KTtkPWQr
eC5zdWJzdHIoeC5sZW5ndGgtMiwyKX1yZXR1cm4gZH1mdW5jdGlvbiBMKGspe2s9
ay5yZXBsYWNlKC9cclxuL2csIlxuIik7dmFyIGQ9IiI7Zm9yKHZhciBGPTA7Rjxr
Lmxlbmd0aDtGKyspe3ZhciB4PWsuY2hhckNvZGVBdChGKTtpZih4PDEyOCl7ZCs9
U3RyaW5nLmZyb21DaGFyQ29kZSh4KX1lbHNle2lmKCh4PjEyNykmJih4PDIwNDgp
KXtkKz1TdHJpbmcuZnJvbUNoYXJDb2RlKCh4Pj42KXwxOTIpO2QrPVN0cmluZy5m
cm9tQ2hhckNvZGUoKHgmNjMpfDEyOCl9ZWxzZXtkKz1TdHJpbmcuZnJvbUNoYXJD
b2RlKCh4Pj4xMil8MjI0KTtkKz1TdHJpbmcuZnJvbUNoYXJDb2RlKCgoeD4+Nikm
NjMpfDEyOCk7ZCs9U3RyaW5nLmZyb21DaGFyQ29kZSgoeCY2Myl8MTI4KX19fXJl
dHVybiBkfXZhciBFPUFycmF5KCk7dmFyIFIsaSxLLHYsaCxhYSxaLFksWDt2YXIg
VT03LFM9MTIsUD0xNyxPPTIyO3ZhciBCPTUsQT05LHo9MTQseT0yMDt2YXIgbz00
LG09MTEsbD0xNixqPTIzO3ZhciBXPTYsVj0xMCxUPTE1LFE9MjE7cz1MKHMpO0U9
ZShzKTthYT0xNzMyNTg0MTkzO1o9NDAyMzIzMzQxNztZPTI1NjIzODMxMDI7WD0y
NzE3MzM4Nzg7Zm9yKFI9MDtSPEUubGVuZ3RoO1IrPTE2KXtpPWFhO0s9Wjt2PVk7
aD1YO2FhPXUoYWEsWixZLFgsRVtSKzBdLFUsMzYxNDA5MDM2MCk7WD11KFgsYWEs
WixZLEVbUisxXSxTLDM5MDU0MDI3MTApO1k9dShZLFgsYWEsWixFW1IrMl0sUCw2
MDYxMDU4MTkpO1o9dShaLFksWCxhYSxFW1IrM10sTywzMjUwNDQxOTY2KTthYT11
KGFhLFosWSxYLEVbUis0XSxVLDQxMTg1NDgzOTkpO1g9dShYLGFhLFosWSxFW1Ir
NV0sUywxMjAwMDgwNDI2KTtZPXUoWSxYLGFhLFosRVtSKzZdLFAsMjgyMTczNTk1
NSk7Wj11KFosWSxYLGFhLEVbUis3XSxPLDQyNDkyNjEzMTMpO2FhPXUoYWEsWixZ
LFgsRVtSKzhdLFUsMTc3MDAzNTQxNik7WD11KFgsYWEsWixZLEVbUis5XSxTLDIz
MzY1NTI4NzkpO1k9dShZLFgsYWEsWixFW1IrMTBdLFAsNDI5NDkyNTIzMyk7Wj11
KFosWSxYLGFhLEVbUisxMV0sTywyMzA0NTYzMTM0KTthYT11KGFhLFosWSxYLEVb
UisxMl0sVSwxODA0NjAzNjgyKTtYPXUoWCxhYSxaLFksRVtSKzEzXSxTLDQyNTQ2
MjYxOTUpO1k9dShZLFgsYWEsWixFW1IrMTRdLFAsMjc5Mjk2NTAwNik7Wj11KFos
WSxYLGFhLEVbUisxNV0sTywxMjM2NTM1MzI5KTthYT1nKGFhLFosWSxYLEVbUisx
XSxCLDQxMjkxNzA3ODYpO1g9ZyhYLGFhLFosWSxFW1IrNl0sQSwzMjI1NDY1NjY0
KTtZPWcoWSxYLGFhLFosRVtSKzExXSx6LDY0MzcxNzcxMyk7Wj1nKFosWSxYLGFh
LEVbUiswXSx5LDM5MjEwNjk5OTQpO2FhPWcoYWEsWixZLFgsRVtSKzVdLEIsMzU5
MzQwODYwNSk7WD1nKFgsYWEsWixZLEVbUisxMF0sQSwzODAxNjA4Myk7WT1nKFks
WCxhYSxaLEVbUisxNV0seiwzNjM0NDg4OTYxKTtaPWcoWixZLFgsYWEsRVtSKzRd
LHksMzg4OTQyOTQ0OCk7YWE9ZyhhYSxaLFksWCxFW1IrOV0sQiw1Njg0NDY0Mzgp
O1g9ZyhYLGFhLFosWSxFW1IrMTRdLEEsMzI3NTE2MzYwNik7WT1nKFksWCxhYSxa
LEVbUiszXSx6LDQxMDc2MDMzMzUpO1o9ZyhaLFksWCxhYSxFW1IrOF0seSwxMTYz
NTMxNTAxKTthYT1nKGFhLFosWSxYLEVbUisxM10sQiwyODUwMjg1ODI5KTtYPWco
WCxhYSxaLFksRVtSKzJdLEEsNDI0MzU2MzUxMik7WT1nKFksWCxhYSxaLEVbUis3
XSx6LDE3MzUzMjg0NzMpO1o9ZyhaLFksWCxhYSxFW1IrMTJdLHksMjM2ODM1OTU2
Mik7YWE9SihhYSxaLFksWCxFW1IrNV0sbyw0Mjk0NTg4NzM4KTtYPUooWCxhYSxa
LFksRVtSKzhdLG0sMjI3MjM5MjgzMyk7WT1KKFksWCxhYSxaLEVbUisxMV0sbCwx
ODM5MDMwNTYyKTtaPUooWixZLFgsYWEsRVtSKzE0XSxqLDQyNTk2NTc3NDApO2Fh
PUooYWEsWixZLFgsRVtSKzFdLG8sMjc2Mzk3NTIzNik7WD1KKFgsYWEsWixZLEVb
Uis0XSxtLDEyNzI4OTMzNTMpO1k9SihZLFgsYWEsWixFW1IrN10sbCw0MTM5NDY5
NjY0KTtaPUooWixZLFgsYWEsRVtSKzEwXSxqLDMyMDAyMzY2NTYpO2FhPUooYWEs
WixZLFgsRVtSKzEzXSxvLDY4MTI3OTE3NCk7WD1KKFgsYWEsWixZLEVbUiswXSxt
LDM5MzY0MzAwNzQpO1k9SihZLFgsYWEsWixFW1IrM10sbCwzNTcyNDQ1MzE3KTta
PUooWixZLFgsYWEsRVtSKzZdLGosNzYwMjkxODkpO2FhPUooYWEsWixZLFgsRVtS
KzldLG8sMzY1NDYwMjgwOSk7WD1KKFgsYWEsWixZLEVbUisxMl0sbSwzODczMTUx
NDYxKTtZPUooWSxYLGFhLFosRVtSKzE1XSxsLDUzMDc0MjUyMCk7Wj1KKFosWSxY
LGFhLEVbUisyXSxqLDMyOTk2Mjg2NDUpO2FhPXQoYWEsWixZLFgsRVtSKzBdLFcs
NDA5NjMzNjQ1Mik7WD10KFgsYWEsWixZLEVbUis3XSxWLDExMjY4OTE0MTUpO1k9
dChZLFgsYWEsWixFW1IrMTRdLFQsMjg3ODYxMjM5MSk7Wj10KFosWSxYLGFhLEVb
Uis1XSxRLDQyMzc1MzMyNDEpO2FhPXQoYWEsWixZLFgsRVtSKzEyXSxXLDE3MDA0
ODU1NzEpO1g9dChYLGFhLFosWSxFW1IrM10sViwyMzk5OTgwNjkwKTtZPXQoWSxY
LGFhLFosRVtSKzEwXSxULDQyOTM5MTU3NzMpO1o9dChaLFksWCxhYSxFW1IrMV0s
USwyMjQwMDQ0NDk3KTthYT10KGFhLFosWSxYLEVbUis4XSxXLDE4NzMzMTMzNTkp
O1g9dChYLGFhLFosWSxFW1IrMTVdLFYsNDI2NDM1NTU1Mik7WT10KFksWCxhYSxa
LEVbUis2XSxULDI3MzQ3Njg5MTYpO1o9dChaLFksWCxhYSxFW1IrMTNdLFEsMTMw
OTE1MTY0OSk7YWE9dChhYSxaLFksWCxFW1IrNF0sVyw0MTQ5NDQ0MjI2KTtYPXQo
WCxhYSxaLFksRVtSKzExXSxWLDMxNzQ3NTY5MTcpO1k9dChZLFgsYWEsWixFW1Ir
Ml0sVCw3MTg3ODcyNTkpO1o9dChaLFksWCxhYSxFW1IrOV0sUSwzOTUxNDgxNzQ1
KTthYT1NKGFhLGkpO1o9TShaLEspO1k9TShZLHYpO1g9TShYLGgpfXZhciB3PWZ1
bmN0aW9uKHgpe3ZhciBjPXg7Zm9yKHZhciBkPTAsaz04LXgubGVuZ3RoO2Q8aztk
Kyspe2M9IjAiK2N9cmV0dXJuIGN9O3ZhciBDPSgocGFyc2VJbnQoIjB4IitEKGFh
KSwxNikrcGFyc2VJbnQoIjB4IitEKFopLDE2KSklNDI5NDk2NzI5NikudG9TdHJp
bmcoMTYpO3ZhciBmPSgocGFyc2VJbnQoIjB4IitEKFkpLDE2KStwYXJzZUludCgi
MHgiK0QoWCksMTYpKSU0Mjk0OTY3Mjk2KS50b1N0cmluZygxNik7aWYoQy5sZW5n
dGg8OCl7Qz13KEMpfWlmKGYubGVuZ3RoPDgpe2Y9dyhmKX1yZXR1cm4gQytmfSxn
ZXRTY3JvbGxXaWR0aDpmdW5jdGlvbihkKXt0cnl7ZD1kfHx3aW5kb3c7aWYoZC5k
b2N1bWVudC5jb21wYXRNb2RlPT09IkJhY2tDb21wYXQiKXtyZXR1cm4gZC5kb2N1
bWVudC5ib2R5LnNjcm9sbFdpZHRofWVsc2V7cmV0dXJuIGQuZG9jdW1lbnQuZG9j
dW1lbnRFbGVtZW50LnNjcm9sbFdpZHRofX1jYXRjaChjKXtyZXR1cm4gMH19LGdl
dFNjcm9sbEhlaWdodDpmdW5jdGlvbihkKXt0cnl7ZD1kfHx3aW5kb3c7aWYoZC5k
b2N1bWVudC5jb21wYXRNb2RlPT09IkJhY2tDb21wYXQiKXtyZXR1cm4gZC5kb2N1
bWVudC5ib2R5LnNjcm9sbEhlaWdodH1lbHNle3JldHVybiBkLmRvY3VtZW50LmRv
Y3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHR9fWNhdGNoKGMpe3JldHVybiAwfX0s
Z2V0Q2xpZW50V2lkdGg6ZnVuY3Rpb24oZCl7dHJ5e2Q9ZHx8d2luZG93O2lmKGQu
ZG9jdW1lbnQuY29tcGF0TW9kZT09PSJCYWNrQ29tcGF0Iil7cmV0dXJuIGQuZG9j
dW1lbnQuYm9keS5jbGllbnRXaWR0aH1lbHNle3JldHVybiBkLmRvY3VtZW50LmRv
Y3VtZW50RWxlbWVudC5jbGllbnRXaWR0aH19Y2F0Y2goYyl7cmV0dXJuIDB9fSxn
ZXRDbGllbnRIZWlnaHQ6ZnVuY3Rpb24oZCl7dHJ5e2Q9ZHx8d2luZG93O2lmKGQu
ZG9jdW1lbnQuY29tcGF0TW9kZT09PSJCYWNrQ29tcGF0Iil7cmV0dXJuIGQuZG9j
dW1lbnQuYm9keS5jbGllbnRIZWlnaHR9ZWxzZXtyZXR1cm4gZC5kb2N1bWVudC5k
b2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0fX1jYXRjaChjKXtyZXR1cm4gMH19
LGdldFNjcm9sbFRvcDpmdW5jdGlvbihjKXtjPWN8fHdpbmRvdzt2YXIgZT1jLmRv
Y3VtZW50O3JldHVybiB3aW5kb3cucGFnZVlPZmZzZXR8fGUuZG9jdW1lbnRFbGVt
ZW50LnNjcm9sbFRvcHx8ZS5ib2R5LnNjcm9sbFRvcH0sZ2V0U2Nyb2xsTGVmdDpm
dW5jdGlvbihjKXtjPWN8fHdpbmRvdzt2YXIgZT1jLmRvY3VtZW50O3JldHVybiB3
aW5kb3cucGFnZVhPZmZzZXR8fGUuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnR8
fGUuYm9keS5zY3JvbGxMZWZ0fSxlc2NhcGVUb0VuY29kZTpmdW5jdGlvbihkKXt2
YXIgYz1kfHwiIjtpZihjKXtjPWMucmVwbGFjZSgvJXVbXGR8XHddezR9L2csZnVu
Y3Rpb24oZSl7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh1bmVzY2FwZShlKSl9
KX1yZXR1cm4gY30sdGVtcGxhdGU6ZnVuY3Rpb24oZSxkKXt2YXIgYz0veyguKj8p
fS9nO3JldHVybiBlLnJlcGxhY2UoYyxmdW5jdGlvbihoLGcsZixpKXtyZXR1cm4g
ZFtnXXx8IiJ9KX0sZXh0ZW5kOmZ1bmN0aW9uKGUsYyl7Zm9yKHZhciBkIGluIGMp
e2lmKGMuaGFzT3duUHJvcGVydHkoZCkpe2VbZF09Y1tkXX19cmV0dXJuIGV9LGxv
ZzpmdW5jdGlvbihmLGQpe2Q9dHlwZW9mIGQ9PT0idW5kZWZpbmVkIj90cnVlOmZh
bHNlO2lmKCF0aGlzLmxvZ01zZyl7dGhpcy5sb2dNc2c9ZG9jdW1lbnQuZ2V0RWxl
bWVudEJ5SWQoImJhaWR1Q3Byb0xvZ01zZyIpO2lmKCF0aGlzLmxvZ01zZyl7cmV0
dXJufX12YXIgYz1uZXcgQXJyYXkoKTtpZih0eXBlb2YoZik9PT0ib2JqZWN0Iil7
Zm9yKHZhciBlIGluIGYpe2lmKGUhPT0iYW5hbHlzaXNVcmwiKXtjLnB1c2goZSsi
OiIrZltlXSl9fX1lbHNle2MucHVzaCgiIitmKX10aGlzLmxvZ01zZy5pbm5lckhU
TUw9ZD90aGlzLmxvZ01zZy5pbm5lckhUTUw6IiI7dGhpcy5sb2dNc2cuaW5uZXJI
VE1MKz1jLmpvaW4oIjxici8+IikrIjxici8+In0sZ2V0Q29va2llUmF3OmZ1bmN0
aW9uKGQsaCl7dmFyIGM7dmFyIGg9aHx8d2luZG93O3ZhciBnPWguZG9jdW1lbnQ7
dmFyIGU9bmV3IFJlZ0V4cCgiKF58ICkiK2QrIj0oW147XSopKDt8XHgyNCkiKTt2
YXIgZj1lLmV4ZWMoZy5jb29raWUpO2lmKGYpe2M9ZlsyXX1yZXR1cm4gY30sc2V0
Q29va2llUmF3OmZ1bmN0aW9uKGUsZixkKXtkPWR8fHt9O3ZhciBjPWQuZXhwaXJl
cztpZigibnVtYmVyIj09dHlwZW9mIGQuZXhwaXJlcyl7Yz1uZXcgRGF0ZSgpO2Mu
c2V0VGltZShjLmdldFRpbWUoKStkLmV4cGlyZXMpfWRvY3VtZW50LmNvb2tpZT1l
KyI9IitmKyhkLnBhdGg/IjsgcGF0aD0iK2QucGF0aDoiIikrKGM/IjsgZXhwaXJl
cz0iK2MudG9HTVRTdHJpbmcoKToiIikrKGQuZG9tYWluPyI7IGRvbWFpbj0iK2Qu
ZG9tYWluOiIiKSsoZC5zZWN1cmU/Ijsgc2VjdXJlIjoiIil9LGpzb25Ub09iajpm
dW5jdGlvbihjKXtyZXR1cm4obmV3IEZ1bmN0aW9uKCJyZXR1cm4gIitjKSkoKX0s
Z2V0VXJsUXVlcnlWYWx1ZTpmdW5jdGlvbihkLGUpe2lmKGQmJmUpe3ZhciBmPW5l
dyBSZWdFeHAoIihefCZ8XFw/fCMpIitlKyI9KFteJl0qKSgmfFx4MjQpIiwiIik7
dmFyIGM9ZC5tYXRjaChmKTtpZihjKXtyZXR1cm4gY1syXX19cmV0dXJuIG51bGx9
LHJlYWR5OmZ1bmN0aW9uKGgsZCxnKXtnPWd8fHRoaXMud2lufHx3aW5kb3c7dmFy
IGY9Zy5kb2N1bWVudDtkPWR8fDA7dGhpcy5kb21SZWFkeU1vbml0b3JSdW5UaW1l
cz0wO3RoaXMucmVhZHlGdW5jQXJyYXk9dGhpcy5yZWFkeUZ1bmNBcnJheXx8W107
dGhpcy5yZWFkeUZ1bmNBcnJheS5wdXNoKHtmdW5jOmgsZGVsYXk6ZCxkb25lOmZh
bHNlfSk7dmFyIGM9dGhpcy5wcm94eShmdW5jdGlvbigpe3ZhciBuPWZhbHNlO3Ro
aXMuZG9tUmVhZHlNb25pdG9yUnVuVGltZXMrKzt2YXIgcD1mYWxzZTt0cnl7aWYo
Zy5mcmFtZUVsZW1lbnQpe3A9dHJ1ZX19Y2F0Y2gobyl7cD10cnVlfWlmKHRoaXMu
YnJvd3Nlci5pZSYmdGhpcy5icm93c2VyLmllPDkmJiFwKXt0cnl7Zi5kb2N1bWVu
dEVsZW1lbnQuZG9TY3JvbGwoImxlZnQiKTtuPXRydWV9Y2F0Y2gobyl7fX1lbHNl
e2lmKGYucmVhZHlTdGF0ZT09PSJjb21wbGV0ZSJ8fHRoaXMuZG9tQ29udGVudExv
YWRlZCl7bj10cnVlfWVsc2V7aWYodGhpcy5kb21SZWFkeU1vbml0b3JSdW5UaW1l
cz4zMDAwMDApe2lmKHRoaXMuZG9tUmVhZHlNb25pdG9ySWQpe2cuY2xlYXJJbnRl
cnZhbCh0aGlzLmRvbVJlYWR5TW9uaXRvcklkKTt0aGlzLmRvbVJlYWR5TW9uaXRv
cklkPW51bGx9cmV0dXJufX19aWYobil7dHJ5e2lmKHRoaXMucmVhZHlGdW5jQXJy
YXkmJnRoaXMucmVhZHlGdW5jQXJyYXkubGVuZ3RoKXtmb3IodmFyIGs9MCxtPXRo
aXMucmVhZHlGdW5jQXJyYXkubGVuZ3RoO2s8bTtrKyspe3ZhciBsPXRoaXMucmVh
ZHlGdW5jQXJyYXlba107aWYoIWx8fCFsLmZ1bmN8fGwuZG9uZSl7Y29udGludWV9
aWYoIWwuZGVsYXkpe2wuZG9uZT10cnVlO2wuZnVuYygpfWVsc2V7bC5kb25lPXRy
dWU7Zy5zZXRUaW1lb3V0KGwuZnVuYyxsLmRlbGF5KX19fX1jYXRjaChqKXt0aHJv
dyBqfWZpbmFsbHl7aWYodGhpcy5kb21SZWFkeU1vbml0b3JJZCl7Zy5jbGVhcklu
dGVydmFsKHRoaXMuZG9tUmVhZHlNb25pdG9ySWQpO3RoaXMuZG9tUmVhZHlNb25p
dG9ySWQ9bnVsbH19fX0sdGhpcyk7dmFyIGU9dGhpcy5wcm94eShmdW5jdGlvbigp
e3RoaXMuZG9tQ29udGVudExvYWRlZD10cnVlO2MoKX0sdGhpcyk7aWYoIXRoaXMu
ZG9tUmVhZHlNb25pdG9ySWQpe3RoaXMuZG9tUmVhZHlNb25pdG9ySWQ9Zy5zZXRJ
bnRlcnZhbChjLDUwKTtpZihmLmFkZEV2ZW50TGlzdGVuZXIpe2YuYWRkRXZlbnRM
aXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsZSxmYWxzZSk7Zy5hZGRFdmVudExp
c3RlbmVyKCJsb2FkIixlLGZhbHNlKX1lbHNle2lmKGYuYXR0YWNoRXZlbnQpe2cu
YXR0YWNoRXZlbnQoIm9ubG9hZCIsZSxmYWxzZSl9fX19LGNhbkZpeGVkOmZ1bmN0
aW9uKCl7dmFyIGM9dHJ1ZTtpZih0aGlzLmJyb3dzZXIuaWUmJih0aGlzLmJyb3dz
ZXIuaWU8N3x8ZG9jdW1lbnQuY29tcGF0TW9kZT09PSJCYWNrQ29tcGF0Iikpe2M9
ZmFsc2V9cmV0dXJuIGN9LGdldFBhcmE6ZnVuY3Rpb24oayl7dmFyIGo9e307aWYo
ayYmdHlwZW9mIGs9PSJzdHJpbmciJiZrLmluZGV4T2YoIj8iKT4tMSl7dmFyIGY9
ay5zcGxpdCgiPyIpWzFdLnNwbGl0KCImIik7Zm9yKHZhciBnPTAsYz1mLmxlbmd0
aDtnPGM7ZysrKXt2YXIgZD1mW2ddLnNwbGl0KCI9Iik7dmFyIGU9ZFswXTt2YXIg
aD1kWzFdO2pbZV09aH19cmV0dXJuIGp9LG5vb3A6ZnVuY3Rpb24oKXt9fTtiLnJl
Z2lzdGVyTmFtZXNwYWNlKGEpfSkod2luZG93W19fX2Jhc2VOYW1lc3BhY2VOYW1l
XSk7KGZ1bmN0aW9uKGIpe3ZhciBjPXtmdWxsTmFtZToiJGJhc2VOYW1lLkJ1c2lu
ZXNzTG9naWMiLHZlcnNpb246IjEuMC4wIixyZWdpc3RlcjpmdW5jdGlvbigpe3Ro
aXMuRz1iLnVzaW5nKCIkYmFzZU5hbWUiLHRoaXMud2luKTt0aGlzLlU9Yi51c2lu
ZygiJGJhc2VOYW1lLlV0aWxpdHkiLHRoaXMud2luKX0scmFuZG9tQXJyYXk6W10s
Y2xpZW50VHJlZTp7fSxkaXNwbGF5Q291bnRlcjoxLGRpc3BsYXlUeXBlQ291bnRl
cjp7fSxhZHNBcnJheTpbXSxhZHNXcmFwU3RvcmU6e30sd2luRm9jdXNlZDp0cnVl
LGNwcm9TZXJ2aWNlVXJsOiJodHRwOi8vY3Byby5iYWlkdS5jb20vY3Byby91aS91
aWpzLnBocCIsaWZyYW1lSWRQcmVmaXg6ImNwcm9JZnJhbWUiLGlzQXN5bjpmYWxz
ZSxjdXJyZW50V2luZG93T25VbmxvYWRIYW5kbGVyOm51bGwsZ2V0U2xvdERhdGFG
cm9tVW5pb246ZnVuY3Rpb24oZixqLGgpe2lmKCFmfHwhanx8IXdpbmRvd1tqXSl7
cmV0dXJuIG51bGx9aWYoZiBpbnN0YW5jZW9mIEFycmF5KXtmPWYuam9pbigiLCIp
fXZhciBpPSJodHRwOi8vcG9zLmJhaWR1LmNvbS9lY29tP2RpPXtzbG90SWR9JnRt
PUJBSURVX0NQUk9fU0VUSlNPTkFEU0xPVCZmbj17Y2FsbGJhY2tOYW1lfSZiYWlk
dV9pZD17YmFpZHVJZH0iO3ZhciBkPXRoaXMuVS5nZXRDb29raWVSYXcoIkJBSURV
SUQiKXx8IiI7dmFyIGc9dGhpcy5VLnRlbXBsYXRlKGkse3Nsb3RJZDpmLGNhbGxi
YWNrTmFtZTpqLGJhaWR1SWQ6ZH0pO2lmKC91XGQrLy50ZXN0KGYpKXtpZihoKXt2
YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtlLnNldEF0dHJp
YnV0ZSgidHlwZSIsInRleHQvamF2YXNjcmlwdCIpO2Uuc2V0QXR0cmlidXRlKCJz
cmMiLGcpO2RvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF0u
YXBwZW5kQ2hpbGQoZSl9ZWxzZXtkb2N1bWVudC53cml0ZSgnPHNjcmlwdCB0eXBl
PSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9IicrZysnIj48
XC9zY3JpcHQ+Jyl9fWVsc2V7d2luZG93W2pdKG51bGwse19odG1sOmZ9KX19LGdl
dFNsb3REYXRhRnJvbUNCOmZ1bmN0aW9uKGYsZSl7dmFyIGQ9bnVsbDtmPWZ8fHdp
bmRvdy50ZW1wQ2xiQ3Byb0FkU2xvdElkO2U9ZXx8d2luZG93LnRlbXBDbGJDcHJv
QWRPYmo7aWYoZiYmZSl7ZD17fTtkW2ZdPXtfaHRtbDplLl9odG1sfX1yZXR1cm4g
ZH0sY2xlYXJTbG90RGF0YUZyb21DQjpmdW5jdGlvbigpe3dpbmRvdy50ZW1wQ2xi
Q3Byb0FkU2xvdElkPW51bGw7d2luZG93LnRlbXBDbGJDcHJvQWRPYmo9bnVsbH0s
cGFyc2VTbG90RGF0YUZyb21VbmlvbjpmdW5jdGlvbihlKXt2YXIgbT17fTt2YXIg
Zj0iIjtmb3IodmFyIGQgaW4gZSl7aWYoZCYmZS5oYXNPd25Qcm9wZXJ0eShkKSl7
Zj1kO2JyZWFrfX1tLnNsb3RJZD1mO3ZhciBnPWVbZl0uX2h0bWwuc3BsaXQoInwi
KTt2YXIgayxsO2Zvcih2YXIgaD0wLGo9Zy5sZW5ndGg7aDxqO2grKyl7az1nW2hd
O2lmKGspe2w9ay5zcGxpdCgiPSIpO21bbFswXV09bFsxXX19cmV0dXJuIG19LGdl
dFNsb3REYXRhRnJvbVVzZXJPcGVuQXBpOmZ1bmN0aW9uKCl7dmFyIGQ9bnVsbDtp
Zih3aW5kb3cuY3Byb0FwaSYmdHlwZW9mIHdpbmRvdy5jcHJvQXBpPT09Im9iamVj
dCImJih0aGlzLlUuZ2V0TGVuZ3RoKHdpbmRvdy5jcHJvQXBpKT4wKSl7dmFyIGY9
d2luZG93LmNwcm9BcGk7ZD17fTt3aW5kb3cuY3Byb0FwaT1udWxsO2Zvcih2YXIg
ZSBpbiBmKXtpZihlJiZmW2VdKXtkWyJjcHJvXyIrZV09ZltlXX19fXJldHVybiBk
fSxpc1ByZXZpZXc6ZnVuY3Rpb24gYShxLGwsayxkLGYpe3ZhciByPWZhbHNlO3Zh
ciBqO2lmKGYpe2o9Zi5zdWJzdHJpbmcoZi5pbmRleE9mKCI/IikpfWVsc2V7aWYo
dGhpcy5VLmlzSW5Dcm9zc0RvbWFpbklmcmFtZSgpKXtqPXdpbmRvdy5sb2NhdGlv
bi5zZWFyY2guc2xpY2UoMSl9ZWxzZXtqPXRvcC5sb2NhdGlvbi5zZWFyY2guc2xp
Y2UoMSl9fXZhciBnPWRvY3VtZW50LnJlZmVycmVyO3ZhciBpPWs9PT0iaW5sYXki
fHxrPT09InVpIj8iYmRfY3Byb19wcmV2IjoiYmRfY3Byb19mcHJldiI7dmFyIG49
IiI7dmFyIG07dmFyIHA7dHJ5e3A9ZG9jdW1lbnQuY29va2llfWNhdGNoKG8pe31p
ZihqLmluZGV4T2YoaSkhPT0tMSl7bj10aGlzLlUuZ2V0VXJsUXVlcnlWYWx1ZShq
LGkpfWlmKCFuJiZwJiZwLmluZGV4T2YoaSkhPT0tMSl7bj10aGlzLlUuZ2V0Q29v
a2llUmF3KGkpfWlmKCFuJiZnLmluZGV4T2YoaSkhPT0tMSl7bj10aGlzLlUuZ2V0
VXJsUXVlcnlWYWx1ZShnLGkpfWlmKG4pe249ZGVjb2RlVVJJQ29tcG9uZW50KG4p
LnJlcGxhY2UoL1xceDFlL2csIiYiKS5yZXBsYWNlKC9cXHgxZC9nLCI9IikucmVw
bGFjZSgvXFx4MWMvLCI/IikucmVwbGFjZSgvXFx4NWMvLCJcXCIpO209dGhpcy5V
Lmpzb25Ub09iaihuKTtpZihkPT11bmRlZmluZWQpe2Q9MX1pZihtLnR5cGUhPTEm
JihkJjIpPT0yKXtyPShwYXJzZUludChtLmltZ1dpZHRoKT09PXBhcnNlSW50KHEp
JiZwYXJzZUludChtLmltZ0hlaWdodCk9PT1wYXJzZUludChsKSl9ZWxzZXtpZiht
LnR5cGU9PTEmJigoZCYxKT09MXx8KGQmNjQpPT02NHx8KGQmMzIpPT0zMikpe3I9
dHJ1ZX19fXJldHVybiByfSxnZXRBZHNEb21JZDpmdW5jdGlvbihkKXtkPWR8fDE7
cmV0dXJuIHRoaXMuaWZyYW1lSWRQcmVmaXgrZH0sY2hlY2tBZHNDb3VudGVyOmZ1
bmN0aW9uKGYsaCxlKXt2YXIgZD1mYWxzZTt2YXIgZztpZihlJiYoZS5pbmRleE9m
KCJ0bGluayIpPi0xfHxlLmluZGV4T2YoImJhaWR1VGxpbmtJbmxheSIpPi0xKSl7
Zj0ibGlua3VuaXQifXN3aXRjaChmLnRvTG93ZXJDYXNlKCkpe2Nhc2UiaW5sYXki
Omc9MzticmVhaztjYXNlImxpbmt1bml0IjpnPTM7YnJlYWs7Y2FzZSJmbG9hdCI6
Zz0xO2JyZWFrO2Nhc2UidWkiOmc9MztpZihlPT0iYmFpZHVERUZJTkUiKXtnPTR9
aWYoZT09ImJhaWR1VHBjbGlja2VkREVGSU5FIil7Zz01fWJyZWFrO2RlZmF1bHQ6
Zz0zO2JyZWFrfWguX19iZGNwcm9fX2Rpc3BsYXlUeXBlQ291bnRlcj1oLl9fYmRj
cHJvX19kaXNwbGF5VHlwZUNvdW50ZXJ8fHt9O2guX19iZGNwcm9fX2Rpc3BsYXlU
eXBlQ291bnRlcltmXT1oLl9fYmRjcHJvX19kaXNwbGF5VHlwZUNvdW50ZXJbZl18
fDA7aWYoaC5fX2JkY3Byb19fZGlzcGxheVR5cGVDb3VudGVyW2ZdPj1nKXtkPXRy
dWV9cmV0dXJuIGR9LGFkZEFkc0NvdW50ZXI6ZnVuY3Rpb24oZSxmLGQpe2lmKGQm
JihkLmluZGV4T2YoInRsaW5rIik+LTF8fGQuaW5kZXhPZigiYmFpZHVUbGlua0lu
bGF5Iik+LTEpKXtlPSJsaW5rdW5pdCJ9Zi5fX2JkY3Byb19fZGlzcGxheVR5cGVD
b3VudGVyPWYuX19iZGNwcm9fX2Rpc3BsYXlUeXBlQ291bnRlcnx8e307Zi5fX2Jk
Y3Byb19fZGlzcGxheVR5cGVDb3VudGVyW2VdPWYuX19iZGNwcm9fX2Rpc3BsYXlU
eXBlQ291bnRlcltlXXx8MDtmLl9fYmRjcHJvX19kaXNwbGF5VHlwZUNvdW50ZXJb
ZV0rKztyZXR1cm4gdHJ1ZX0sZ2V0QWRzV3JhcEFycmF5OmZ1bmN0aW9uKGUpe3Zh
ciBkPVtdO2lmKGUmJnR5cGVvZiBlPT0ic3RyaW5nIil7dmFyIGo9ZS5zcGxpdCgi
LCIpO3ZhciBnPTA7Zm9yKHZhciBmPTAsaD1qLmxlbmd0aDtmPGg7ZisrKXtpZigv
dVxkKy8udGVzdChqW2ZdKSYmIXRoaXMuYWRzV3JhcFN0b3JlW2pbZl1dKXtkW2dd
PWpbZl07ZysrO3RoaXMuYWRzV3JhcFN0b3JlW2pbZl1dPXRydWV9fX1yZXR1cm4g
ZH0sZ2V0TGlua1VuaXRNYXhDb3VudDpmdW5jdGlvbihpKXt2YXIgaD1wYXJzZUlu
dChpLmdldCgidGl0RlMiKSk7dmFyIGw9cGFyc2VJbnQoaS5nZXQoImNvbkJXIikp
O3ZhciBkPXBhcnNlSW50KGkuZ2V0KCJyc2kwIikpLTIqbDt2YXIgbT1wYXJzZUlu
dChpLmdldCgicnNpMSIpKS0yKmw7dmFyIGY9Nzt2YXIgZT1mKmg7dmFyIGc9aCs2
O3ZhciBrPTc7dmFyIG49ZSsyKms7dmFyIGo9ZztyZXR1cm57VmVydGljYWxDb3Vu
dDpNYXRoLmZsb29yKGQvbiksSG9yaXpvbnRhbENvdW50Ok1hdGguZmxvb3IobS9q
KX19LGluaXRQYXJhbTpmdW5jdGlvbihkKXtpZighdGhpcy5VLmlzSW5JZnJhbWUo
KSl7cmV0dXJufXZhciBkPWR8fHdpbmRvdzt0aGlzLmN1cnJlbnRXaW5kb3dPblVu
bG9hZEhhbmRsZXI9dGhpcy5VLnByb3h5KHRoaXMuY3VycmVudFdpbmRvd09uVW5s
b2FkLHRoaXMsW2RdKTt0aGlzLlUuYmluZChkLCJiZWZvcmV1bmxvYWQiLHRoaXMu
Y3VycmVudFdpbmRvd09uVW5sb2FkSGFuZGxlcil9LGN1cnJlbnRXaW5kb3dPblVu
bG9hZDpmdW5jdGlvbihkKXt0aGlzLmNsaWVudFRyZWU9e307dGhpcy5kaXNwbGF5
Q291bnRlcj0xO3ZhciBkPWR8fHdpbmRvdzt0aGlzLlUudW5CaW5kKGQsImJlZm9y
ZXVubG9hZCIsdGhpcy5jdXJyZW50V2luZG93T25VbmxvYWRIYW5kbGVyKX0sY2hl
Y2tGbG9hdEx1OmZ1bmN0aW9uKGgpe3ZhciBkPXsiY2hpbmEuY29tIjp0cnVlLCJj
aGluYS5jb20uY24iOnRydWUsImE2Ny5jb20iOnRydWV9O2g9aHx8d2luZG93O3Zh
ciBnPSIiO3ZhciBlPWguZG9jdW1lbnQuZG9tYWluLnNwbGl0KCIuIik7dmFyIGY9
ZS5sZW5ndGg7aWYoZiYmZj4yKXtpZihlW2YtMV09PT0iY24iJiZlW2YtMl09PT0i
Y29tIil7Zz1lW2YtM10rIi4iK2VbZi0yXSsiLiIrZVtmLTFdfWVsc2V7Zz1lW2Yt
Ml0rIi4iK2VbZi0xXX19aWYoZyYmZFtnXSl7cmV0dXJuIGZhbHNlfXJldHVybiB0
cnVlfSxub29wOmZ1bmN0aW9uKCl7fX07Yi5yZWdpc3Rlck5hbWVzcGFjZShjKX0p
KHdpbmRvd1tfX19iYXNlTmFtZXNwYWNlTmFtZV0pOyhmdW5jdGlvbihiKXt2YXIg
YT17ZnVsbE5hbWU6IiRiYXNlTmFtZS5CdXNpbmVzc0xvZ2ljLlBhcmFtIix2ZXJz
aW9uOiIxLjAuMCIscmVnaXN0ZXI6ZnVuY3Rpb24oKXt0aGlzLkc9Yi51c2luZygi
JGJhc2VOYW1lIix0aGlzLndpbik7dGhpcy5VPWIudXNpbmcoIiRiYXNlTmFtZS5V
dGlsaXR5Iix0aGlzLndpbik7dGhpcy5CTD1iLnVzaW5nKCIkYmFzZU5hbWUuQnVz
aW5lc3NMb2dpYyIsdGhpcy53aW4pfSxpbml0aWFsaXplOmZ1bmN0aW9uKGMpe3Ro
aXMuY3VycmVudFdpbmRvdz1jLmN1cnJlbnRXaW5kb3c7dGhpcy5kb2M9dGhpcy53
aW4uZG9jdW1lbnQ7dGhpcy5uYXY9dGhpcy53aW4ubmF2aWdhdG9yO3RoaXMuc2Ny
PXRoaXMud2luLnNjcmVlbjt0aGlzLmRpc3BsYXlUeXBlPWMuZGlzcGxheVR5cGV8
fCJpbmxheSI7dGhpcy5zdGFydFRpbWU9KG5ldyBEYXRlKCkpO3RoaXMuQkwucG5U
eXBlQXJyYXk9dGhpcy5CTC5wblR5cGVBcnJheXx8W107dGhpcy5CTC5wblR5cGVB
cnJheVt0aGlzLmRpc3BsYXlUeXBlXT10aGlzLkJMLnBuVHlwZUFycmF5W3RoaXMu
ZGlzcGxheVR5cGVdfHxbXTt0aGlzLnRpbWVTdGFtcD1jLnRpbWVTdGFtcHx8KG5l
dyBEYXRlKCkpLmdldFRpbWUoKX0sZ2V0U2xvdDJVSU1hcHBpbmc6ZnVuY3Rpb24o
ZSl7dmFyIGQ9e307dmFyIGM7Zm9yKGMgaW4gZSl7aWYoYyYmZVtjXSYmZVtjXS5z
bG90UGFyYW1OYW1lKXtkW2VbY10uc2xvdFBhcmFtTmFtZV09Y319cmV0dXJuIGR9
LGdldEN1c3QyVUlNYXBwaW5nOmZ1bmN0aW9uKGUpe3ZhciBkPXt9O3ZhciBjO2Zv
cihjIGluIGUpe2lmKGMmJmVbY10mJmVbY10uY3VzdFBhcmFtTmFtZSl7ZFtlW2Nd
LmN1c3RQYXJhbU5hbWVdPWN9fXJldHVybiBkfSxtZXJnZVNsb3QyVUk6ZnVuY3Rp
b24oZixlLGQpe2lmKCFmfHwhZXx8IWQpe3JldHVybiBudWxsfXZhciBjLGc7Zm9y
KGcgaW4gZSl7aWYoZyYmZVtnXSYmZS5oYXNPd25Qcm9wZXJ0eShnKSl7Yz1kW2dd
O2Yuc2V0KGMsZVtnXSl9fXJldHVybiBmfSxzZXJpYWxpemU6ZnVuY3Rpb24oZyl7
dmFyIGU9W107dmFyIGQsYztmb3IoZCBpbiBnKXtpZihkJiZnW2RdJiYodHlwZW9m
IGdbZF09PT0ib2JqZWN0IikmJmdbZF0uaXNVSVBhcmFtJiZnW2RdLmlzVUlQYXJh
bVtnLmRpc3BsYXlUeXBlXSl7aWYoZD09PSJwbiImJiFnLmdldChkKSl7Y29udGlu
dWV9Yz1nLmdldChkKTtpZihjPT1udWxsKXtjb250aW51ZX1pZihnLmRpc3BsYXlU
eXBlPT0idWkiJiZjPT0iYmFpZHVDQURTIil7Y29udGludWV9aWYoZ1tkXS5lbmNv
ZGV8fGcuZGlzcGxheVR5cGU9PSJ1aSIpe2M9ZW5jb2RlVVJJQ29tcG9uZW50KGMp
fWlmKGdbZF0ubGltaXQpe2M9Yy5zdWJzdHIoMCxnW2RdLmxpbWl0KX1lLnB1c2go
ZCsiPSIrYyl9fWlmKGcuZ2V0KCJ0biIpPT09ImJhaWR1VGxpbmtJbmxheSImJmcu
ZGlzcGxheVR5cGU9PT0iaW5sYXkiKXt2YXIgZj10aGlzLkJMLmdldExpbmtVbml0
TWF4Q291bnQoZyk7aWYoZy5nZXQoImFkbiIpPmYuVmVydGljYWxDb3VudCpmLkhv
cml6b250YWxDb3VudCl7ZS5wdXNoKCJobj0iK2YuSG9yaXpvbnRhbENvdW50KTtl
LnB1c2goInduPSIrZi5WZXJ0aWNhbENvdW50KX1lbHNle2lmKHBhcnNlSW50KGcu
Z2V0KCJhZG4iKSk8PWYuVmVydGljYWxDb3VudCl7ZS5wdXNoKCJobj0iKzEpO2Uu
cHVzaCgid249IitwYXJzZUludChnLmdldCgiYWRuIikpKX1lbHNle3ZhciBoPU1h
dGguY2VpbChwYXJzZUludChnLmdldCgiYWRuIikpL2YuVmVydGljYWxDb3VudCk7
ZS5wdXNoKCJobj0iK2gpO2UucHVzaCgid249IitmLlZlcnRpY2FsQ291bnQpfX19
cmV0dXJuIGUuam9pbigiJiIpfSxzbmFwOmZ1bmN0aW9uKGYpe3ZhciBlPXt9O3Zh
ciBkLGM7Zm9yKGQgaW4gZil7aWYoZCYmZltkXSYmKHR5cGVvZiBmW2RdPT09Im9i
amVjdCIpJiZmW2RdLmRlZmF1bHRWYWx1ZSl7Yz1mLmdldChkKTtpZihjPT1udWxs
KXtjb250aW51ZX1pZihmW2RdLmVuY29kZXx8Zi5kaXNwbGF5VHlwZT09InVpIil7
Yz1lbmNvZGVVUklDb21wb25lbnQoYyl9ZVtkXT1jfX1yZXR1cm4gZX0sZ2V0OmZ1
bmN0aW9uKGUpe3ZhciBjO2lmKCF0aGlzW2VdKXtyZXR1cm4gY31pZih0aGlzW2Vd
LmdldCYmdGhpc1tlXS5nZXQhPT0iZGVmYXVsdCIpe3ZhciBkPUFycmF5LnByb3Rv
dHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTtkLnNoaWZ0KCk7aWYoIXRoaXNb
ZV0uX2luaXQpe3RoaXNbZV0uX3ZhbHVlPXRoaXNbZV0uZGVmYXVsdFZhbHVlW3Ro
aXMuZGlzcGxheVR5cGVdfWM9dGhpcy5VLnByb3h5KHRoaXNbZV0uZ2V0LHRoaXMs
ZCkoKX1lbHNle2lmKCF0aGlzW2VdLl9pbml0KXtjPXRoaXNbZV0uZGVmYXVsdFZh
bHVlW3RoaXMuZGlzcGxheVR5cGVdfWVsc2V7Yz10aGlzW2VdLl92YWx1ZX19cmV0
dXJuIGN9LHNldDpmdW5jdGlvbihlLGYpe3ZhciBjPWZhbHNlO2lmKHRoaXNbZV0u
c2V0JiZ0aGlzW2VdLnNldCE9PSJkZWZhdWx0Iil7dmFyIGQ9QXJyYXkucHJvdG90
eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApO2Quc2hpZnQoKTtjPXRoaXMuVS5w
cm94eSh0aGlzW2VdLnNldCx0aGlzLGQpKCl9ZWxzZXt0aGlzW2VdLl92YWx1ZT1m
O3RoaXNbZV0uX2luaXQ9dHJ1ZTtjPXRydWV9cmV0dXJuIGN9LGs6e3Nsb3RQYXJh
bU5hbWU6ImsiLGN1c3RQYXJhbU5hbWU6ImsiLG1vZGlmaWVyOiJkeW5hbWljIixk
ZWZhdWx0VmFsdWU6e2lubGF5OiIiLCJmbG9hdCI6IiIsY3VzdElubGF5OiIifSxl
bmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTpmYWxzZSwiZmxvYXQiOmZhbHNl
LHVpOnRydWUscG9zdDpmYWxzZSxjdXN0SW5sYXk6ZmFsc2UsY2FwdGNoYTpmYWxz
ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxjZjp7c2xvdFBhcmFtTmFt
ZToiY2YiLGN1c3RQYXJhbU5hbWU6ImNmIixtb2RpZmllcjoiZHluYW1pYyIsZGVm
YXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQiOiIiLGN1c3RJbmxheToiIn0sZW5j
b2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFsc2UsImZsb2F0IjpmYWxzZSx1
aTp0cnVlLHBvc3Q6ZmFsc2UsY3VzdElubGF5OmZhbHNlLGNhcHRjaGE6ZmFsc2V9
LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0sdHAyams6e3Nsb3RQYXJhbU5h
bWU6InRwMmprIixjdXN0UGFyYW1OYW1lOiJ0cDJqayIsbW9kaWZpZXI6ImR5bmFt
aWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIixjdXN0SW5sYXk6
IiJ9LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lubGF5OmZhbHNlLCJmbG9hdCI6
ZmFsc2UsdWk6dHJ1ZSxwb3N0OmZhbHNlLGN1c3RJbmxheTpmYWxzZSxjYXB0Y2hh
OmZhbHNlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHJzOntzbG90UGFy
YW1OYW1lOiJjcHJvX3JzIixjdXN0UGFyYW1OYW1lOiJycyIsbW9kaWZpZXI6ImR5
bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6MCwiZmxvYXQiOjAsdWk6MCxwb3N0
OjAsY3VzdElubGF5OjAsY2FwdGNoYTowfSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFt
OntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6ZmFsc2UsY3Vz
dElubGF5OmZhbHNlLGNhcHRjaGE6ZmFsc2V9LGdldDoiZGVmYXVsdCIsc2V0OiJk
ZWZhdWx0In0scGM6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fcGMiLGN1c3RQYXJhbU5h
bWU6InBjIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntwYWQ6bnVs
bH0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFsc2UsImZsb2F0Ijpm
YWxzZSx1aTpmYWxzZSxwb3N0OmZhbHNlLGN1c3RJbmxheTpmYWxzZSxjYXB0Y2hh
OmZhbHNlLHBhZDp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHR1
OntzbG90UGFyYW1OYW1lOiJzbG90SWQiLGN1c3RQYXJhbU5hbWU6InR1Iixtb2Rp
ZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQiOiIi
LGNhcHRjaGE6IiJ9LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lubGF5OnRydWUs
ImZsb2F0Ijp0cnVlLGN1c3RJbmxheTp0cnVlLGNhcHRjaGE6dHJ1ZSx1aTp0cnVl
fSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHRuOntzbG90UGFyYW1OYW1l
OiJjcHJvX3RlbXBsYXRlIixjdXN0UGFyYW1OYW1lOiJ0biIsbW9kaWZpZXI6ImR5
bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6InRleHRfZGVmYXVsdF8xMjVfMTI1
IiwiZmxvYXQiOiJmbG9hdF94dWFuZnVzbGRfMTIwXzI3MCIsdWk6bnVsbCxwb3N0
Om51bGwsY3VzdElubGF5OiJiYWlkdUN1c3QiLGNhcHRjaGE6InZjb2RlX2NhcHRj
aGFGXzI1NF8yMTgiLHBhZDoicGFkX3RpZXBpYW5fNDAwXzMwMCJ9LGVuY29kZTpm
YWxzZSxpc1VJUGFyYW06e2lubGF5OnRydWUsImZsb2F0Ijp0cnVlLHVpOnRydWUs
cG9zdDp0cnVlLGN1c3RJbmxheTp0cnVlLGNhcHRjaGE6dHJ1ZSxwYWQ6dHJ1ZX0s
Z2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxuOntzbG90UGFyYW1OYW1lOiJj
cHJvX2NsaWVudCIsY3VzdFBhcmFtTmFtZToibiIsbW9kaWZpZXI6ImR5bmFtaWMi
LGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1aToiIixwb3N0OiIi
LGN1c3RJbmxheToiIixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOmZhbHNlLGlz
VUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRy
dWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxnZXQ6ImRl
ZmF1bHQiLHNldDoiZGVmYXVsdCJ9LGFkbjp7c2xvdFBhcmFtTmFtZToiY3Byb18x
NjEiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIwIiwi
ZmxvYXQiOiIxIixjYXB0Y2hhOiIxIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7
aW5sYXk6dHJ1ZSwiZmxvYXQiOmZhbHNlLGN1c3RJbmxheTp0cnVlLGNhcHRjaGE6
ZmFsc2V9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0scnNpMTp7c2xvdFBh
cmFtTmFtZToiY3Byb19oIixjdXN0UGFyYW1OYW1lOiJoIixtb2RpZmllcjoiZHlu
YW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToiMTI1IiwiZmxvYXQiOiIyNzAiLHVp
Om51bGwsY3VzdElubGF5Om51bGwsY2FwdGNoYToiMjE4IixwYWQ6bnVsbH0sZW5j
b2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6
dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUscGFkOnRydWV9LGdldDoi
ZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0scnNpMzp7c2xvdFBhcmFtTmFtZToiY3By
b19hZHciLGN1c3RQYXJhbU5hbWU6ImFkdyIsbW9kaWZpZXI6ImR5bmFtaWMiLGRl
ZmF1bHRWYWx1ZTp7cGFkOiI0MzAifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntp
bmxheTpmYWxzZSwiZmxvYXQiOmZhbHNlLHVpOmZhbHNlLGN1c3RJbmxheTpmYWxz
ZSxjYXB0Y2hhOmZhbHNlLHBhZDp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVm
YXVsdCJ9LHJzaTQ6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fYWRoIixjdXN0UGFyYW1O
YW1lOiJhZGgiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e3BhZDoi
MzUwIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFsc2UsImZsb2F0
IjpmYWxzZSx1aTpmYWxzZSxjdXN0SW5sYXk6ZmFsc2UsY2FwdGNoYTpmYWxzZSxw
YWQ6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxyc2kwOntzbG90
UGFyYW1OYW1lOiJjcHJvX3ciLGN1c3RQYXJhbU5hbWU6InciLG1vZGlmaWVyOiJk
eW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIxMjUiLCJmbG9hdCI6IjEyMCIs
dWk6bnVsbCxjdXN0SW5sYXk6bnVsbCxjYXB0Y2hhOiIyNTQiLHBhZDpudWxsfSxl
bmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1
aTp0cnVlLGN1c3RJbmxheTp0cnVlLGNhcHRjaGE6dHJ1ZSxwYWQ6dHJ1ZX0sZ2V0
OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxyc2kyOntjdXN0UGFyYW1OYW1lOiJi
dSIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7dWk6bnVsbH0sZW5j
b2RlOnRydWUsaXNVSVBhcmFtOnt1aTp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoi
ZGVmYXVsdCJ9LHJhZDp7c2xvdFBhcmFtTmFtZToiY3Byb19yYWQiLGN1c3RQYXJh
bU5hbWU6InJhZCIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5s
YXk6IiIsImZsb2F0IjoiIix1aTpudWxsLHBvc3Q6bnVsbCxjdXN0SW5sYXk6IiIs
Y2FwdGNoYToiIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwi
ZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRydWUsY3VzdElubGF5OnRydWUsY2Fw
dGNoYTp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHJzczA6e3Ns
b3RQYXJhbU5hbWU6ImNwcm9fY2JkIixjdXN0UGFyYW1OYW1lOiJiZCIsbW9kaWZp
ZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1
aTpudWxsLGN1c3RJbmxheToiIixjYXB0Y2hhOiIifSxlbmNvZGU6dHJ1ZSxpc1VJ
UGFyYW06e2lubGF5OnRydWUsImZsb2F0IjpmYWxzZSx1aTp0cnVlLGN1c3RJbmxh
eTp0cnVlLGNhcHRjaGE6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQi
fSxjb25CVzp7c2xvdFBhcmFtTmFtZToiY3Byb19jb25CVyIsbW9kaWZpZXI6ImR5
bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6MH0sZW5jb2RlOnRydWUsaXNVSVBh
cmFtOntpbmxheTp0cnVlLCJmbG9hdCI6ZmFsc2UsdWk6ZmFsc2UsY3VzdElubGF5
OnRydWUsY2FwdGNoYTpmYWxzZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQi
fSxyc3MxOntzbG90UGFyYW1OYW1lOiJjcHJvX2NiZyIsY3VzdFBhcmFtTmFtZToi
YmciLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIiLCJm
bG9hdCI6IiIsdWk6bnVsbCxwb3N0Om51bGwsY3VzdElubGF5OiIiLGNhcHRjaGE6
IiIscGFkOiIifSxlbmNvZGU6dHJ1ZSxpc1VJUGFyYW06e2lubGF5OnRydWUsImZs
b2F0IjpmYWxzZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0
Y2hhOnRydWUscGFkOnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0s
Y29uT1A6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fY29uT1AiLG1vZGlmaWVyOiJkeW5h
bWljIixkZWZhdWx0VmFsdWU6e2lubGF5OjB9LGVuY29kZTp0cnVlLGlzVUlQYXJh
bTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOmZhbHNlLHVpOmZhbHNlLHBvc3Q6ZmFsc2Us
Y3VzdElubGF5OnRydWUsY2FwdGNoYTpmYWxzZX0sZ2V0OiJkZWZhdWx0IixzZXQ6
ImRlZmF1bHQifSxyc3MyOntzbG90UGFyYW1OYW1lOiJjcHJvX2N0aXRsZSIsY3Vz
dFBhcmFtTmFtZToidHQiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6
e2lubGF5OiIiLCJmbG9hdCI6IiIsdWk6bnVsbCxwb3N0Om51bGwsY3VzdElubGF5
OiIiLGNhcHRjaGE6IiJ9LGVuY29kZTp0cnVlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1
ZSwiZmxvYXQiOmZhbHNlLHVpOnRydWUscG9zdDp0cnVlLGN1c3RJbmxheTp0cnVl
LGNhcHRjaGE6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSx0aXRG
Rjp7c2xvdFBhcmFtTmFtZToiY3Byb190aXRGRiIsbW9kaWZpZXI6ImR5bmFtaWMi
LGRlZmF1bHRWYWx1ZTp7aW5sYXk6IuWui+S9kyJ9LGVuY29kZTp0cnVlLGlzVUlQ
YXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOmZhbHNlLHVpOmZhbHNlLHBvc3Q6ZmFs
c2UsY3VzdElubGF5OnRydWUsY2FwdGNoYTpmYWxzZX0sZ2V0OmZ1bmN0aW9uKCl7
cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh0aGlzWyJ0aXRGRiJdLl92YWx1ZSl9
LHNldDoiZGVmYXVsdCJ9LHRpdEZTOntzbG90UGFyYW1OYW1lOiJjcHJvX3RpdEZT
Iixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToxMn0sZW5j
b2RlOnRydWUsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6ZmFsc2UsdWk6
ZmFsc2UscG9zdDpmYWxzZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOmZhbHNlfSxn
ZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHRpdFRBOntzbG90UGFyYW1OYW1l
OiJjcHJvX3RpdFRBIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntp
bmxheToibGVmdCJ9LGVuY29kZTp0cnVlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwi
ZmxvYXQiOmZhbHNlLHVpOmZhbHNlLHBvc3Q6ZmFsc2UsY3VzdElubGF5OnRydWUs
Y2FwdGNoYTpmYWxzZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxyc3Mz
OntzbG90UGFyYW1OYW1lOiJjcHJvX2NkZXNjIixjdXN0UGFyYW1OYW1lOiJjdCIs
bW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0
IjoiIix1aTpudWxsLHBvc3Q6bnVsbCxjdXN0SW5sYXk6IiIsY2FwdGNoYToiIn0s
ZW5jb2RlOnRydWUsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6ZmFsc2Us
dWk6dHJ1ZSxwb3N0OnRydWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlfSxn
ZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHJzczQ6e3Nsb3RQYXJhbU5hbWU6
ImNwcm9fY3VybCIsY3VzdFBhcmFtTmFtZToidXJsIixtb2RpZmllcjoiZHluYW1p
YyIsZGVmYXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQiOiIiLHVpOm51bGwscG9z
dDpudWxsLGN1c3RJbmxheToiIixjYXB0Y2hhOiIifSxlbmNvZGU6dHJ1ZSxpc1VJ
UGFyYW06e2lubGF5OnRydWUsImZsb2F0IjpmYWxzZSx1aTp0cnVlLHBvc3Q6dHJ1
ZSxjdXN0SW5sYXk6IiIsY2FwdGNoYTp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoi
ZGVmYXVsdCJ9LHJzczU6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fY2xpbmsiLGN1c3RQ
YXJhbU5hbWU6ImJkbCIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7
aW5sYXk6IiIsImZsb2F0IjoiIix1aTpudWxsLGNhcHRjaGE6IiJ9LGVuY29kZTp0
cnVlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOmZhbHNlLHVpOnRydWUs
Y2FwdGNoYTp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHJzc2ww
OntjdXN0UGFyYW1OYW1lOiJ0YSIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRW
YWx1ZTp7dWk6bnVsbCxwb3N0Om51bGx9LGVuY29kZTp0cnVlLGlzVUlQYXJhbTp7
dWk6dHJ1ZSxwb3N0OnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0s
cnNzbDE6e2N1c3RQYXJhbU5hbWU6InRsIixtb2RpZmllcjoiZHluYW1pYyIsZGVm
YXVsdFZhbHVlOnt1aTpudWxsLHBvc3Q6bnVsbH0sZW5jb2RlOnRydWUsaXNVSVBh
cmFtOnt1aTp0cnVlLHBvc3Q6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1
bHQifSxyc3M2OntzbG90UGFyYW1OYW1lOiJjcHJvX2NmbHVzaCIsbW9kaWZpZXI6
ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIixjdXN0
SW5sYXk6IiIsY2FwdGNoYToiIn0sZW5jb2RlOnRydWUsaXNVSVBhcmFtOntpbmxh
eTp0cnVlLCJmbG9hdCI6ZmFsc2UsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVl
fSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHJzaTU6e3Nsb3RQYXJhbU5h
bWU6ImNwcm9fZmx1c2giLGN1c3RQYXJhbU5hbWU6Im5mciIsbW9kaWZpZXI6ImR5
bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IjQiLCJmbG9hdCI6IiIsdWk6bnVs
bCxjdXN0SW5sYXk6IjQiLGNhcHRjaGE6IjQifSxlbmNvZGU6ZmFsc2UsaXNVSVBh
cmFtOntpbmxheTp0cnVlLCJmbG9hdCI6ZmFsc2UsdWk6dHJ1ZSxjdXN0SW5sYXk6
dHJ1ZSxjYXB0Y2hhOnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0s
cnNpNjp7c2xvdFBhcmFtTmFtZToiY3Byb19jdG9waCIsbW9kaWZpZXI6ImR5bmFt
aWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6LTEsImZsb2F0IjotMX0sZW5jb2RlOmZh
bHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFsc2UsImZsb2F0Ijp0cnVlfSxnZXQ6ImRl
ZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHJzaTc6e3Nsb3RQYXJhbU5hbWU6ImNwcm9f
cHRvcGgiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIw
IiwiZmxvYXQiOiIwIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFs
c2UsImZsb2F0Ijp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LHRz
OntzbG90UGFyYW1OYW1lOiJjcHJvX3RzIixtb2RpZmllcjoiZHluYW1pYyIsZGVm
YXVsdFZhbHVlOntpbmxheToiMSIsImZsb2F0IjoiIixjYXB0Y2hhOiIxIn0sZW5j
b2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOmZhbHNlLGNh
cHRjaGE6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxhdDp7c2xv
dFBhcmFtTmFtZToiY3Byb19hdCIsY3VzdFBhcmFtTmFtZToiYXQiLG1vZGlmaWVy
OiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiJhbGwiLCJmbG9hdCI6Imlt
YWdlX2ZsYXNoIix1aToiIixwb3N0OiIiLGN1c3RJbmxheToidGV4dF90dXdlbiIs
Y2FwdGNoYToiaW1hZ2VfZmxhc2giLHBhZDoiaW1hZ2VfZmxhc2gifSxlbmNvZGU6
ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVl
LHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUscGFkOnRydWV9
LGdldDpmdW5jdGlvbigpe3ZhciBrPTA7dmFyIGM9dGhpc1siYXQiXS5fdmFsdWU7
dmFyIGU9bmV3IFJlZ0V4cCgiKHRleHQpezF9IiwiZyIpO3ZhciBoPW5ldyBSZWdF
eHAoIihpbWFnZSl7MX18KGZsYXNoKXsxfSIsImciKTt2YXIgaj1uZXcgUmVnRXhw
KCIoaW1hZ2UpezF9XyhmbGFzaCl7MX0iLCJnIik7dmFyIGY9bmV3IFJlZ0V4cCgi
KGltYWdlKXsxfSIsImciKTt2YXIgZz1uZXcgUmVnRXhwKCIodmlkZW8pezF9Iiwi
ZyIpO3ZhciBpPW5ldyBSZWdFeHAoIih0dXdlbil7MX0iLCJnIik7dmFyIGQ9bmV3
IFJlZ0V4cCgiKGFsbCl7MX0iLCJnIik7aWYodGhpcy5kaXNwbGF5VHlwZT09InVp
IiYmdGhpc1sidG4iXS5fdmFsdWUhPSJiYWlkdUNQUk9pa25vdyIpe2lmKGUudGVz
dChjKSl7a3w9MTtrfD02NH1pZihmLnRlc3QoYykpe2t8PTJ9aWYoai50ZXN0KGMp
KXtrfD0yO2t8PTR9cmV0dXJuIGt9aWYoZS50ZXN0KGMpKXtrfD0xO2t8PTY0fWlm
KGgudGVzdChjKSl7a3w9MjtrfD00fWlmKGcudGVzdChjKSl7a3w9OH1pZihpLnRl
c3QoYykpe2t8PTMyfWlmKGQudGVzdChjKSl7a3w9MTAzfXJldHVybiBrfSxzZXQ6
ImRlZmF1bHQifSxjaDp7c2xvdFBhcmFtTmFtZToiY3Byb19jaGFubmVsIixjdXN0
UGFyYW1OYW1lOiJjaGFubmVsIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZh
bHVlOntpbmxheToiMCIsImZsb2F0IjoiMCIsdWk6IjAiLGN1c3RJbmxheToiMCIs
Y2FwdGNoYToiMCIscGFkOiIwIn0sZW5jb2RlOnRydWUsaXNVSVBhcmFtOntpbmxh
eTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLGN1c3RJbmxheTp0cnVlLGNhcHRj
aGE6dHJ1ZSxwYWQ6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxj
YWQ6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fY2FkIixjdXN0UGFyYW1OYW1lOiJjYWQi
LG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIxIiwiZmxv
YXQiOiIxIix1aToiMCIscG9zdDoiMCIsY3VzdElubGF5OiIxIixjYXB0Y2hhOiIx
IixwYWQ6IjEifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJm
bG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0
Y2hhOnRydWUscGFkOnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0s
YXVybDp7c2xvdFBhcmFtTmFtZToiY3Byb19hdXJsIixtb2RpZmllcjoiZHluYW1p
YyIsZGVmYXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQiOiIiLGN1c3RJbmxheToi
IixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOnRydWUsaXNVSVBhcmFtOntpbmxh
eTp0cnVlLCJmbG9hdCI6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUs
cGFkOnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0scnNzNzp7c2xv
dFBhcmFtTmFtZToiY3Byb19hY29sb3IiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZh
dWx0VmFsdWU6e2lubGF5OiIiLCJmbG9hdCI6IiIsY3VzdElubGF5OiIiLGNhcHRj
aGE6IiIscGFkOiIifSxlbmNvZGU6dHJ1ZSxpc1VJUGFyYW06e2lubGF5OnRydWUs
ImZsb2F0Ijp0cnVlLGN1c3RJbmxheTp0cnVlLGNhcHRjaGE6dHJ1ZSxwYWQ6dHJ1
ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxjcGE6e3Nsb3RQYXJhbU5h
bWU6ImNwcm9fdWFwIixjdXN0UGFyYW1OYW1lOiJ1YXAiLG1vZGlmaWVyOiJkeW5h
bWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIxIiwiZmxvYXQiOiIwIix1aToiMCIs
Y3VzdElubGF5OiIxIixjYXB0Y2hhOiIxIixwYWQ6IjAifSxlbmNvZGU6ZmFsc2Us
aXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLGN1c3RJ
bmxheTp0cnVlLGNhcHRjaGE6dHJ1ZSxwYWQ6dHJ1ZX0sZ2V0OiJkZWZhdWx0Iixz
ZXQ6ImRlZmF1bHQifSxmdjp7c2xvdFBhcmFtTmFtZToiIixjdXN0UGFyYW1OYW1l
OiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIwIiwi
ZmxvYXQiOiIwIix1aToiIixwb3N0OiIiLGN1c3RJbmxheToiMCIsY2FwdGNoYToi
MCIscGFkOiIwIn0sZW5jb2RlOnRydWUsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJm
bG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0
Y2hhOnRydWUscGFkOnRydWV9LGdldDpmdW5jdGlvbigpe3ZhciBjPSJTaG9ja3dh
dmVGbGFzaC5TaG9ja3dhdmVGbGFzaCIsZz10aGlzLm5hdixkLGg7aWYodGhpcy5u
YXYucGx1Z2lucyYmZy5taW1lVHlwZXMubGVuZ3RoKXtkPWcucGx1Z2luc1siU2hv
Y2t3YXZlIEZsYXNoIl07aWYoZCYmZC5kZXNjcmlwdGlvbil7cmV0dXJuIGQuZGVz
Y3JpcHRpb24ucmVwbGFjZSgvW15cZFwuXS9nLCIiKS5zcGxpdCgiLiIpWzBdfX1l
bHNle2lmKHRoaXMuVS5icm93c2VyLmllKXtoPUFjdGl2ZVhPYmplY3Q7dHJ5e2Q9
bmV3IGgoYysiLjciKX1jYXRjaChmKXt0cnl7ZD1uZXcgaChjKyIuNiIpO2QuQWxs
b3dTY3JpcHRBY2Nlc3M9ImFsd2F5cyI7cmV0dXJuIDZ9Y2F0Y2goZil7fXRyeXtk
PW5ldyBoKGMpfWNhdGNoKGYpe319aWYoZCE9bnVsbCl7dHJ5e3JldHVybiBkLkdl
dFZhcmlhYmxlKCIkdmVyc2lvbiIpLnNwbGl0KCIgIilbMV0uc3BsaXQoIiwiKVsw
XX1jYXRjaChmKXt9fX19cmV0dXJuIDB9LHNldDoiZGVmYXVsdCJ9LGNuOntzbG90
UGFyYW1OYW1lOiIiLGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMi
LGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1aToiIixwb3N0OiIi
LGN1c3RJbmxheToiIixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOmZhbHNlLGlz
VUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRy
dWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxnZXQ6ZnVu
Y3Rpb24oKXtpZighdGhpc1sibiJdfHwhdGhpc1sibiJdLmdldCl7cmV0dXJuIDF9
dmFyIGM9MDt2YXIgZD10aGlzLmdldCgibiIpO3ZhciBlPXRoaXMuZ2V0KCJjaCIp
fHwiMCI7aWYoZCl7dGhpcy5CTC5jbGllbnRUcmVlPXRoaXMuQkwuY2xpZW50VHJl
ZXx8e307aWYoIXRoaXMuQkwuY2xpZW50VHJlZVtkXSl7Yys9MTtpZihlJiZlIT09
IjAiKXtjKz0yfXJldHVybiBjfWlmKGUmJmUhPT0iMCImJnRoaXMuQkwuY2xpZW50
VHJlZVtkXSYmKCF0aGlzLkJMLmNsaWVudFRyZWVbZF1bZV0pKXtjKz0yfX1yZXR1
cm4gY30sc2V0OmZ1bmN0aW9uKCl7dmFyIGM9dGhpcy5nZXQoIm4iKTt2YXIgZD10
aGlzLmdldCgiY2giKXx8IjAiO2lmKGMpe3RoaXMuQkwuY2xpZW50VHJlZT10aGlz
LkJMLmNsaWVudFRyZWV8fHt9O2lmKCF0aGlzLkJMLmNsaWVudFRyZWVbY10pe3Ro
aXMuQkwuY2xpZW50VHJlZVtjXT17fX1pZihkJiZkIT09IjAiJiYoIXRoaXMuQkwu
Y2xpZW50VHJlZVtjXVtkXSkpe3RoaXMuQkwuY2xpZW50VHJlZVtjXVtkXT10cnVl
fX1yZXR1cm4gdHJ1ZX19LCJpZiI6e3Nsb3RQYXJhbU5hbWU6IiIsY3VzdFBhcmFt
TmFtZToiIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToi
MCIsImZsb2F0IjoiMCIsdWk6IjAiLHBvc3Q6IjAiLGN1c3RJbmxheToiMCIsY2Fw
dGNoYToiMCIscGFkOiIwIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6
dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRydWUsY3VzdElubGF5OnRy
dWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxnZXQ6ZnVuY3Rpb24oKXt2YXIgZD0w
O3ZhciBnPXRoaXMuY3VycmVudFdpbmRvdztpZih0aGlzLlUuaXNJbklmcmFtZShn
KSl7ZCs9MX1pZih0aGlzLlUuaXNJbkNyb3NzRG9tYWluSWZyYW1lKGcsZy50b3Ap
KXtkKz0yfWlmKCF0aGlzWyJyc2kwIl18fCF0aGlzWyJyc2kwIl0uZ2V0fHwhdGhp
c1sicnNpMSJdfHwhdGhpc1sicnNpMSJdLmdldCl7cmV0dXJuIGR9dmFyIGM9dGhp
cy5nZXQoInJzaTAiKTt2YXIgZj10aGlzLmdldCgicnNpMSIpO3ZhciBlPXRoaXMu
VS5nZXRDbGllbnRXaWR0aCh0aGlzLmN1cnJlbnRXaW5kb3cpO3ZhciBoPXRoaXMu
VS5nZXRDbGllbnRIZWlnaHQodGhpcy5jdXJyZW50V2luZG93KTtpZihlPDQwfHxo
PDEwKXtkKz00fWVsc2V7aWYoZTxjfHxoPGYpe2QrPTh9fWlmKChlPj0yKmMpfHwo
aD49MipmKSl7ZCs9MTZ9cmV0dXJuIGR9LHNldDoiZGVmYXVsdCJ9LHBhZHdvcmQ6
e3Nsb3RQYXJhbU5hbWU6IiIsY3VzdFBhcmFtTmFtZToiIixtb2RpZmllcjoiZHlu
YW1pYyIsbGltaXQ6NzAwLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0Ijoi
Iix1aToiIixwb3N0OiIiLGN1c3RJbmxheToiIixjYXB0Y2hhOiIiLHBhZDpudWxs
fSxlbmNvZGU6dHJ1ZSxpc1VJUGFyYW06e2lubGF5OmZhbHNlLCJmbG9hdCI6ZmFs
c2UsdWk6ZmFsc2UscG9zdDpmYWxzZSxjdXN0SW5sYXk6ZmFsc2UsY2FwdGNoYTpm
YWxzZSxwYWQ6dHJ1ZX0sZ2V0OmZ1bmN0aW9uKCl7dmFyIGo9dGhpcy5jdXJyZW50
V2luZG93O3ZhciBwLGw9MTAsYz0wO3ZhciBnLG07dHJ5e2c9dGhpcy5nZXQoInJz
aTAiKXx8MDttPXRoaXMuZ2V0KCJyc2kxIil8fDB9Y2F0Y2goayl7Zz0yMDAsbT02
MH1wPWouZG9jdW1lbnQubG9jYXRpb24uaHJlZjtpZih0aGlzLlUuaXNJbklmcmFt
ZShqKSl7dmFyIGQsZixlO2ZvcihjPTA7YzxsO2MrKyl7aWYoIXRoaXMuVS5pc0lu
Q3Jvc3NEb21haW5JZnJhbWUoaixqLnBhcmVudCkpe2Q9dGhpcy5VLmdldENsaWVu
dFdpZHRoKGopO2Y9dGhpcy5VLmdldENsaWVudEhlaWdodChqKTtlPWouZG9jdW1l
bnQubG9jYXRpb24uaHJlZjtqPWoucGFyZW50O2lmKGc+MCYmbT4wJiZkPjIqZyYm
Zj4yKm0pe3A9ZTticmVha31pZighdGhpcy5VLmlzSW5JZnJhbWUoaixqLnBhcmVu
dCkpe3A9ai5sb2NhdGlvbi5ocmVmO2JyZWFrfX1lbHNle3A9ai5kb2N1bWVudC5y
ZWZlcnJlcnx8ai5kb2N1bWVudC5sb2NhdGlvbi5ocmVmO2JyZWFrfX1pZihjPj0x
MCl7cD1qLmRvY3VtZW50LnJlZmVycmVyfHxqLmRvY3VtZW50LmxvY2F0aW9uLmhy
ZWZ9fWlmKCgocC5zZWFyY2goL2Nwcm8uYmFpZHUuY29tL2kpIT0tMSl8fChwLnNl
YXJjaCgvXD9oaWRlPTEvaSkhPS0xKSkmJnAuc2VhcmNoKC90PXRwY2xpY2tlZC9p
KSE9LTEpe3ZhciBvPXAuaW5kZXhPZigiPyIpO3ZhciBwPXAuc3Vic3RyaW5nKG8r
MSk7dmFyIG49cC5zcGxpdCgiJiIpO2Zvcih2YXIgaD0wO2g8bi5sZW5ndGg7aCsr
KXtpZihuW2hdLnNlYXJjaCgvXnU9L2kpIT0tMSl7cD1uW2hdLnJlcGxhY2UoL151
PS9pLCIiKTticmVha319fWlmKCF0aGlzLmdldCgicGMiKSl7cD0iIn1yZXR1cm4g
cH0sc2V0OiJkZWZhdWx0In0sd29yZDp7c2xvdFBhcmFtTmFtZToiIixjdXN0UGFy
YW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixsaW1pdDo3MDAsZGVmYXVsdFZh
bHVlOntpbmxheToiIiwiZmxvYXQiOiIiLHVpOiIiLHBvc3Q6IiIsY3VzdElubGF5
OiIiLGNhcHRjaGE6IiIscGFkOiIifSxlbmNvZGU6dHJ1ZSxpc1VJUGFyYW06e2lu
bGF5OnRydWUsImZsb2F0Ijp0cnVlLHVpOnRydWUscG9zdDp0cnVlLGN1c3RJbmxh
eTp0cnVlLGNhcHRjaGE6dHJ1ZSxwYWQ6dHJ1ZX0sZ2V0OmZ1bmN0aW9uKCl7dmFy
IGo9dGhpcy5jdXJyZW50V2luZG93O3ZhciBwLGw9MTAsYz0wO3ZhciBnLG07aWYo
d2luZG93LmRwQ2xpZW50JiZ3aW5kb3cuZHBDbGllbnREb21haW4pe3JldHVybiJo
dHRwOi8vIit3aW5kb3cuZHBDbGllbnREb21haW4rIi9kb21haW5fcGFya2luZy5o
dG0/c2l0ZT0iK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJl
Zikuc3Vic3RyaW5nKDAsNzAwKX10cnl7Zz10aGlzLmdldCgicnNpMCIpfHwwO209
dGhpcy5nZXQoInJzaTEiKXx8MH1jYXRjaChrKXtnPTIwMCxtPTYwfXA9ai5kb2N1
bWVudC5sb2NhdGlvbi5ocmVmO2lmKHRoaXMuVS5pc0luSWZyYW1lKGopKXt2YXIg
ZCxmLGU7Zm9yKGM9MDtjPGw7YysrKXtpZighdGhpcy5VLmlzSW5Dcm9zc0RvbWFp
bklmcmFtZShqLGoucGFyZW50KSl7ZD10aGlzLlUuZ2V0Q2xpZW50V2lkdGgoaik7
Zj10aGlzLlUuZ2V0Q2xpZW50SGVpZ2h0KGopO2U9ai5kb2N1bWVudC5sb2NhdGlv
bi5ocmVmO2o9ai5wYXJlbnQ7aWYoZz4wJiZtPjAmJmQ+MipnJiZmPjIqbSl7cD1l
O2JyZWFrfWlmKCF0aGlzLlUuaXNJbklmcmFtZShqLGoucGFyZW50KSl7cD1qLmxv
Y2F0aW9uLmhyZWY7YnJlYWt9fWVsc2V7cD1qLmRvY3VtZW50LnJlZmVycmVyfHxq
LmRvY3VtZW50LmxvY2F0aW9uLmhyZWY7YnJlYWt9fWlmKGM+PTEwKXtwPWouZG9j
dW1lbnQucmVmZXJyZXJ8fGouZG9jdW1lbnQubG9jYXRpb24uaHJlZn19aWYoKChw
LnNlYXJjaCgvY3Byby5iYWlkdS5jb20vaSkhPS0xKXx8KHAuc2VhcmNoKC9cP2hp
ZGU9MS9pKSE9LTEpKSYmcC5zZWFyY2goL3Q9dHBjbGlja2VkL2kpIT0tMSl7dmFy
IG89cC5pbmRleE9mKCI/Iik7dmFyIHA9cC5zdWJzdHJpbmcobysxKTt2YXIgbj1w
LnNwbGl0KCImIik7Zm9yKHZhciBoPTA7aDxuLmxlbmd0aDtoKyspe2lmKG5baF0u
c2VhcmNoKC9edT0vaSkhPS0xKXtwPW5baF0ucmVwbGFjZSgvXnU9L2ksIiIpO2Jy
ZWFrfX19cmV0dXJuIHB9LHNldDoiZGVmYXVsdCJ9LHJlZmVyOntzbG90UGFyYW1O
YW1lOiIiLGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMiLGxpbWl0
OjcwMCxkZWZhdWx0VmFsdWU6e2lubGF5OiIiLCJmbG9hdCI6IiIsdWk6IiIscG9z
dDoiIixjdXN0SW5sYXk6IiIsY2FwdGNoYToiIixwYWQ6IiJ9LGVuY29kZTp0cnVl
LGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0
OnRydWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxnZXQ6
ZnVuY3Rpb24oKXt2YXIgYzt0cnl7Yz10aGlzLndpbi5vcGVuZXI/dGhpcy53aW4u
b3BlbmVyLmRvY3VtZW50LmxvY2F0aW9uLmhyZWY6dGhpcy5kb2MucmVmZXJyZXJ9
Y2F0Y2goZCl7Yz10aGlzLmRvYy5yZWZlcnJlcn1yZXR1cm4gdGhpcy5VLmVzY2Fw
ZVRvRW5jb2RlKGMpfSxzZXQ6ImRlZmF1bHQifSxyZWFkeTp7c2xvdFBhcmFtTmFt
ZToiIixjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0
VmFsdWU6e2lubGF5OiIiLCJmbG9hdCI6IiIsdWk6IiIscG9zdDoiIixjdXN0SW5s
YXk6IiIsY2FwdGNoYToiIn0sZW5jb2RlOnRydWUsaXNVSVBhcmFtOntpbmxheTp0
cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1
ZSxjYXB0Y2hhOnRydWV9LGdldDpmdW5jdGlvbigpe3ZhciBkPXt1bmluaXRpYWxp
emVkOjAsbG9hZGluZzoxLGxvYWRlZDoyLGludGVyYWN0aXZlOjMsY29tcGxldGU6
NH07dHJ5e3JldHVybiBkW3RoaXMuZG9jLnJlYWR5U3RhdGVdfWNhdGNoKGMpe3Jl
dHVybiA1fX0sc2V0OiJkZWZhdWx0In0sams6e3Nsb3RQYXJhbU5hbWU6IiIsY3Vz
dFBhcmFtTmFtZToiIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntp
bmxheToiIiwiZmxvYXQiOiIiLHVpOiIiLHBvc3Q6IiIsY3VzdElubGF5OiIiLGNh
cHRjaGE6IiIscGFkOiIifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0
cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1
ZSxjYXB0Y2hhOnRydWUscGFkOnRydWV9LGdldDpmdW5jdGlvbigpe2lmKCF0aGlz
WyJqayJdLl92YWx1ZSl7dGhpc1siamsiXS5fdmFsdWU9dGhpcy5VLm1kNSh0aGlz
LkJMLnJhbmRvbUFycmF5LmpvaW4oIiIpK01hdGgucmFuZG9tKCkqMTAwMDAwMCt0
aGlzLmRvYy5sb2NhdGlvbi5ocmVmK3RoaXMuZG9jLmNvb2tpZSk7dGhpc1siamsi
XS5faW5pdD10cnVlfXJldHVybiB0aGlzWyJqayJdLl92YWx1ZX0sc2V0OmZ1bmN0
aW9uKCl7dGhpc1siamsiXS5fdmFsdWU9IiJ9fSxqbjp7c2xvdFBhcmFtTmFtZToi
IixjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFs
dWU6e2lubGF5OiIzIiwiZmxvYXQiOiIzIix1aToiMyIscG9zdDoiMyIsY3VzdElu
bGF5OiIzIixjYXB0Y2hhOiIzIixwYWQ6IjMifSxlbmNvZGU6ZmFsc2UsaXNVSVBh
cmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxj
dXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUscGFkOnRydWV9LGdldDpmdW5jdGlv
bigpe3JldHVybiAzfSxzZXQ6ImRlZmF1bHQifSxqczp7c2xvdFBhcmFtTmFtZToi
IixjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFs
dWU6e2lubGF5OiJjIiwiZmxvYXQiOiJmIix1aToidWkiLHBvc3Q6InBvc3QiLGN1
c3RJbmxheToiY3VzdElubGF5IixjYXB0Y2hhOiJ5In0sZW5jb2RlOmZhbHNlLGlz
VUlQYXJhbTp7aW5sYXk6ZmFsc2UsImZsb2F0IjpmYWxzZSx1aTp0cnVlLHBvc3Q6
dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWV9LGdldDoiZGVmYXVsdCIs
c2V0OiJkZWZhdWx0In0sbG10OntzbG90UGFyYW1OYW1lOiIiLGN1c3RQYXJhbU5h
bWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIs
ImZsb2F0IjoiIix1aToiIixwb3N0OiIiLGN1c3RJbmxheToiIixjYXB0Y2hhOiIi
LHBhZDoiIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxv
YXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRydWUsY3VzdElubGF5OnRydWUsY2FwdGNo
YTp0cnVlLHBhZDp0cnVlfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5wYXJz
ZSh0aGlzLmRvYy5sYXN0TW9kaWZpZWQpLzEwMDB9LHNldDoiZGVmYXVsdCJ9LGNz
cDp7c2xvdFBhcmFtTmFtZToiIixjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJk
eW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIiLCJmbG9hdCI6IiIsdWk6IiIs
cG9zdDoiIixjdXN0SW5sYXk6IiIsY2FwdGNoYToiIixwYWQ6IiJ9LGVuY29kZTpm
YWxzZSxpc1VJUGFyYW06e2lubGF5OnRydWUsImZsb2F0Ijp0cnVlLHVpOnRydWUs
cG9zdDp0cnVlLGN1c3RJbmxheTp0cnVlLGNhcHRjaGE6dHJ1ZSxwYWQ6dHJ1ZX0s
Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2NyLndpZHRoKyIsIit0aGlzLnNj
ci5oZWlnaHR9LHNldDoiZGVmYXVsdCJ9LGNzbjp7c2xvdFBhcmFtTmFtZToiIixt
b2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQi
OiIiLGN1c3RJbmxheToiIixjYXB0Y2hhOiIifSxlbmNvZGU6ZmFsc2UsaXNVSVBh
cmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0
Y2hhOnRydWV9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNjci5hdmFpbFdp
ZHRoKyIsIit0aGlzLnNjci5hdmFpbEhlaWdodH0sc2V0OiJkZWZhdWx0In0sY2Nk
OntzbG90UGFyYW1OYW1lOiIiLGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6ImR5
bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1aToiIixw
b3N0OiIiLGN1c3RJbmxheToiIixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOmZh
bHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxw
b3N0OnRydWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxn
ZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zY3IuY29sb3JEZXB0aHx8MH0sc2V0
OiJkZWZhdWx0In0sY2hpOntzbG90UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5h
bWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIiLCJmbG9hdCI6IiIsY3VzdElubGF5
OiIiLGNhcHRjaGE6IiIscGFkOiIifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntp
bmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRy
dWUscGFkOnRydWV9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLndpbi5oaXN0
b3J5Lmxlbmd0aHx8MH0sc2V0OiJkZWZhdWx0In0sY2phOntzbG90UGFyYW1OYW1l
OiIiLGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRW
YWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1aToiIixwb3N0OiIiLGN1c3RJbmxh
eToiIixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7
aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRydWUsY3VzdElu
bGF5OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxnZXQ6ZnVuY3Rpb24oKXty
ZXR1cm4gdGhpcy5uYXYuamF2YUVuYWJsZWQoKS50b1N0cmluZygpfSxzZXQ6ImRl
ZmF1bHQifSxjcGw6e3Nsb3RQYXJhbU5hbWU6IiIsY3VzdFBhcmFtTmFtZToiIixt
b2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQi
OiIiLHVpOiIiLHBvc3Q6IiIsY3VzdElubGF5OiIiLGNhcHRjaGE6IiIscGFkOiIi
fSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1
ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUs
cGFkOnRydWV9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5hdi5wbHVnaW5z
Lmxlbmd0aHx8MH0sc2V0OiJkZWZhdWx0In0sY21pOntzbG90UGFyYW1OYW1lOiIi
LGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1
ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1aToiIixwb3N0OiIiLGN1c3RJbmxheToi
IixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5s
YXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1ZSxwb3N0OnRydWUsY3VzdElubGF5
OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVlfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1
cm4gdGhpcy5uYXYubWltZVR5cGVzLmxlbmd0aHx8MH0sc2V0OiJkZWZhdWx0In0s
Y2NlOntzbG90UGFyYW1OYW1lOiIiLGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6
ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6IiIsImZsb2F0IjoiIix1aToi
Iixwb3N0OiIiLGN1c3RJbmxheToiIixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2Rl
OmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6dHJ1
ZSxwb3N0OnRydWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlLHBhZDp0cnVl
fSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5uYXYuY29va2llRW5hYmxlZHx8
MH0sc2V0OiJkZWZhdWx0In0sY3NsOnt1dXNlckFwaU5hbWU6IiIsY3VzdFBhcmFt
TmFtZToiIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheToi
IiwiZmxvYXQiOiIiLHVpOiIiLHBvc3Q6IiIsY3VzdElubGF5OiIiLGNhcHRjaGE6
IiIscGFkOiIifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJm
bG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0
Y2hhOnRydWUscGFkOnRydWV9LGdldDpmdW5jdGlvbigpe3JldHVybiBlbmNvZGVV
UklDb21wb25lbnQodGhpcy5uYXYubGFuZ3VhZ2V8fHRoaXMubmF2LmJyb3dzZXJM
YW5ndWFnZXx8dGhpcy5uYXYuc3lzdGVtTGFuZ3VhZ2UpLnJlcGxhY2UoL1teYS16
QS1aMC05XC1dL2csIiIpfSxzZXQ6ImRlZmF1bHQifSxkaWQ6e3V1c2VyQXBpTmFt
ZToiIixjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0
VmFsdWU6e2lubGF5OiIxIiwiZmxvYXQiOiIxIix1aToiMSIscG9zdDoiMSIsY3Vz
dElubGF5OiIxIixjYXB0Y2hhOiIxIixwYWQ6IjEifSxlbmNvZGU6ZmFsc2UsaXNV
SVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1
ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUscGFkOnRydWV9LGdldDpmdW5j
dGlvbigpe3RoaXMud2luLl9fYmRjcHJvX19kaXNwbGF5VHlwZUNvdW50ZXI9dGhp
cy53aW4uX19iZGNwcm9fX2Rpc3BsYXlUeXBlQ291bnRlcnx8e307cmV0dXJuIHRo
aXMud2luLl9fYmRjcHJvX19kaXNwbGF5VHlwZUNvdW50ZXIudG90YWx8fDF9LHNl
dDpmdW5jdGlvbigpe3RoaXMud2luLl9fYmRjcHJvX19kaXNwbGF5VHlwZUNvdW50
ZXIudG90YWw9dGhpcy53aW4uX19iZGNwcm9fX2Rpc3BsYXlUeXBlQ291bnRlci50
b3RhbHx8MTt0aGlzLndpbi5fX2JkY3Byb19fZGlzcGxheVR5cGVDb3VudGVyLnRv
dGFsKys7cmV0dXJuIHRydWV9fSxydDp7c2xvdFBhcmFtTmFtZToiIixjdXN0UGFy
YW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5
OiIiLCJmbG9hdCI6IiIsdWk6IiIscG9zdDoiIixjdXN0SW5sYXk6IiIsY2FwdGNo
YToiIixwYWQ6IiJ9LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lubGF5OnRydWUs
ImZsb2F0Ijp0cnVlLHVpOnRydWUscG9zdDp0cnVlLGN1c3RJbmxheTp0cnVlLGNh
cHRjaGE6dHJ1ZSxwYWQ6dHJ1ZX0sZ2V0OmZ1bmN0aW9uKCl7dmFyIGM9MDtpZih0
aGlzLnN0YXJ0VGltZSl7Yz0obmV3IERhdGUoKSkuZ2V0VGltZSgpLXRoaXMuc3Rh
cnRUaW1lLmdldFRpbWUoKX1yZXR1cm4gY30sc2V0OiJkZWZhdWx0In0sZHQ6e3Ns
b3RQYXJhbU5hbWU6IiIsY3VzdFBhcmFtTmFtZToiIixtb2RpZmllcjoiZHluYW1p
YyIsZGVmYXVsdFZhbHVlOntpbmxheToiIiwiZmxvYXQiOiIiLHVpOiIiLHBvc3Q6
IiIsY3VzdElubGF5OiIiLGNhcHRjaGE6IiIscGFkOiIifSxlbmNvZGU6ZmFsc2Us
aXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6
dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWUscGFkOnRydWV9LGdldDpm
dW5jdGlvbigpe3JldHVybiBNYXRoLnJvdW5kKChuZXcgRGF0ZSkuZ2V0VGltZSgp
LzEwMDApfSxzZXQ6ImRlZmF1bHQifSxwbjp7c2xvdFBhcmFtTmFtZToiIixjdXN0
UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lu
bGF5OiIiLCJmbG9hdCI6IiIsdWk6IiIsY3VzdElubGF5OiIiLGNhcHRjaGE6IiJ9
LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lubGF5OnRydWUsImZsb2F0Ijp0cnVl
LHVpOnRydWUsY3VzdElubGF5OnRydWUsY2FwdGNoYTp0cnVlfSxnZXQ6ZnVuY3Rp
b24oKXt2YXIgYz0iIjt2YXIgZixqLGgsaz1bXSxkPVtdLGc9W107dmFyIGU9dGhp
cy5CTC5wblR5cGVBcnJheVt0aGlzLmRpc3BsYXlUeXBlXT10aGlzLkJMLnBuVHlw
ZUFycmF5W3RoaXMuZGlzcGxheVR5cGVdfHxbXTtpZihlJiZlLmxlbmd0aD4wKXtm
b3IoZj0wLGo9ZS5sZW5ndGg7ZjxqO2YrKyl7aD1lW2ZdO2lmKCFofHwhaC5uYW1l
fHwhaC5udW18fCFoLmF0KXtjb250aW51ZX1rLnB1c2goaC5uYW1lKTtkLnB1c2go
aC5udW0pO2cucHVzaChoLmF0KX1jPWQuam9pbigiOiIpKyJ8IitrLmpvaW4oIjoi
KSsifCIrZy5qb2luKCI6Iil9cmV0dXJuIGN9LHNldDpmdW5jdGlvbihkLGYsZSl7
dmFyIGM9dHJ1ZTtpZighZHx8IWZ8fCFlKXtkPXRoaXMuZ2V0KCJ0biIpO2lmKHRo
aXMuZGlzcGxheVR5cGU9PSJ1aSIpe2Y9dGhpcy5nZXQoImhuIikqdGhpcy5nZXQo
InduIil8fDB9ZWxzZXtmPXRoaXMuZ2V0KCJhZG4iKXx8MH1lPXRoaXMuZ2V0KCJh
dCIpfHwxMDN9aWYoIWR8fCFmfHwhZSl7Yz1mYWxzZX1lbHNle2lmKHRoaXMuZGlz
cGxheVR5cGUhPSJ1aSImJnRoaXMuQkwucG5UeXBlQXJyYXlbdGhpcy5kaXNwbGF5
VHlwZV0ubGVuZ3RoPT0yKXtjPWZhbHNlfWVsc2V7aWYodGhpcy5kaXNwbGF5VHlw
ZT09InVpIiYmdGhpcy5CTC5wblR5cGVBcnJheVt0aGlzLmRpc3BsYXlUeXBlXS5s
ZW5ndGg9PTMpe2M9ZmFsc2V9ZWxzZXt0aGlzLkJMLnBuVHlwZUFycmF5W3RoaXMu
ZGlzcGxheVR5cGVdPXRoaXMuQkwucG5UeXBlQXJyYXlbdGhpcy5kaXNwbGF5VHlw
ZV18fFtdO3RoaXMuQkwucG5UeXBlQXJyYXlbdGhpcy5kaXNwbGF5VHlwZV0ucHVz
aCh7bmFtZTpkLG51bTpmLGF0OmV9KX19fXJldHVybiBjfX0sZXY6e3Nsb3RQYXJh
bU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6
IiIsImZsb2F0IjoiIixjYXB0Y2hhOiIiLHBhZDoiIn0sZW5jb2RlOmZhbHNlLGlz
VUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQiOnRydWUsY2FwdGNoYTp0cnVlLHBh
ZDp0cnVlfSxnZXQ6ZnVuY3Rpb24oKXt2YXIgYz10aGlzLmdldCgiYWRuIik7Yz1j
PDwyNDtyZXR1cm4gY30sc2V0OiJkZWZhdWx0In0sYzAxOntzbG90UGFyYW1OYW1l
OiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OiIwIiwi
ZmxvYXQiOiIwIixjYXB0Y2hhOiIifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntp
bmxheTp0cnVlLCJmbG9hdCI6dHJ1ZSxjYXB0Y2hhOnRydWV9LGdldDoiZGVmYXVs
dCIsc2V0OiJkZWZhdWx0In0scHJ0OntzbG90UGFyYW1OYW1lOiIiLGN1c3RQYXJh
bU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6
IjAiLCJmbG9hdCI6IjAiLHVpOiIwIixwb3N0OiIwIixjdXN0SW5sYXk6IjAiLGNh
cHRjaGE6IjAifSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJm
bG9hdCI6dHJ1ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0
Y2hhOnRydWV9LGdldDpmdW5jdGlvbigpe2lmKCF0aGlzLkJMLnBhZ2VGaXJzdFJl
cXVlc3RUaW1lKXt0aGlzLkJMLnBhZ2VGaXJzdFJlcXVlc3RUaW1lPShuZXcgRGF0
ZSgpKS5nZXRUaW1lKCl9cmV0dXJuIHRoaXMuQkwucGFnZUZpcnN0UmVxdWVzdFRp
bWV8fCIifSxzZXQ6ImRlZmF1bHQifSxmYTp7c2xvdFBhcmFtTmFtZToiY3Byb19m
bG9hdCIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6MSwi
ZmxvYXQiOjEsY2FwdGNoYToiMSJ9LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lu
bGF5OmZhbHNlLCJmbG9hdCI6dHJ1ZSxjYXB0Y2hhOnRydWV9LGdldDoiZGVmYXVs
dCIsc2V0OiJkZWZhdWx0In0sbHM6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fbG9jYXRp
b24iLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e2lubGF5OjMsImZs
b2F0IjozfSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTpmYWxzZSwiZmxv
YXQiOnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0scHQ6e3Nsb3RQ
YXJhbU5hbWU6ImNwcm9fcG9zaXRpb24iLG1vZGlmaWVyOiJkeW5hbWljIixkZWZh
dWx0VmFsdWU6e2lubGF5OjEsImZsb2F0IjoxfSxlbmNvZGU6ZmFsc2UsaXNVSVBh
cmFtOntpbmxheTpmYWxzZSwiZmxvYXQiOnRydWV9LGdldDoiZGVmYXVsdCIsc2V0
OiJkZWZhdWx0In0sZmx3OntzbG90UGFyYW1OYW1lOiJjcHJvX2ZvbGxvdyIsbW9k
aWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6MSwiZmxvYXQiOjF9
LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lubGF5OmZhbHNlLCJmbG9hdCI6dHJ1
ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxjdDp7c2xvdFBhcmFtTmFt
ZToiY3Byb19jbG9zZSIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7
aW5sYXk6MSwiZmxvYXQiOjF9LGVuY29kZTpmYWxzZSxpc1VJUGFyYW06e2lubGF5
OmZhbHNlLCJmbG9hdCI6dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQi
fSxjY3c6e3Nsb3RQYXJhbU5hbWU6ImNwcm9fY29udHciLG1vZGlmaWVyOiJkeW5h
bWljIixkZWZhdWx0VmFsdWU6e2lubGF5OjkwMCwiZmxvYXQiOjkwMH0sZW5jb2Rl
OmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFsc2UsImZsb2F0Ijp0cnVlfSxnZXQ6
ZnVuY3Rpb24oKXtpZih0eXBlb2YgdGhpc1siY2N3Il0uX3ZhbHVlPT09InVuZGVm
aW5lZCJ8fCF0aGlzWyJjY3ciXS5fdmFsdWV8fHRoaXNbImNjdyJdLl92YWx1ZTw3
MjApe3JldHVybiAxMDAwMH1lbHNle3JldHVybiB0aGlzWyJjY3ciXS5fdmFsdWV9
fSxzZXQ6ImRlZmF1bHQifSx3dzp7c2xvdFBhcmFtTmFtZToiY3Byb19jbGllbnR3
Iixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOntpbmxheTo0MDk1LCJm
bG9hdCI6NDA5NX0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6ZmFsc2Us
ImZsb2F0Ijp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LGNtOntj
dXN0UGFyYW1OYW1lOiJjbSIsbW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1
ZTp7dWk6MCxwb3N0OjB9LGVuY29kZTp0cnVlLGlzVUlQYXJhbTp7dWk6dHJ1ZSxw
b3N0OnRydWV9LGdldDoiZGVmYXVsdCIsc2V0OiJkZWZhdWx0In0sdW06e2N1c3RQ
YXJhbU5hbWU6InVtIixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVsdFZhbHVlOnt1
aTowLHBvc3Q6MH0sZW5jb2RlOnRydWUsaXNVSVBhcmFtOnt1aTp0cnVlLHBvc3Q6
dHJ1ZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSx3bjp7Y3VzdFBhcmFt
TmFtZToid24iLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6e3VpOm51
bGwscG9zdDpudWxsLGN1c3RJbmxheToxfSxlbmNvZGU6dHJ1ZSxpc1VJUGFyYW06
e3VpOnRydWUscG9zdDp0cnVlLGN1c3RJbmxheTp0cnVlfSxnZXQ6ImRlZmF1bHQi
LHNldDoiZGVmYXVsdCJ9LHRtOntjdXN0UGFyYW1OYW1lOiJ0bSIsbW9kaWZpZXI6
ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7dWk6MCxwb3N0OjB9LGVuY29kZTp0cnVl
LGlzVUlQYXJhbTp7dWk6dHJ1ZSxwb3N0OnRydWV9LGdldDoiZGVmYXVsdCIsc2V0
OiJkZWZhdWx0In0sZnVuYzp7Y3VzdFBhcmFtTmFtZToiZnVuYyIsbW9kaWZpZXI6
ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7dWk6InJlbmRlckJhaWR1Q3Byb0FkcyJ9
LGVuY29kZTp0cnVlLGlzVUlQYXJhbTp7dWk6dHJ1ZX0sZ2V0OiJkZWZhdWx0Iixz
ZXQ6ImRlZmF1bHQifSxobjp7Y3VzdFBhcmFtTmFtZToiaG4iLG1vZGlmaWVyOiJk
eW5hbWljIixkZWZhdWx0VmFsdWU6e3VpOm51bGwscG9zdDpudWxsLGN1c3RJbmxh
eTo0fSxlbmNvZGU6dHJ1ZSxpc1VJUGFyYW06e3VpOnRydWUscG9zdDp0cnVlLGN1
c3RJbmxheTp0cnVlfSxnZXQ6ImRlZmF1bHQiLHNldDoiZGVmYXVsdCJ9LGllOntj
dXN0UGFyYW1OYW1lOiJjaGFyc2V0Iixtb2RpZmllcjoiZHluYW1pYyIsZGVmYXVs
dFZhbHVlOnt1aTpudWxsLGN1c3RJbmxheToidXRmOCJ9LGVuY29kZTp0cnVlLGlz
VUlQYXJhbTp7dWk6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZX0sZ2V0OmZ1bmN0aW9uKCl7
aWYodHlwZW9mKHRoaXNbImllIl0uX3ZhbHVlKT09InN0cmluZyIpe3N3aXRjaCh0
aGlzWyJpZSJdLl92YWx1ZS50b0xvd2VyQ2FzZSgpKXtjYXNlImdiMjMxMiI6Y2Fz
ZSJnYmsiOnJldHVybiIwIjticmVhaztjYXNlInV0ZjgiOmNhc2UidXRmLTgiOnJl
dHVybiIxIjticmVhaztkZWZhdWx0OnJldHVybiBudWxsO2JyZWFrfX19LHNldDoi
ZGVmYXVsdCJ9LGkzOntzbG90UGFyYW1OYW1lOiIiLGN1c3RQYXJhbU5hbWU6IiIs
bW9kaWZpZXI6ImR5bmFtaWMiLGRlZmF1bHRWYWx1ZTp7aW5sYXk6InAiLCJmbG9h
dCI6InAiLHVpOiJwIixwb3N0OiJwIixjdXN0SW5sYXk6InAiLGNhcHRjaGE6InAi
fSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxheTp0cnVlLCJmbG9hdCI6dHJ1
ZSx1aTp0cnVlLHBvc3Q6dHJ1ZSxjdXN0SW5sYXk6dHJ1ZSxjYXB0Y2hhOnRydWV9
LGdldDpmdW5jdGlvbigpe3ZhciBjPSJwIjtzd2l0Y2god2luZG93Ll9fX2lzM2Ip
e2Nhc2UibG9hZGluZyI6Yz0ibCI7YnJlYWs7Y2FzZSJ0cnVlIjpjPSJ0IjticmVh
aztjYXNlImZhbHNlIjpjPSJmIjticmVhaztkZWZhdWx0OmM9InAiO2JyZWFrfXJl
dHVybiBjfSxzZXQ6ImRlZmF1bHQifSxhbmF0cDp7c2xvdFBhcmFtTmFtZToiIixj
dXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWljIixkZWZhdWx0VmFsdWU6
e2lubGF5OjAsImZsb2F0IjowLHVpOjAscG9zdDowLGN1c3RJbmxheTowLGNhcHRj
aGE6MH0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5sYXk6dHJ1ZSwiZmxvYXQi
OnRydWUsdWk6ZmFsc2UscG9zdDpmYWxzZSxjdXN0SW5sYXk6ZmFsc2UsY2FwdGNo
YTpmYWxzZX0sZ2V0OiJkZWZhdWx0IixzZXQ6ImRlZmF1bHQifSxzdGlkOntzbG90
UGFyYW1OYW1lOiIiLGN1c3RQYXJhbU5hbWU6IiIsbW9kaWZpZXI6ImR5bmFtaWMi
LGRlZmF1bHRWYWx1ZTp7aW5sYXk6MCwiZmxvYXQiOjAsdWk6MCxwb3N0OjAsY3Vz
dElubGF5OjAsY2FwdGNoYTowfSxlbmNvZGU6ZmFsc2UsaXNVSVBhcmFtOntpbmxh
eTp0cnVlLCJmbG9hdCI6dHJ1ZSx1aTpmYWxzZSxwb3N0OmZhbHNlLGN1c3RJbmxh
eTpmYWxzZSxjYXB0Y2hhOmZhbHNlfSxnZXQ6ZnVuY3Rpb24oKXt0cnl7aWYodGhp
cy5CTC5jaGVja0Zsb2F0THUmJnRoaXMuQkwuY2hlY2tGbG9hdEx1KHRoaXMud2lu
KSYmdGhpcy5HLkJ1c2luZXNzTG9naWMuRGlzdHJpYnV0ZS5kaXNwYXRjaCgiZmxv
YXRMdSIse2Rpc3BsYXlUeXBlOnRoaXMuZGlzcGxheVR5cGUsZGlzcGxheVdpZHRo
OnRoaXMuZ2V0KCJyc2kwIiksZGlzcGxheUhlaWdodDp0aGlzLmdldCgicnNpMSIp
fSkpe2lmKHRoaXMuRy5CdXNpbmVzc0xvZ2ljLkRpc3RyaWJ1dGUuZGlzcGF0Y2go
ImZsb2F0THVTaG93Iix7ZGlzcGxheVR5cGU6dGhpcy5kaXNwbGF5VHlwZSxkaXNw
bGF5V2lkdGg6dGhpcy5nZXQoInJzaTAiKSxkaXNwbGF5SGVpZ2h0OnRoaXMuZ2V0
KCJyc2kxIil9KSl7cmV0dXJuIDJ9ZWxzZXtyZXR1cm4gMX19ZWxzZXtyZXR1cm4g
MH19Y2F0Y2goYyl7cmV0dXJuIDB9fSxzZXQ6ImRlZmF1bHQifSxsdW51bTp7c2xv
dFBhcmFtTmFtZToiIixjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5hbWlj
IixkZWZhdWx0VmFsdWU6e2lubGF5OjAsImZsb2F0IjowLHVpOjAscG9zdDowLGN1
c3RJbmxheTowLGNhcHRjaGE6MH0sZW5jb2RlOmZhbHNlLGlzVUlQYXJhbTp7aW5s
YXk6dHJ1ZSwiZmxvYXQiOnRydWUsdWk6ZmFsc2UscG9zdDpmYWxzZSxjdXN0SW5s
YXk6ZmFsc2UsY2FwdGNoYTpmYWxzZX0sZ2V0OmZ1bmN0aW9uKCl7dHJ5e2lmKHRo
aXMuQkwuY2hlY2tGbG9hdEx1JiZ0aGlzLkJMLmNoZWNrRmxvYXRMdSh0aGlzLndp
bikmJnRoaXMuRy5CdXNpbmVzc0xvZ2ljLkRpc3RyaWJ1dGUuZGlzcGF0Y2goImZs
b2F0THUiLHtkaXNwbGF5VHlwZTp0aGlzLmRpc3BsYXlUeXBlLGRpc3BsYXlXaWR0
aDp0aGlzLmdldCgicnNpMCIpLGRpc3BsYXlIZWlnaHQ6dGhpcy5nZXQoInJzaTEi
KX0pKXtpZih0aGlzLkcuQnVzaW5lc3NMb2dpYy5EaXN0cmlidXRlLmRpc3BhdGNo
KCJmbG9hdEx1U2hvdyIse2Rpc3BsYXlUeXBlOnRoaXMuZGlzcGxheVR5cGUsZGlz
cGxheVdpZHRoOnRoaXMuZ2V0KCJyc2kwIiksZGlzcGxheUhlaWdodDp0aGlzLmdl
dCgicnNpMSIpfSkpe3JldHVybiAyfX19Y2F0Y2goYyl7fXJldHVybiAwfSxzZXQ6
ImRlZmF1bHQifSxub29wOntjdXN0UGFyYW1OYW1lOiIiLG1vZGlmaWVyOiJkeW5h
bWljIixkZWZhdWx0VmFsdWU6e3VpOm51bGwscG9zdDpudWxsfSxlbmNvZGU6ZmFs
c2UsaXNVSVBhcmFtOnt1aTpmYWxzZSxwb3N0OmZhbHNlfSxnZXQ6ImRlZmF1bHQi
LHNldDoiZGVmYXVsdCJ9fTtiLnJlZ2lzdGVyQ2xhc3MoYSl9KSh3aW5kb3dbX19f
YmFzZU5hbWVzcGFjZU5hbWVdKTsoZnVuY3Rpb24oYil7dmFyIGE9e2Z1bGxOYW1l
OiIkYmFzZU5hbWUuQnVzaW5lc3NMb2dpYy5EaXN0cmlidXRlIix2ZXJzaW9uOiIx
LjAuMCIscmVnaXN0ZXI6ZnVuY3Rpb24oKXt0aGlzLkc9Yi51c2luZygiJGJhc2VO
YW1lIix0aGlzLndpbik7dGhpcy5VPWIudXNpbmcoIiRiYXNlTmFtZS5VdGlsaXR5
Iix0aGlzLndpbil9LHN0YXR1czp7fSx2aWV3dGltZToxMDAsdmlld3RpbWVJRTox
MDAsZmxvYXRMdTp7cGVyY2VudDo0LGRpc3BsYXlUeXBlOiJmbG9hdCIsZGlzcGxh
eVdpZHRoOiIxMjAiLGRpc3BsYXlIZWlnaHQ6IjI3MCJ9LGZsb2F0THVTaG93Ontw
ZXJjZW50OjUwLGRpc3BsYXlUeXBlOiJmbG9hdCIsZGlzcGxheVdpZHRoOiIxMjAi
LGRpc3BsYXlIZWlnaHQ6IjI3MCJ9LGRpc3BhdGNoOmZ1bmN0aW9uKGksZCl7aWYo
dGhpcy5VLmlzSW5Dcm9zc0RvbWFpbklmcmFtZSgpKXtyZXR1cm4gZmFsc2V9dmFy
IGM9aTtpZihkKXtmb3IodmFyIGUgaW4gZCl7aWYoZSYmZFtlXSl7Yys9Il8iK2Rb
ZV0udG9TdHJpbmcoKX19fWlmKHRoaXMuc3RhdHVzW2MrIkRpc3BhdGNoZWQiXSl7
cmV0dXJuIHRoaXMuc3RhdHVzW2NdfXRoaXMuc3RhdHVzW2NdPWZhbHNlO3RoaXMu
c3RhdHVzW2MrIkRpc3BhdGNoZWQiXT10cnVlO3ZhciBnPTA7aWYoKHR5cGVvZiB0
aGlzW2ldKS50b0xvd2VyQ2FzZSgpPT09Im9iamVjdCIpe3ZhciBmPXRoaXNbaV07
Zz1mLnBlcmNlbnQ7aWYoZi5kaXNwbGF5VHlwZSl7aWYoIWQuZGlzcGxheVR5cGV8
fGYuZGlzcGxheVR5cGUhPT1kLmRpc3BsYXlUeXBlKXtyZXR1cm4gZmFsc2V9fWlm
KGYuZGlzcGxheVdpZHRoKXtpZighZC5kaXNwbGF5V2lkdGh8fGYuZGlzcGxheVdp
ZHRoIT09ZC5kaXNwbGF5V2lkdGgpe3JldHVybiBmYWxzZX19aWYoZi5kaXNwbGF5
SGVpZ2h0KXtpZighZC5kaXNwbGF5SGVpZ2h0fHxmLmRpc3BsYXlIZWlnaHQhPT1k
LmRpc3BsYXlIZWlnaHQpe3JldHVybiBmYWxzZX19fWVsc2V7aWYoKHR5cGVvZiB0
aGlzW2ldKS50b0xvd2VyQ2FzZSgpPT09Im51bWJlciIpe2c9dGhpc1tpXX19dmFy
IGg9cGFyc2VJbnQoTWF0aC5yYW5kb20oKSoxMDApO2lmKGcmJmg8Zyl7dGhpcy5z
dGF0dXNbY109dHJ1ZX1yZXR1cm4gdGhpcy5zdGF0dXNbY119fTtiLnJlZ2lzdGVy
Q2xhc3MoYSl9KSh3aW5kb3dbX19fYmFzZU5hbWVzcGFjZU5hbWVdKTsoZnVuY3Rp
b24oYil7dmFyIGE9e2Z1bGxOYW1lOiIkYmFzZU5hbWUuQnVzaW5lc3NMb2dpYy5W
aWV3V2F0Y2giLHZlcnNpb246IjEuMC4wIixyZWdpc3RlcjpmdW5jdGlvbigpe3Ro
aXMuRz1iLnVzaW5nKCIkYmFzZU5hbWUiLHRoaXMud2luKTt0aGlzLlU9Yi51c2lu
ZygiJGJhc2VOYW1lLlV0aWxpdHkiLHRoaXMud2luKTt0aGlzLkJMPWIudXNpbmco
IiRiYXNlTmFtZS5CdXNpbmVzc0xvZ2ljIix0aGlzLndpbil9LGFuYWx5c2lzVXJs
OiJodHRwOi8vZWNsaWNrLmJhaWR1LmNvbS9hLmpzIixsb25nVGltZTo3MjAwMDAw
LHVpUGFyYW1NYXBwaW5nOnt0dToidHUiLGRpZDoiZGlkIix0bjoidG4iLHdvcmQ6
IndvcmQiLGprOiJqayIsImlmIjoiaWYiLHJzaTA6ImF3Iixyc2kxOiJhaCIsY2g6
ImNoIixuOiJuIixqczoianMiLGR0OiJkdCJ9LHZpZXdDb250ZXh0UGFyYW1NYXBw
aW5nOntwYWdlU3RheVRpbWU6InB0IixwYWdlU3RheVRpbWVTdGFtcDoicHMiLGlu
Vmlld1RpbWU6Iml0IixpblZpZXdUaW1lU3RhbXA6ZmFsc2UsY3VyclZpZXdTdGF0
dXM6InZzIixmb2N1c1RpbWU6ImZ0IixhZFZpZXdUaW1lOiJ2dCIsY3VyckFkVmll
d1N0YXR1czpmYWxzZSxhZFZpZXdUaW1lU3RhbXA6ZmFsc2V9LGNsaWVudFBhcmFt
TWFwcGluZzp7b3BhY2l0eToib3AiLGRlc2t0b3BSZXNvbHV0aW9uOiJjc3AiLGJy
b3dzZXJSZWdpb246ImJjbCIscGFnZVJlZ2lvbjoicG9mIix0b3A6InRvcCIsbGVm
dDoibGVmdCIsZm9jdXNTd2l0Y2g6ImZzIn0sbGFzdFZpc2l0ZWRVcmw6e2N1cnJl
bnRJbmRleDowLHNlbmRJbmRleDowLG1heFNpemU6MTAscGFyYW1UaW1lTmFtZToi
bHZ0IixwYXJhbVVybE5hbWU6Imx2dSIscGFyYW1WYWx1ZTpbXX0saXNJRVdhdGNo
Rm9jdXM6dHJ1ZSxmb2N1c1N3aXRjaDp0cnVlLHdhdGNoQXJyYXlQb2ludGVyOm51
bGwsaW50ZXJ2YWxJZDpudWxsLGludGVydmFsVGltZVNwYW46NTAwLGludGVydmFs
U3RhdHVzOiJ3YWl0Iixpbml0aWFsaXplOmZ1bmN0aW9uKCl7dGhpcy53YXRjaEFy
cmF5UG9pbnRlcj10aGlzLkJMLmFkc0FycmF5fSxpbml0aWFsaXplRE9NOmZ1bmN0
aW9uKCl7fSxpbml0aWFsaXplRXZlbnQ6ZnVuY3Rpb24oKXt0aGlzLndpbmRvd09u
TG9hZCgpO3ZhciBjPXRoaXMuVS5wcm94eSh0aGlzLndpbmRvd09uTG9hZERlbGF5
LHRoaXMpO3RoaXMuVS5yZWFkeShjLDIwMDApO3RoaXMuVS5iaW5kKHRoaXMud2lu
LCJiZWZvcmV1bmxvYWQiLHRoaXMuVS5wcm94eSh0aGlzLndpbmRvd09uVW5sb2Fk
LHRoaXMpKX0sY2FsY3VsYXRlQ2xpZW50UGFyYW06ZnVuY3Rpb24oZixnLGUpe2Yu
Y2xpZW50UGFyYW09Zi5jbGllbnRQYXJhbXx8e307dmFyIGQ9dGhpcy5VLmdldFBv
c2l0aW9uKGcpO2YuY2xpZW50UGFyYW0ubGVmdD1kLmxlZnR8fDA7Zi5jbGllbnRQ
YXJhbS50b3A9ZC50b3B8fDA7Zi5jbGllbnRQYXJhbS5vcGFjaXR5PXRoaXMuVS5n
ZXRPcGFjaXR5KGcpO3ZhciBoPWUuc2NyZWVuLmF2YWlsV2lkdGg7dmFyIGM9ZS5z
Y3JlZW4uYXZhaWxIZWlnaHQ7aWYoaD4xMDAwMCl7aD0wfWlmKGM+MTAwMDApe2M9
MH1mLmNsaWVudFBhcmFtLmRlc2t0b3BSZXNvbHV0aW9uPWgrIiwiK2M7Zi5jbGll
bnRQYXJhbS5icm93c2VyUmVnaW9uPXRoaXMuVS5nZXRDbGllbnRXaWR0aChlKSsi
LCIrdGhpcy5VLmdldENsaWVudEhlaWdodChlKTtmLmNsaWVudFBhcmFtLnBhZ2VS
ZWdpb249dGhpcy5VLmdldFNjcm9sbFdpZHRoKGUpKyIsIit0aGlzLlUuZ2V0U2Ny
b2xsSGVpZ2h0KGUpO2YuY2xpZW50UGFyYW0uZm9jdXNTd2l0Y2g9dGhpcy5mb2N1
c1N3aXRjaH0sdXBkYXRlVmlld1N0YXR1czpmdW5jdGlvbihjLGYsZSl7dmFyIGg9
bmV3IERhdGUoKTt2YXIgZD1wYWdlVGltZVNwYW49dGhpcy5pbnRlcnZhbFRpbWVT
cGFuO3ZhciBnPWQ7aWYodGhpcy5pbnRlcnZhbFN0YXR1cz09PSJsb2FkIil7dGhp
cy5pbnRlcnZhbFN0YXR1cz0icnVuIjtkPXBhZ2VUaW1lU3Bhbj0wO2c9cGFnZVRp
bWVTcGFuPTB9aWYoYy5jdXJyVmlld1N0YXR1cyl7aWYodGhpcy5pbnRlcnZhbFN0
YXR1cz09PSJ1bmxvYWQiKXtkPXBhcnNlSW50KGguZ2V0VGltZSgpLWMuaW5WaWV3
VGltZVN0YW1wLmdldFRpbWUoKSk7aWYoZDwwKXtkPTB9ZWxzZXtpZihkPnRoaXMu
aW50ZXJ2YWxUaW1lU3Bhbil7ZD10aGlzLmludGVydmFsVGltZVNwYW59fX1jLmlu
Vmlld1RpbWUrPWQ7Yy5pblZpZXdUaW1lU3RhbXA9aDtpZihjLmluVmlld1RpbWU+
dGhpcy5sb25nVGltZSl7Yy5pblZpZXdUaW1lPXRoaXMubG9uZ1RpbWV9fWVsc2V7
aWYoZil7Yy5pblZpZXdUaW1lU3RhbXA9aDtjLmN1cnJWaWV3U3RhdHVzPWZ9fWlm
KGMuY3VyckFkVmlld1N0YXR1cyl7aWYodGhpcy5pbnRlcnZhbFN0YXR1cz09PSJ1
bmxvYWQiKXtnPXBhcnNlSW50KGguZ2V0VGltZSgpLWMuYWRWaWV3VGltZVN0YW1w
LmdldFRpbWUoKSk7aWYoZzwwKXtnPTB9ZWxzZXtpZihnPnRoaXMuaW50ZXJ2YWxU
aW1lU3Bhbil7Zz10aGlzLmludGVydmFsVGltZVNwYW59fX1jLmFkVmlld1RpbWUr
PWc7Yy5hZFZpZXdUaW1lU3RhbXA9aDtpZihjLmFkVmlld1RpbWU+dGhpcy5sb25n
VGltZSl7Yy5hZFZpZXdUaW1lPXRoaXMubG9uZ1RpbWV9fWVsc2V7aWYoZSl7Yy5h
ZFZpZXdUaW1lU3RhbXA9aDtjLmN1cnJBZFZpZXdTdGF0dXM9ZX19Yy5wYWdlU3Rh
eVRpbWU9Yy5wYWdlU3RheVRpbWV8fDA7aWYodGhpcy5pbnRlcnZhbFN0YXR1cz09
PSJ1bmxvYWQiKXtwYWdlVGltZVNwYW49cGFyc2VJbnQoaC5nZXRUaW1lKCktYy5w
YWdlU3RheVRpbWVTdGFtcC5nZXRUaW1lKCkpO2lmKHBhZ2VUaW1lU3BhbjwwKXtw
YWdlVGltZVNwYW49MH1lbHNle2lmKHBhZ2VUaW1lU3Bhbj50aGlzLmludGVydmFs
VGltZVNwYW4pe3BhZ2VUaW1lU3Bhbj10aGlzLmludGVydmFsVGltZVNwYW59fX1j
LnBhZ2VTdGF5VGltZSs9cGFnZVRpbWVTcGFuO2lmKHRoaXMuQkwud2luRm9jdXNl
ZCl7Yy5mb2N1c1RpbWUrPXBhZ2VUaW1lU3Bhbn1jLnBhZ2VTdGF5VGltZVN0YW1w
PWg7aWYoYy5wYWdlU3RheVRpbWU+PXRoaXMubG9uZ1RpbWUpe2MucGFnZVN0YXlU
aW1lPXRoaXMubG9uZ1RpbWV9cmV0dXJuIGN9LHZpZXdhYmxlQ29tcHV0ZTpmdW5j
dGlvbigpe3ZhciB0LGY7Zm9yKHQ9MCxmPXRoaXMud2F0Y2hBcnJheVBvaW50ZXIu
bGVuZ3RoO3Q8Zjt0Kyspe3ZhciB1PXRoaXMud2F0Y2hBcnJheVBvaW50ZXJbdF07
dmFyIGMsbT11LndpbixsPXUuZG9tSWQ7aWYobSYmbCl7Yz1tLmRvY3VtZW50Lmdl
dEVsZW1lbnRCeUlkKGwpfWlmKCFjKXtjb250aW51ZX1pZighdS52aWV3Q29udGV4
dCl7dmFyIGc9bmV3IERhdGUoKTt1LnZpZXdDb250ZXh0PXtwYWdlU3RheVRpbWU6
MCxwYWdlU3RheVRpbWVTdGFtcDpnLGluVmlld1RpbWU6MCxpblZpZXdUaW1lU3Rh
bXA6ZyxjdXJyVmlld1N0YXR1czpmYWxzZSxmb2N1c1RpbWU6MCxhZFZpZXdUaW1l
OjAsY3VyckFkVmlld1N0YXR1czpmYWxzZSxhZFZpZXdUaW1lU3RhbXA6ZyxvZmZs
aW5lQ29uZGl0aW9uSW5kZXg6MH19dmFyIHk9ZmFsc2U7dmFyIHM9ZmFsc2U7aWYo
IXRoaXMuQkwud2luRm9jdXNlZCl7eT1mYWxzZTtzPWZhbHNlfWVsc2V7dHJ5e3Zh
ciBwPXRoaXMuVS5nZXRDbGllbnRXaWR0aCh0aGlzLndpbik7dmFyIGU9dGhpcy5V
LmdldENsaWVudEhlaWdodCh0aGlzLndpbik7dmFyIHc9dGhpcy5VLmdldFBvc2l0
aW9uKGwsbSk7dmFyIGQ9dGhpcy5VLmdldFNjcm9sbFRvcCh0aGlzLndpbik7dmFy
IHE9dGhpcy5VLmdldFNjcm9sbExlZnQodGhpcy53aW4pO3ZhciBuPXRoaXMuVS5n
ZXRPdXRlcldpZHRoKGMpO3ZhciBvPXRoaXMuVS5nZXRPdXRlckhlaWdodChjKTt2
YXIgaD13LnRvcC1kK28qMC4zNTt2YXIgaz13LmxlZnQtcStuKjAuMzU7eT1oPjAm
Jmg8ZTt5PXkmJihrPjAmJms8cCk7aD13LnRvcC1kO2s9dy5sZWZ0LXE7dmFyIHI9
bipvO3ZhciB4PShlLWgpPm8/bzplLWg7dmFyIGo9KHAtayk+bj9uOnAtaztzPXgq
aj4wLjUqcj90cnVlOmZhbHNlfWNhdGNoKHYpe3k9ZmFsc2U7cz1mYWxzZTtjb250
aW51ZX19dS52aWV3Q29udGV4dD10aGlzLnVwZGF0ZVZpZXdTdGF0dXModS52aWV3
Q29udGV4dCx5LHMpO3UuYW5hbHlzaXNVcmw9dGhpcy5idWlsZEFuYWx5c2lzVXJs
KHRoaXMuYW5hbHlzaXNVcmwsdSxjKX19LGJ1aWxkQW5hbHlzaXNVcmw6ZnVuY3Rp
b24oYyxoLGcpe2lmKCFjfHwhaCl7cmV0dXJufXZhciBkPWMrIj8iO3ZhciBlPWgu
dWlQYXJhbVNuYXAsaj1bXTtmb3IodmFyIGYgaW4gdGhpcy51aVBhcmFtTWFwcGlu
Zyl7aWYoZiYmdGhpcy51aVBhcmFtTWFwcGluZ1tmXSYmZVtmXSl7ai5wdXNoKHRo
aXMudWlQYXJhbU1hcHBpbmdbZl0rIj0iK2VbZl0pfX1kKz1qLmpvaW4oIiYiKTtk
Kz0iJiIrdGhpcy5VLnBhcmFtKGgudmlld0NvbnRleHQsdGhpcy52aWV3Q29udGV4
dFBhcmFtTWFwcGluZyk7aWYoIWguY2xpZW50UGFyYW18fCFoLmNsaWVudFBhcmFt
LnBhZ2VSZWdpb24pe3RyeXt0aGlzLmNhbGN1bGF0ZUNsaWVudFBhcmFtKGgsZyx3
YXRjaFdpbil9Y2F0Y2goaSl7fX1pZihoLmNsaWVudFBhcmFtKXtkKz0iJiIrdGhp
cy5VLnBhcmFtKGguY2xpZW50UGFyYW0sdGhpcy5jbGllbnRQYXJhbU1hcHBpbmcp
fWVsc2V7Zm9yKHZhciBrIGluIHRoaXMuY2xpZW50UGFyYW1NYXBwaW5nKXtpZihr
JiZ0aGlzLmNsaWVudFBhcmFtTWFwcGluZ1trXSl7ZCs9IiYiK3RoaXMuY2xpZW50
UGFyYW1NYXBwaW5nW2tdKyI9In19fXJldHVybiBkfSx2aWV3T25DaGFuZ2U6ZnVu
Y3Rpb24oKXt0aGlzLnZpZXdhYmxlQ29tcHV0ZSgpO2lmKHRoaXMud2F0Y2hBcnJh
eVBvaW50ZXJbMF0udmlld0NvbnRleHQucGFnZVN0YXlUaW1lPj10aGlzLmxvbmdU
aW1lKXt0aGlzLndpbmRvd09uVW5sb2FkKGZhbHNlKX19LHdpbmRvd09uTG9hZDpm
dW5jdGlvbihnKXt2YXIgYyxkLGY9bmV3IERhdGUoKTtmb3IoYz0wLGQ9dGhpcy53
YXRjaEFycmF5UG9pbnRlci5sZW5ndGg7YzxkO2MrKyl7dGhpcy53YXRjaEFycmF5
UG9pbnRlcltjXS52aWV3Q29udGV4dD17cGFnZVN0YXlUaW1lOjAscGFnZVN0YXlU
aW1lU3RhbXA6ZixpblZpZXdUaW1lOjAsaW5WaWV3VGltZVN0YW1wOmYsY3VyclZp
ZXdTdGF0dXM6ZmFsc2UsZm9jdXNUaW1lOjAsYWRWaWV3VGltZTowLGN1cnJBZFZp
ZXdTdGF0dXM6ZmFsc2UsYWRWaWV3VGltZVN0YW1wOmYsb2ZmbGluZUNvbmRpdGlv
bkluZGV4OjB9fXRoaXMuaW50ZXJ2YWxTdGF0dXM9ImxvYWQiO3RoaXMuZm9jdXNT
d2l0Y2g9dGhpcy53aW5Gb2N1c0JsdXJPbkNoYW5nZSh0aGlzLndpbix0aGlzLmlz
SUVXYXRjaEZvY3VzKTtpZighdGhpcy5VLmJyb3dzZXIuaWV8fCh0aGlzLlUuYnJv
d3Nlci5pZSYmdGhpcy5VLmJyb3dzZXIuaWU+Nikpe3RoaXMudmlld09uQ2hhbmdl
KCl9dGhpcy5pbnRlcnZhbElkPXNldEludGVydmFsKHRoaXMuVS5wcm94eSh0aGlz
LnZpZXdPbkNoYW5nZSx0aGlzKSx0aGlzLmludGVydmFsVGltZVNwYW4pfSx3aW5k
b3dPbkxvYWREZWxheTpmdW5jdGlvbihvKXt2YXIgcz10aGlzLndpbi5kb2N1bWVu
dC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpO3ZhciBrPXMubGVuZ3RofHwwO3Zh
ciBmPVtdO2lmKHRoaXMuVS5pc0luSWZyYW1lKCkpe2Y9d2luZG93LmRvY3VtZW50
LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhIil9dmFyIHE9aytmLmxlbmd0aDt2YXIg
ZD1mYWxzZTtpZih0aGlzLlUuYnJvd3Nlci5pZSYmdGhpcy5VLmJyb3dzZXIuaWU8
PTcmJnE+NTAwKXtkPWZhbHNlfWVsc2V7aWYocTwxMDAwKXtkPXRydWV9fWlmKGQp
e2Zvcih2YXIgaj0wO2o8cTtqKyspe3ZhciBjPXRoaXM7dmFyIGc7aWYoai1rPj0w
JiZmW2ota10pe2c9ZltqLWtdfWVsc2V7aWYoc1tqXSl7Zz1zW2pdfX1pZighZyl7
Y29udGludWV9dGhpcy5VLmJpbmQoZywiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIGks
dCx1O3ZhciBpPXdpbmRvdy5ldmVudD93aW5kb3cuZXZlbnQ6YXJndW1lbnRzWzBd
O2lmKGkpe3Q9aS50YXJnZXR8fGkuc3JjRWxlbWVudDtpZih0JiZ0LmhyZWYpe3U9
dC5ocmVmfWVsc2V7cmV0dXJufX1lbHNle3JldHVybn12YXIgZT1jLmxhc3RWaXNp
dGVkVXJsLmN1cnJlbnRJbmRleDtjLmxhc3RWaXNpdGVkVXJsLnBhcmFtVmFsdWVb
ZV09e307Yy5sYXN0VmlzaXRlZFVybC5wYXJhbVZhbHVlW2VdLnVybD1lbmNvZGVV
UklDb21wb25lbnQodSkuc3Vic3RyaW5nKDAsMzAwKTtjLmxhc3RWaXNpdGVkVXJs
LnBhcmFtVmFsdWVbZV0udGltZT0oKG5ldyBEYXRlKCkpLmdldFRpbWUoKSkudG9T
dHJpbmcoKTtpZihlPGMubGFzdFZpc2l0ZWRVcmwubWF4U2l6ZS0xKXtjLmxhc3RW
aXNpdGVkVXJsLnNlbmRJbmRleD1jLmxhc3RWaXNpdGVkVXJsLmN1cnJlbnRJbmRl
eDtjLmxhc3RWaXNpdGVkVXJsLmN1cnJlbnRJbmRleCsrfWVsc2V7Yy5sYXN0Vmlz
aXRlZFVybC5zZW5kSW5kZXg9Yy5sYXN0VmlzaXRlZFVybC5jdXJyZW50SW5kZXg7
Yy5sYXN0VmlzaXRlZFVybC5jdXJyZW50SW5kZXg9MH19KX19dmFyIGosbCxoPW5l
dyBEYXRlKCkscCxuLHIsbTtmb3Ioaj0wLGw9dGhpcy53YXRjaEFycmF5UG9pbnRl
ci5sZW5ndGg7ajxsO2orKyl7dmFyIHA9dGhpcy53YXRjaEFycmF5UG9pbnRlcltq
XTtpZighcCl7Y29udGludWV9cj1wLndpbjttPXAuZG9tSWQ7aWYociYmbSl7bj1y
LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG0pfWlmKCFuKXtjb250aW51ZX1wLmNs
aWVudFBhcmFtPXAuY2xpZW50UGFyYW18fHt9O3RoaXMuY2FsY3VsYXRlQ2xpZW50
UGFyYW0ocCxuLHIpfX0sd2luZG93T25VbmxvYWQ6ZnVuY3Rpb24obSl7dHJ5e2Ns
ZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKTtpZihkb2N1bWVudC5kb21haW4u
dG9Mb3dlckNhc2UoKS5pbmRleE9mKCJhdXRvaG9tZS5jb20uY24iKT4tMXx8ZG9j
dW1lbnQuZG9tYWluLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigic2luYS5jb20uY24i
KT4tMXx8ZG9jdW1lbnQuZG9tYWluLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigieGNh
ci5jb20uY24iKT4tMSl7cmV0dXJufWlmKHRoaXMuaW50ZXJ2YWxTdGF0dXMhPT0i
cnVuIil7dGhpcy5pbnRlcnZhbFN0YXR1cz0idW5sb2FkIjtyZXR1cm59dGhpcy5p
bnRlcnZhbFN0YXR1cz0idW5sb2FkIjt2YXIgZyxmLGsscCxuLGM7dGhpcy52aWV3
YWJsZUNvbXB1dGUoKTtmb3IoZz0wLGs9dGhpcy53YXRjaEFycmF5UG9pbnRlci5s
ZW5ndGg7ZzxrO2crKyl7cD10aGlzLndhdGNoQXJyYXlQb2ludGVyW2ddO2lmKHAm
JnAuYW5hbHlzaXNVcmwmJiFwLmlzU2VuZGVkKXtwLmlzU2VuZGVkPXRydWU7aWYo
Zz09MCl7cC5hbmFseXNpc1VybCs9IiZ0b3RhbD0iK3RoaXMud2F0Y2hBcnJheVBv
aW50ZXIubGVuZ3RofXZhciBqPXRoaXMubGFzdFZpc2l0ZWRVcmwuc2VuZEluZGV4
O2lmKGo8MCl7aj10aGlzLmxhc3RWaXNpdGVkVXJsLm1heFNpemUtMTt0aGlzLmxh
c3RWaXNpdGVkVXJsLnNlbmRJbmRleD1qfWlmKHRoaXMubGFzdFZpc2l0ZWRVcmwm
JnRoaXMubGFzdFZpc2l0ZWRVcmwucGFyYW1WYWx1ZSYmajx0aGlzLmxhc3RWaXNp
dGVkVXJsLnBhcmFtVmFsdWUubGVuZ3RoKXtwLmFuYWx5c2lzVXJsKz0iJiIrdGhp
cy5sYXN0VmlzaXRlZFVybC5wYXJhbVVybE5hbWUrIjE9Iit0aGlzLmxhc3RWaXNp
dGVkVXJsLnBhcmFtVmFsdWVbal0udXJsO3AuYW5hbHlzaXNVcmwrPSImIit0aGlz
Lmxhc3RWaXNpdGVkVXJsLnBhcmFtVGltZU5hbWUrIjE9Iit0aGlzLmxhc3RWaXNp
dGVkVXJsLnBhcmFtVmFsdWVbal0udGltZTt0aGlzLmxhc3RWaXNpdGVkVXJsLnNl
bmRJbmRleC0tO2otLTtpZihqPDApe2o9dGhpcy5sYXN0VmlzaXRlZFVybC5tYXhT
aXplLTE7dGhpcy5sYXN0VmlzaXRlZFVybC5zZW5kSW5kZXg9an1pZih0aGlzLmxh
c3RWaXNpdGVkVXJsJiZ0aGlzLmxhc3RWaXNpdGVkVXJsLnBhcmFtVmFsdWUmJmo8
dGhpcy5sYXN0VmlzaXRlZFVybC5wYXJhbVZhbHVlLmxlbmd0aCl7cC5hbmFseXNp
c1VybCs9IiYiK3RoaXMubGFzdFZpc2l0ZWRVcmwucGFyYW1VcmxOYW1lKyIyPSIr
dGhpcy5sYXN0VmlzaXRlZFVybC5wYXJhbVZhbHVlW2pdLnVybDtwLmFuYWx5c2lz
VXJsKz0iJiIrdGhpcy5sYXN0VmlzaXRlZFVybC5wYXJhbVRpbWVOYW1lKyIyPSIr
dGhpcy5sYXN0VmlzaXRlZFVybC5wYXJhbVZhbHVlW2pdLnRpbWU7dGhpcy5sYXN0
VmlzaXRlZFVybC5zZW5kSW5kZXgtLTtqLS19fXRoaXMuVS5zZW5kUmVxdWVzdFZp
YUltYWdlKHAuYW5hbHlzaXNVcmwsdGhpcy53aW4pfX1pZihtKXt2YXIgaD0yMDA7
dmFyIGw9KG5ldyBEYXRlKCkpLmdldFRpbWUoKTt2YXIgZDtpZih0aGlzLlUuYnJv
d3Nlci5pZSl7ZD1sK2g7d2hpbGUoZD5sKXtsPShuZXcgRGF0ZSgpKS5nZXRUaW1l
KCl9fWVsc2V7dmFyIGs9MTAwMDAwO2Zvcih2YXIgZz0wO2c8aztnKyspe31kPShu
ZXcgRGF0ZSgpKS5nZXRUaW1lKCk7az0xMDAwMDAqaC8oZC1sKTtrPWs+MTAwMDAw
MDA/MTAwMDAwMDA6aztmb3IodmFyIGc9MDtnPGs7ZysrKXt9fX19Y2F0Y2gobyl7
fX0sd2luRm9jdXNCbHVyT25DaGFuZ2U6ZnVuY3Rpb24oZSl7dmFyIGM9ZmFsc2Us
ZT1lfHx0aGlzLndpbjt0aGlzLkJMLndpbkZvY3VzZWQ9dHJ1ZTt2YXIgZj10aGlz
LlUucHJveHkoZnVuY3Rpb24oZyl7dGhpcy5CTC53aW5Gb2N1c2VkPXRydWV9LHRo
aXMpO3ZhciBkPXRoaXMuVS5wcm94eShmdW5jdGlvbihnKXt0aGlzLkJMLndpbkZv
Y3VzZWQ9ZmFsc2V9LHRoaXMpO2lmKHRoaXMuVS5icm93c2VyLmllfHx0aGlzLlUu
YnJvd3Nlci5tYXh0aG9uKXt0aGlzLlUuYmluZChlLCJmb2N1c2luIixmKTt0aGlz
LlUuYmluZChlLCJmb2N1c291dCIsZCk7Yz10cnVlfWVsc2V7dGhpcy5VLmJpbmQo
ZSwiZm9jdXMiLGYpO3RoaXMuVS5iaW5kKGUsImJsdXIiLGQpO2M9dHJ1ZX1yZXR1
cm4gY30sZ2V0SW5zdGFuY2U6ZnVuY3Rpb24oKXtpZighdGhpcy5pbnN0YW5jZXN8
fHRoaXMuaW5zdGFuY2VzLmxlbmd0aDwxKXt0aGlzLmluc3RhbmNlcz1bXTt2YXIg
Yz10aGlzLkcuY3JlYXRlKHRoaXMpO3RoaXMuaW5zdGFuY2VzLnB1c2goYyl9fX07
Yi5yZWdpc3RlckNsYXNzKGEpfSkod2luZG93W19fX2Jhc2VOYW1lc3BhY2VOYW1l
XSk7KGZ1bmN0aW9uKGwpe3ZhciBsPWw7dmFyIGQ9bC51c2luZygiJGJhc2VOYW1l
LlV0aWxpdHkiKTt2YXIgcj1sLnVzaW5nKCIkYmFzZU5hbWUuQnVzaW5lc3NMb2dp
YyIpO3ZhciBtO3ZhciBhPSJjIjt2YXIgaz0iaW5sYXkiO3ZhciBzPSJCQUlEVV9D
UFJPX1NFVEpTT05BRFNMT1QiO3ZhciBxPWZhbHNlO3IucmFuZG9tQXJyYXkucHVz
aChNYXRoLnJhbmRvbSgpKjEwMDAwMDApO3ZhciBlPXdpbmRvd1tzXT1mdW5jdGlv
bihELE0pe3ZhciBOPXt9O3ZhciBDPW51bGw7dmFyIHY9e307dmFyIEI9e307dmFy
IE89e307dmFyIEk9MDtyLnJhbmRvbUFycmF5LnB1c2goTWF0aC5yYW5kb20oKSox
MDAwMDAwKTtOPXIucGFyc2VTbG90RGF0YUZyb21VbmlvbihEKTtDPXIuZ2V0U2xv
dERhdGFGcm9tVXNlck9wZW5BcGkoKTtpZihDKXtJPTE7dj1kLmV4dGVuZChOLEMp
fWVsc2V7dj1OfU89bC5jcmVhdGUoci5QYXJhbSx7ZGlzcGxheVR5cGU6ayxjdXJy
ZW50V2luZG93OndpbmRvdyx0aW1lU3RhbXA6KG5ldyBEYXRlKCkpLmdldFRpbWUo
KX0pO0I9ci5QYXJhbS5nZXRTbG90MlVJTWFwcGluZyhPKTtPPXIuUGFyYW0ubWVy
Z2VTbG90MlVJKE8sdixCKTtPLnNldCgianMiLGEpO2lmKEkpe08uc2V0KCJjMDEi
LDEpfXZhciBpPU18fCJjcHJvXyIrTy5nZXQoInR1Iik7dmFyIHc9ZC5nKGkpO3Zh
ciB6PXc/dHJ1ZTpmYWxzZTt2YXIgTD1PLmdldCgicnNpMCIpO3ZhciBBPU8uZ2V0
KCJyc2kxIik7dmFyIEo9Ty5nZXQoImF0Iik7dmFyIEg9Ty5hdC5fdmFsdWU7dmFy
IEc9Ty5nZXQoInRuIikudG9TdHJpbmcoKTtpZihyLmlzUHJldmlldyhMLEEsayxK
KSl7aWYoeil7d2luZG93LmNwcm9QcmV2aWV3QXJyYXk9d2luZG93LmNwcm9QcmV2
aWV3QXJyYXl8fFtdO3dpbmRvdy5jcHJvUHJldmlld0FycmF5LnB1c2goe2RvbUlk
OmksdGVtcGxhdGU6Ryx3aWR0aDpMLnRvU3RyaW5nKCksaGVpZ2h0OkEudG9TdHJp
bmcoKSxhdDpIfSk7dmFyIEs9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiU0NSSVBU
Iik7Sy5zZXRBdHRyaWJ1dGUoInR5cGUiLCJ0ZXh0L2phdmFzY3JpcHQiKTtLLnNl
dEF0dHJpYnV0ZSgic3JjIiwiaHR0cDovL2Nwcm8uYmFpZHUuY29tL2Nwcm8vdWkv
aW5sYXlQcmV2aWV3LmpzIik7dmFyIEY9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRh
Z05hbWUoInNjcmlwdCIpWzBdO0YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoSyxG
KX1lbHNle3dpbmRvdy5jcHJvX2lzU3luY1ByZXZpZXc9dHJ1ZTt3aW5kb3cuY3By
b190ZW1wbGF0ZT1PLmdldCgidG4iKS50b1N0cmluZygpO3dpbmRvdy5jcHJvX3c9
TC50b1N0cmluZygpO3dpbmRvdy5jcHJvX2g9QS50b1N0cmluZygpO3dpbmRvdy5j
cHJvX2F0PU8uYXQuX3ZhbHVlO2RvY3VtZW50LndyaXRlKCc8c2NyaXB0IHR5cGU9
InRleHQvamF2YXNjcmlwdCIgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiIHNyYz0iaHR0
cDovL2Nwcm8uYmFpZHUuY29tL2Nwcm8vdWkvaW5sYXlQcmV2aWV3LmpzIj48XC9z
Y3JpcHQ+Jyl9fWVsc2V7aWYoci5jaGVja0Fkc0NvdW50ZXIoayx3aW5kb3csRykp
e3JldHVybn12YXIgdD0nPGRpdiBzdHlsZT0iZGlzcGxheTpub25lIj4tPC9kaXY+
IDxpZnJhbWUgaWQ9IntpZnJhbWVJZH0ic3JjPSJ7Y3Byb1NlcnZpY2VVcmx9P3tw
YXJhbVN0cmluZ30iIHdpZHRoPSJ7aWZyYW1lV2lkdGh9IiBoZWlnaHQ9IntpZnJh
bWVIZWlnaHR9IiBhbGlnbj0iY2VudGVyLGNlbnRlciIgbWFyZ2lud2lkdGg9IjAi
ICBtYXJnaW5oZWlnaHQ9IjAiIHNjcm9sbGluZz0ibm8iIGZyYW1lYm9yZGVyPSIw
IiBhbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIgPjwvaWZyYW1lPic7dmFyIEU9ci5n
ZXRBZHNEb21JZChPLmdldCgiZGlkIikpO3ZhciB5PXIuUGFyYW0uc2VyaWFsaXpl
KE8pO3ZhciB1PXtpZnJhbWVJZDpFLHBhcmFtU3RyaW5nOnksaWZyYW1lV2lkdGg6
TCxpZnJhbWVIZWlnaHQ6QSxjcHJvU2VydmljZVVybDpyLmNwcm9TZXJ2aWNlVXJs
fTtpZih6fHxNKXtpZih3KXt3LmlubmVySFRNTD1kLnRlbXBsYXRlKHQsdSl9fWVs
c2V7ZG9jdW1lbnQud3JpdGUoZC50ZW1wbGF0ZSh0LHUpKX12YXIgeD1yLlBhcmFt
LnNuYXAoTyk7ci5hZHNBcnJheS5wdXNoKHtkb21JZDpFLHVpUGFyYW1TbmFwOngs
d2luOndpbmRvdyxqczphfSk7ci5hZGRBZHNDb3VudGVyKGssd2luZG93LEcpO08u
c2V0KCJkaWQiKTtPLnNldCgiY24iKTtPLnNldCgicG4iKTtpZighcSYmci5EaXN0
cmlidXRlLmRpc3BhdGNoKCJ2aWV3dGltZSIpKXtyLlZpZXdXYXRjaC5nZXRJbnN0
YW5jZSgpfXIuaW5pdFBhcmFtKHdpbmRvdyl9fTt2YXIgaD13aW5kb3cuQkFJRFVf
Q0xCX0NQUk9DU0xPVD1mdW5jdGlvbih0LGkpe3ZhciB1PXIuZ2V0U2xvdERhdGFG
cm9tQ0IodCxpKTtpZih1KXtlKHUpfX07aWYoYT09PSJjYyIpe3ZhciBuPXdpbmRv
dy5CQUlEVV9DTEJfQ1BST0FTWU5DU0xPVD1mdW5jdGlvbih0KXt0Ll9odG1sPXQu
ZGF0YTt2YXIgaT1yLmdldFNsb3REYXRhRnJvbUNCKHQuaWQsdCk7aWYoaSl7ZShp
LHQuZG9taWQpfX07aWYod2luZG93LkJBSURVX0NMQl9BU1lOU0xPVFMmJndpbmRv
dy5CQUlEVV9DTEJfQVNZTlNMT1RTLmxlbmd0aD4wKXtmb3IodmFyIG8gaW4gd2lu
ZG93LkJBSURVX0NMQl9BU1lOU0xPVFMpe24od2luZG93LkJBSURVX0NMQl9BU1lO
U0xPVFNbb10pfXdpbmRvdy5CQUlEVV9DTEJfQVNZTlNMT1RTPVtdfX1lbHNle2lm
KGE9PT0iYyIpe3ZhciBjPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJz
Y3JpcHQiKTt2YXIgaj1jW2MubGVuZ3RoLTFdLnNyYzt2YXIgZj1kLmdldFBhcmEo
aik7ci5pc0FzeW49Zi5hc3luO2lmKHdpbmRvdy5jcHJvQXJyYXkpe3ZhciBiPVtd
O2Zvcih2YXIgbz0wLGc9d2luZG93LmNwcm9BcnJheS5sZW5ndGg7bzxnO28rKyl7
Yi5wdXNoKHdpbmRvdy5jcHJvQXJyYXlbb10uaWQpfWlmKGImJmIubGVuZ3RoPjAp
e3IuZ2V0U2xvdERhdGFGcm9tVW5pb24oYixzLHRydWUpfXdpbmRvdy5jcHJvQXJy
YXk9bnVsbH1pZih3aW5kb3cuY3Byb19pZCl7dmFyIHA9d2luZG93LmNwcm9faWQ7
aWYocCYmL2Nwcm9fdGVtcGxhdGU9L2dpLnRlc3QocCkpe3E9dHJ1ZTt3aW5kb3db
c10oeyIwIjp7X2h0bWw6cH19KX1lbHNle2lmKHApe3IuZ2V0U2xvdERhdGFGcm9t
VW5pb24ocCxzKX19fX19fSkod2luZG93W19fX2Jhc2VOYW1lc3BhY2VOYW1lXSk7

------------e25euX8Ol7ukWO0i9gLjSV
Content-Disposition: inline; filename=156.htm
Content-Type: text/html; name=156.htm
Content-Location: http://www.iteye.com/iframe_ggbd/156
Content-Transfer-Encoding: 8bit

        <html>
        <head></head>
        <body style="margin:0"><script type="text/javascript">/*468*60，iteye新闻内页页底*/ var cpro_id = 'u671994';</script><script src="http://cpro.baidu.com/cpro/ui/c.js" type="text/javascript"></script></body>
        </html>

------------e25euX8Ol7ukWO0i9gLjSV--
